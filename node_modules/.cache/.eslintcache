[{"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/index.tsx":"1","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/reportWebVitals.ts":"2","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/App.tsx":"3","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/Content.tsx":"4","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/Footer.tsx":"5","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/About.tsx":"6","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/Home.tsx":"7","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/AddToDo.tsx":"8","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/redux-store/store.ts":"9","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/dev/devMenu.tsx":"10","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/redux-store/RootReducer.ts":"11","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/helpers/consts.ts":"12","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/helpers/CRUD/create.ts":"13","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/Todo.tsx":"14","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/ToDoTask/AddToDoTask.tsx":"15","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/helpers/CRUD/delete.ts":"16","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/helpers/CRUD/read.ts":"17","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/ToDoTask/RenderTasks.tsx":"18","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/ToDoTask/ToDoTask.tsx":"19","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/helpers/CRUD/update.ts":"20","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/Header/Header.tsx":"21","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/Header/Logo.tsx":"22","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/errors/RenderError.tsx":"23","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/index.tsx":"24","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/reportWebVitals.ts":"25","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/App.tsx":"26","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/redux-store/store.ts":"27","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/Footer.tsx":"28","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/Header/Header.tsx":"29","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/Content.tsx":"30","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/errors/RenderError.tsx":"31","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/redux-store/RootReducer.ts":"32","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/Header/Logo.tsx":"33","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/Home.tsx":"34","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/About.tsx":"35","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/CRUD/create.ts":"36","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/CRUD/read.ts":"37","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/CRUD/delete.ts":"38","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/CRUD/update.ts":"39","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/consts.ts":"40","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/dev/devMenu.tsx":"41","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/calculate.ts":"42","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/CurrentDeck.tsx":"43","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/redux-store/rootReducer.ts":"44","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/Login.tsx":"45","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/RenderDeck.tsx":"46"},{"size":601,"mtime":1677839562298,"results":"47","hashOfConfig":"48"},{"size":425,"mtime":1677835674082,"results":"49","hashOfConfig":"48"},{"size":650,"mtime":1678367444343,"results":"50","hashOfConfig":"48"},{"size":333,"mtime":1677839726721,"results":"51","hashOfConfig":"48"},{"size":532,"mtime":1678362759184,"results":"52","hashOfConfig":"48"},{"size":1084,"mtime":1678367405032,"results":"53","hashOfConfig":"48"},{"size":1119,"mtime":1678361644478,"results":"54","hashOfConfig":"48"},{"size":904,"mtime":1678358129987,"results":"55","hashOfConfig":"48"},{"size":553,"mtime":1678258234708,"results":"56","hashOfConfig":"48"},{"size":5083,"mtime":1678360035682,"results":"57","hashOfConfig":"48"},{"size":3365,"mtime":1678367312095,"results":"58","hashOfConfig":"48"},{"size":184,"mtime":1678192650378,"results":"59","hashOfConfig":"48"},{"size":907,"mtime":1678355790828,"results":"60","hashOfConfig":"48"},{"size":2517,"mtime":1678357690996,"results":"61","hashOfConfig":"48"},{"size":1091,"mtime":1678284899048,"results":"62","hashOfConfig":"48"},{"size":605,"mtime":1678290666148,"results":"63","hashOfConfig":"48"},{"size":697,"mtime":1678290172673,"results":"64","hashOfConfig":"48"},{"size":859,"mtime":1678356066700,"results":"65","hashOfConfig":"48"},{"size":1465,"mtime":1678357051288,"results":"66","hashOfConfig":"48"},{"size":778,"mtime":1678356767247,"results":"67","hashOfConfig":"48"},{"size":3033,"mtime":1678361342355,"results":"68","hashOfConfig":"48"},{"size":2888,"mtime":1678359131993,"results":"69","hashOfConfig":"48"},{"size":1310,"mtime":1678366964337,"results":"70","hashOfConfig":"48"},{"size":601,"mtime":1677839562298,"results":"71","hashOfConfig":"72"},{"size":425,"mtime":1677835674082,"results":"73","hashOfConfig":"72"},{"size":953,"mtime":1678450153346,"results":"74","hashOfConfig":"72"},{"size":546,"mtime":1678423187864,"results":"75","hashOfConfig":"72"},{"size":532,"mtime":1678362759184,"results":"76","hashOfConfig":"72"},{"size":5657,"mtime":1678467386301,"results":"77","hashOfConfig":"72"},{"size":648,"mtime":1678443359400,"results":"78","hashOfConfig":"72"},{"size":1310,"mtime":1678464665764,"results":"79","hashOfConfig":"72"},{"size":4681,"mtime":1678464558275,"results":"80","hashOfConfig":"72"},{"size":666,"mtime":1678463534072,"results":"81","hashOfConfig":"72"},{"size":1149,"mtime":1678464073462,"results":"82","hashOfConfig":"72"},{"size":1033,"mtime":1678465918714,"results":"83","hashOfConfig":"72"},{"size":455,"mtime":1678451905281,"results":"84","hashOfConfig":"72"},{"size":1522,"mtime":1678454259794,"results":"85","hashOfConfig":"72"},{"size":613,"mtime":1678384337710,"results":"86","hashOfConfig":"72"},{"size":440,"mtime":1678383945745,"results":"87","hashOfConfig":"72"},{"size":286,"mtime":1678418732797,"results":"88","hashOfConfig":"72"},{"size":4355,"mtime":1678452973211,"results":"89","hashOfConfig":"72"},{"size":309,"mtime":1678418524579,"results":"90","hashOfConfig":"72"},{"size":10691,"mtime":1678465818479,"results":"91","hashOfConfig":"72"},{"size":4648,"mtime":1678452674384,"results":"92","hashOfConfig":"72"},{"size":1970,"mtime":1678463803967,"results":"93","hashOfConfig":"72"},{"size":1191,"mtime":1678446167558,"results":"94","hashOfConfig":"72"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1evn5b4",{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gn43qv",{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"112"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/index.tsx",[],[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/reportWebVitals.ts",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/App.tsx",["259","260"],[],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Content from './components/content/Content';\nimport Footer from './components/Footer';\nimport {Provider} from 'react-redux';\nimport {store} from './redux-store/store';\nimport DevMenu from './dev/devMenu';\nimport RenderError from './errors/RenderError';\n\nfunction App() {\n   return (\n      <>\n         <Provider store={store}>\n            <Header />\n            <Content />\n            <RenderError />\n            <Footer />\n            {/* <DevMenu /> */}\n         </Provider>\n      </>\n   );\n}\n\nexport default App;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/Content.tsx",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/Footer.tsx",["261"],[],"import {Container, Typography} from '@mui/material';\nimport React from 'react';\n\nconst Footer = () => {\n   return (\n      <Container\n         maxWidth=\"lg\"\n         sx={{\n            marginBottom: '2rem',\n            marginTop: '2rem',\n         }}\n      >\n         <Typography sx={{textAlign: 'center'}}>\n            &copy; 2023 crafted by{' '}\n            <a target=\"_blank\" href=\"https://soltonbaev.com\">\n               Ibraim Soltonbaev\n            </a>\n         </Typography>\n      </Container>\n   );\n};\n\nexport default Footer;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/About.tsx",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/Home.tsx",["262","263","264","265","266"],[],"import {Masonry} from '@mui/lab';\nimport {Container, Grid} from '@mui/material';\nimport React, {useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport {getTasks, getTodos, useGlobalState} from '../../helpers/CRUD/read';\nimport {RootState, useAppDispatch} from '../../redux-store/store';\nimport AddToDo from './ToDo/AddToDo';\nimport Todo from './ToDo/Todo';\n\nconst Home = () => {\n   const dispatch = useAppDispatch();\n   const globalState = useGlobalState();\n   useEffect(() => {\n      dispatch(getTodos());\n      dispatch(getTasks());\n   }, []);\n\n   return (\n      <Container maxWidth=\"lg\" sx={{minHeight: '50vh', marginTop: '5rem'}}>\n         <Masonry columns={{xs: 1, sm: 2, md: 3, lg: 4}} spacing={2}>\n            {globalState.todos.map(todo => {\n               return (\n                  <Todo\n                     key={todo.id}\n                     title={todo.title}\n                     color={todo.color}\n                     id={todo.id}\n                  />\n               );\n            })}\n         </Masonry>\n         {/* <AddToDo /> */}\n      </Container>\n   );\n};\n\nexport default Home;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/AddToDo.tsx",["267"],[],"import {Grid, Icon, IconButton, Paper, Typography} from '@mui/material';\nimport React from 'react';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport {useAppDispatch} from '../../../redux-store/store';\nimport {addToDo} from '../../../helpers/CRUD/create';\n\nconst AddToDo = () => {\n   const dispatch = useAppDispatch();\n   return (\n      <Grid item lg={3}>\n         <Paper elevation={5} sx={{width: '15rem', height: '15rem'}}>\n            <IconButton\n               onClick={() => {\n                  dispatch(addToDo());\n               }}\n               sx={{width: '100%'}}\n            >\n               <AddCircleOutlineIcon sx={{fontSize: '12rem'}} />\n            </IconButton>\n            <Typography sx={{textAlign: 'center', marginBottom: '1rem'}}>\n               Add New Note\n            </Typography>\n         </Paper>\n      </Grid>\n   );\n};\n\nexport default AddToDo;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/redux-store/store.ts",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/dev/devMenu.tsx",["268","269","270","271"],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/redux-store/RootReducer.ts",["272","273","274","275","276","277","278","279","280"],[],"import React from 'react';\nimport {createAsyncThunk, createSlice, current} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {TODOS} from '../helpers/consts';\nimport {GlobalState, Todo} from '../helpers/types';\nimport {addTask, addToDo, generateRandomColor} from '../helpers/CRUD/create';\nimport {getTasks, getTodos} from '../helpers/CRUD/read';\nimport {deleteTask, deleteTodo} from '../helpers/CRUD/delete';\nimport {toggleCompleted, updateTitle} from '../helpers/CRUD/update';\n\nconst initialState: GlobalState = {\n   todos: [],\n   tasks: [],\n   info: {},\n   //    notes: [],\n   //    type: '',\n   //    title: '',\n};\n\nexport const RootReducer = createSlice({\n   name: 'todo_app',\n   initialState,\n   reducers: {},\n   extraReducers(builder) {\n      builder.addCase(addToDo.rejected, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'error',\n            message: 'Unable to add the list. Server or internet down',\n         };\n      });\n      builder.addCase(addToDo.pending, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'warning',\n            message: 'Adding a list...',\n         };\n      });\n      builder.addCase(addToDo.fulfilled, (state, action) => {\n         state.todos.push(action.payload);\n         state.info = {\n            switchModalOn: false,\n            type: 'success',\n            message: 'List added',\n         };\n      });\n      builder.addCase(getTodos.fulfilled, (state, action) => {\n         state.todos = action.payload;\n         state.info = {\n            switchModalOn: false,\n            type: 'success',\n            message: 'Lists loaded successfully...',\n         };\n      });\n      builder.addCase(getTodos.pending, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'warning',\n            message: 'Please wait while lists are loading...',\n         };\n      });\n      builder.addCase(deleteTodo.fulfilled, (state, action) => {\n         state.todos = state.todos.filter(todo => {\n            return todo.id !== action.payload;\n         });\n         console.log(action.payload);\n      });\n      builder.addCase(updateTitle.fulfilled, (state, action) => {\n         state.todos.map(todo => {\n            console.log(todo);\n            if (todo.id === action.payload.id) {\n               todo.title = action.payload.title;\n               console.log('todo found!');\n            }\n         });\n      });\n\n      builder.addCase(addTask.fulfilled, (state, action) => {\n         state.tasks.push(action.payload);\n      });\n      builder.addCase(getTasks.fulfilled, (state, action) => {\n         state.tasks = action.payload;\n      });\n      builder.addCase(deleteTask.fulfilled, (state, action) => {\n         state.tasks = state.tasks.filter(task => {\n            return task.id !== action.payload;\n         });\n         console.log(action.payload);\n      });\n      builder.addCase(toggleCompleted.fulfilled, (state, action) => {\n         state.tasks.map(task => {\n            console.log(task);\n            if (task.id === action.payload.id) {\n               task.completed = action.payload.completed;\n            }\n         });\n      });\n   },\n});\n\nexport const getInfoObj = (state: any) => state.info;\n\n// export const {addToDo} = RootReducer.actions;\nexport default RootReducer.reducer;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/helpers/consts.ts",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/helpers/CRUD/create.ts",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/Todo.tsx",["281","282"],[],"import {ColorLensSharp} from '@mui/icons-material';\nimport {Grid, IconButton, Paper, TextField, Typography} from '@mui/material';\nimport React, {useState} from 'react';\nimport AddToDoTask from './ToDoTask/AddToDoTask';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {useAppDispatch} from '../../../redux-store/store';\nimport {deleteTodo} from '../../../helpers/CRUD/delete';\nimport {getTodos} from '../../../helpers/CRUD/read';\nimport {toDoProps} from '../../../helpers/types';\nimport RenderTasks from './ToDoTask/RenderTasks';\nimport CheckIcon from '@mui/icons-material/Check';\nimport {updateTitle} from '../../../helpers/CRUD/update';\n\nconst Todo = ({title, color, id}: toDoProps) => {\n   const [titleEditMode, setTitleEditMode] = useState(false);\n   const [titleValue, setTitleValue] = useState(title);\n   const dispatch = useAppDispatch();\n   return (\n      <Grid item lg={3}>\n         <Paper\n            elevation={5}\n            sx={{\n               minHeight: '15rem',\n               backgroundColor: color,\n               position: 'relative',\n               padding: '1rem',\n            }}\n         >\n            {!titleEditMode ? (\n               <Typography\n                  onClick={() => {\n                     setTitleEditMode(true);\n                  }}\n                  variant=\"h5\"\n                  sx={{textAlign: 'center', marginBottom: '1rem'}}\n               >\n                  {title}\n               </Typography>\n            ) : (\n               <>\n                  <TextField\n                     size=\"small\"\n                     sx={{padding: '0 0 0.5rem'}}\n                     value={titleValue}\n                     onChange={e => {\n                        setTitleValue(e.target.value);\n                     }}\n                  />\n                  <IconButton\n                     onClick={() => {\n                        dispatch(updateTitle({id: id, title: titleValue}));\n                        setTitleEditMode(false);\n                     }}\n                  >\n                     <CheckIcon />\n                  </IconButton>\n               </>\n            )}\n            <AddToDoTask todoId={id} />\n            <RenderTasks todoId={id} />\n            <IconButton\n               sx={{position: 'absolute', bottom: '0', right: '0'}}\n               onClick={() => {\n                  dispatch(deleteTodo(id));\n               }}\n            >\n               <DeleteIcon />\n            </IconButton>\n         </Paper>\n      </Grid>\n   );\n};\n\nexport default Todo;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/ToDoTask/AddToDoTask.tsx",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/helpers/CRUD/delete.ts",["283"],[],"import {createAsyncThunk} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {useAppDispatch} from '../../redux-store/store';\nimport {TASKS, TODOS} from '../consts';\n\nexport const deleteTodo = createAsyncThunk(\n   'todos/deleteTodo',\n   async (id: number) => {\n      const response = await axios.delete(TODOS + '/' + id);\n      console.log(response.data);\n      return id;\n   }\n);\n\nexport const deleteTask = createAsyncThunk(\n   'tasks/deleteTasks',\n   async (id: number) => {\n      const response = await axios.delete(TASKS + '/' + id);\n      console.log(response.data);\n      return id;\n   }\n);\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/helpers/CRUD/read.ts",["284"],[],"import {createAsyncThunk} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {useSelector} from 'react-redux';\nimport {RootState, useAppDispatch} from '../../redux-store/store';\nimport {TASKS, TODOS} from '../consts';\n\nexport const getTodos = createAsyncThunk('todos/getTodos', async () => {\n   const response = await axios.get(TODOS);\n   console.log(response.data);\n   return response.data;\n});\n\nexport const getTasks = createAsyncThunk('tasks/getTasks', async () => {\n   const response = await axios.get(TASKS);\n   console.log(response.data);\n   return response.data;\n});\n\nexport const useGlobalState = () => {\n   return useSelector((state: RootState) => {\n      return state;\n   });\n};\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/ToDoTask/RenderTasks.tsx",["285","286","287"],[],"import {Grid, Typography} from '@mui/material';\nimport React from 'react';\nimport {useGlobalState} from '../../../../helpers/CRUD/read';\nimport AddToDoTask from './AddToDoTask';\nimport ToDoTask from './ToDoTask';\n\nconst RenderTasks = ({todoId}: any) => {\n   const {tasks} = useGlobalState();\n   return (\n      <Grid item sx={{padding: '1rem 1rem 1rem 0'}}>\n         {tasks.map(task => {\n            // console.log(task.task);\n            if (todoId === task.todoId) {\n               //    return <Typography>{task.task}</Typography>;\n               return (\n                  <ToDoTask\n                     key={task.id}\n                     task={task.task}\n                     id={task.id}\n                     completed={task.completed}\n                  />\n               );\n            }\n         })}\n      </Grid>\n   );\n};\n\nexport default RenderTasks;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/ToDoTask/ToDoTask.tsx",["288"],[],"import {Checkbox, Grid, IconButton, TextField, Typography} from '@mui/material';\nimport React, {useState} from 'react';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport {useAppDispatch} from '../../../../redux-store/store';\nimport {deleteTask} from '../../../../helpers/CRUD/delete';\nimport {toggleCompleted} from '../../../../helpers/CRUD/update';\n\nconst ToDoTask = ({task, id, completed}: any) => {\n   const [isCompleted, setIsCompleted] = useState(completed);\n   const dispatch = useAppDispatch();\n   return (\n      <Grid\n         item\n         sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n         }}\n      >\n         <Grid\n            item\n            sx={{\n               display: 'flex',\n\n               alignItems: 'center',\n            }}\n         >\n            <Checkbox\n               checked={isCompleted}\n               onChange={() => {\n                  setIsCompleted(!isCompleted);\n                  dispatch(toggleCompleted({id: id, status: !completed}));\n               }}\n            />\n            <Typography sx={isCompleted && {textDecoration: 'line-through'}}>\n               {task}\n            </Typography>\n         </Grid>\n\n         <IconButton\n            onClick={() => {\n               dispatch(deleteTask(id));\n            }}\n         >\n            <HighlightOffIcon />\n         </IconButton>\n      </Grid>\n   );\n};\n\nexport default ToDoTask;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/helpers/CRUD/update.ts",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/Header/Header.tsx",["289","290","291"],[],"import {Container, Grid, IconButton, Typography} from '@mui/material';\nimport {Box} from '@mui/system';\nimport React from 'react';\nimport {Link, useLocation, useNavigate, useParams} from 'react-router-dom';\nimport {addToDo} from '../../helpers/CRUD/create';\nimport {useAppDispatch} from '../../redux-store/store';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport Logo from './Logo';\nimport HomeOutlinedIcon from '@mui/icons-material/HomeOutlined';\n\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\n\nconst Header = () => {\n   const {pathname} = useLocation();\n   const navigate = useNavigate();\n   const dispatch = useAppDispatch();\n   return (\n      <Box\n         sx={{\n            backdropFilter: 'blur(50px)',\n            position: 'fixed',\n            top: '0',\n            zIndex: '1000',\n            width: '100%',\n         }}\n      >\n         <Container maxWidth=\"lg\">\n            <Grid\n               container\n               sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  padding: '0.5rem',\n               }}\n            >\n               <Logo />\n               <Grid item sx={{display: 'flex', alignItems: 'center'}}>\n                  {pathname === '/' && (\n                     <Grid\n                        item\n                        sx={{\n                           display: 'flex',\n                           alignItems: 'center',\n                           cursor: 'pointer',\n                           marginRight: '1rem',\n                        }}\n                        onClick={() => {\n                           dispatch(addToDo());\n                        }}\n                     >\n                        <>\n                           <AddCircleOutlineIcon />\n\n                           <Typography>Add New Note</Typography>\n                        </>\n                     </Grid>\n                  )}\n                  {pathname === '/' ? (\n                     <Grid\n                        item\n                        sx={{\n                           display: 'flex',\n                           alignItems: 'center',\n                           cursor: 'pointer',\n                        }}\n                     >\n                        <InfoOutlinedIcon></InfoOutlinedIcon>\n                        <Link to=\"/about\">About the app</Link>\n                     </Grid>\n                  ) : (\n                     <Grid\n                        item\n                        sx={{\n                           display: 'flex',\n                           alignItems: 'center',\n                           cursor: 'pointer',\n                        }}\n                     >\n                        <HomeOutlinedIcon></HomeOutlinedIcon>\n                        <Link to=\"/\">Back to the lists</Link>\n                     </Grid>\n                  )}\n               </Grid>\n            </Grid>\n         </Container>\n      </Box>\n   );\n};\n\nexport default Header;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/Header/Logo.tsx",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/errors/RenderError.tsx",["292"],[],"import {Snackbar} from '@mui/material';\nimport React, {useEffect, useState} from 'react';\nimport {errorModalProps} from '../helpers/types';\nimport MuiAlert, {AlertProps} from '@mui/material/Alert';\nimport {useSelector} from 'react-redux';\nimport {RootState} from '../redux-store/store';\nimport {getInfoObj} from '../redux-store/RootReducer';\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n   props,\n   ref\n) {\n   return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst RenderError = () => {\n   const infoObj = useSelector((state: RootState) => getInfoObj(state));\n\n   const [showToast, setShowToast] = useState(false);\n   useEffect(() => {\n      setShowToast(infoObj.switchModalOn);\n   }, [infoObj]);\n\n   const handleClose = (\n      event?: React.SyntheticEvent | Event,\n      reason?: string\n   ) => {\n      if (reason === 'clickaway') {\n         return;\n      }\n\n      setShowToast(false);\n   };\n   return (\n      <Snackbar open={showToast} autoHideDuration={6000} onClose={handleClose}>\n         <Alert\n            variant=\"filled\"\n            onClose={handleClose}\n            severity={infoObj.type}\n            sx={{width: '100%'}}\n         >\n            {infoObj.message}\n         </Alert>\n      </Snackbar>\n   );\n};\n\nexport default RenderError;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/index.tsx",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/reportWebVitals.ts",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/App.tsx",["293"],[],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Content from './components/content/Content';\nimport Footer from './components/Footer';\nimport {Provider} from 'react-redux';\nimport {store} from './redux-store/store';\nimport DevMenu from './dev/devMenu';\nimport RenderError from './errors/RenderError';\nimport boardBg from './boardbg.jpeg';\nimport {Box} from '@mui/system';\n\nfunction App() {\n   return (\n      <Box\n         sx={{\n            backgroundImage: `url(${boardBg})`,\n            backgroundAttachment: 'fixed',\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat',\n            height: '100vh',\n         }}\n      >\n         <Provider store={store}>\n            <Header />\n            <Content />\n            <RenderError />\n            <Footer />\n            <DevMenu />\n         </Provider>\n      </Box>\n   );\n}\n\nexport default App;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/redux-store/store.ts",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/Footer.tsx",["294"],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/Header/Header.tsx",["295","296","297","298"],[],"import {Container, Grid, IconButton, Tooltip, Typography} from '@mui/material';\nimport {Box} from '@mui/system';\nimport React from 'react';\nimport {Link, useLocation, useNavigate} from 'react-router-dom';\nimport {createNewDeck} from '../../helpers/CRUD/create';\nimport {useAppDispatch} from '../../redux-store/store';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport Logo from './Logo';\nimport HomeOutlinedIcon from '@mui/icons-material/HomeOutlined';\nimport MonetizationOnOutlinedIcon from '@mui/icons-material/MonetizationOnOutlined';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport CasinoIcon from '@mui/icons-material/Casino';\n\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport {shuffleDeck} from '../../helpers/CRUD/update';\nimport {useGlobalState} from '../../helpers/CRUD/read';\nimport {setLogOut} from '../../redux-store/RootReducer';\n\nconst Header = () => {\n   const {pathname} = useLocation();\n   const navigate = useNavigate();\n   const dispatch = useAppDispatch();\n   const {currentDeck, gameData} = useGlobalState();\n   return (\n      <Box\n         sx={{\n            backdropFilter: 'blur(5px)',\n            position: 'fixed',\n            top: '0',\n            zIndex: '1000',\n            width: '100%',\n            borderBottomStyle: 'solid',\n            borderBottomColor: 'brown',\n            borderBottomWidth: '1px',\n         }}\n      >\n         <Container maxWidth=\"lg\">\n            <Grid\n               container\n               sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  padding: '0.5rem',\n               }}\n            >\n               <Logo />\n               <Grid item sx={{display: 'flex', alignItems: 'center'}}>\n                  {gameData.loggedIn && (\n                     <Grid\n                        item\n                        sx={{\n                           display: 'flex',\n                           alignItems: 'center',\n                           // cursor: 'pointer',\n                           marginRight: '1rem',\n                        }}\n                        // onClick={() => {\n                        //    dispatch(shuffleDeck());\n                        // }}\n                     >\n                        <>\n                           <MonetizationOnOutlinedIcon />\n                           <Typography>\n                              My balance:{gameData.balance} $\n                           </Typography>\n                        </>\n                     </Grid>\n                  )}\n                  {pathname === '/' && gameData.loggedIn && (\n                     <>\n                        <Grid\n                           item\n                           sx={{\n                              display: 'flex',\n                              alignItems: 'center',\n                              cursor: 'pointer',\n                              marginRight: '1rem',\n                           }}\n                           onClick={async () => {\n                              await dispatch(createNewDeck());\n                              // navigate(`decks/${currentDeck.deck_id}`);\n                           }}\n                        >\n                           <CasinoIcon />\n                           <Typography>Start new game</Typography>\n                        </Grid>\n                     </>\n                  )}\n                  {pathname === '/' ? (\n                     <Grid\n                        item\n                        sx={{\n                           display: 'flex',\n                           alignItems: 'center',\n                           cursor: 'pointer',\n                        }}\n                     >\n                        <Tooltip title=\"About the app\">\n                           <IconButton\n                              sx={{color: 'white'}}\n                              onClick={() => {\n                                 navigate('/about');\n                              }}\n                           >\n                              <InfoOutlinedIcon></InfoOutlinedIcon>\n                           </IconButton>\n                        </Tooltip>\n\n                        {/* <Link to=\"/about\">About the app</Link> */}\n                     </Grid>\n                  ) : (\n                     <Grid\n                        item\n                        sx={{\n                           display: 'flex',\n                           alignItems: 'center',\n                           cursor: 'pointer',\n                        }}\n                     >\n                        <Tooltip title=\"Back to the homepage\">\n                           <IconButton\n                              sx={{color: 'white'}}\n                              onClick={() => {\n                                 navigate('/');\n                              }}\n                           >\n                              <HomeOutlinedIcon></HomeOutlinedIcon>\n                           </IconButton>\n                        </Tooltip>\n                     </Grid>\n                  )}\n                  <Tooltip title=\"Logout\">\n                     <IconButton\n                        sx={{color: 'white'}}\n                        onClick={() => {\n                           dispatch(setLogOut());\n                           navigate('/');\n                        }}\n                     >\n                        <LogoutIcon></LogoutIcon>\n                     </IconButton>\n                  </Tooltip>\n               </Grid>\n            </Grid>\n         </Container>\n      </Box>\n   );\n};\n\nexport default Header;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/Content.tsx",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/errors/RenderError.tsx",["299"],[],"import {Snackbar} from '@mui/material';\nimport React, {useEffect, useState} from 'react';\nimport {errorModalProps} from '../helpers/types';\nimport MuiAlert, {AlertProps} from '@mui/material/Alert';\nimport {useSelector} from 'react-redux';\nimport {RootState} from '../redux-store/store';\nimport {getInfoObj} from '../redux-store/RootReducer';\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n   props,\n   ref\n) {\n   return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst RenderError = () => {\n   const infoObj = useSelector((state: RootState) => getInfoObj(state));\n\n   const [showToast, setShowToast] = useState(false);\n   useEffect(() => {\n      setShowToast(infoObj.switchModalOn);\n   }, [infoObj]);\n\n   const handleClose = (\n      event?: React.SyntheticEvent | Event,\n      reason?: string\n   ) => {\n      if (reason === 'clickaway') {\n         return;\n      }\n\n      setShowToast(false);\n   };\n   return (\n      <Snackbar open={showToast} autoHideDuration={2000} onClose={handleClose}>\n         <Alert\n            variant=\"filled\"\n            onClose={handleClose}\n            severity={infoObj.type}\n            sx={{width: '100%'}}\n         >\n            {infoObj.message}\n         </Alert>\n      </Snackbar>\n   );\n};\n\nexport default RenderError;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/redux-store/RootReducer.ts",["300","301","302","303","304"],[],"import React from 'react';\nimport {createAsyncThunk, createSlice, current} from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nimport {GlobalState, Todo} from '../helpers/types';\nimport {createNewDeck, setToLocalStorage} from '../helpers/CRUD/create';\nimport {drawCards, getDeck, getFromLocalStorage} from '../helpers/CRUD/read';\n\nconst initialState: GlobalState = {\n   currentDeck: {},\n   currentDraw: {},\n   info: {},\n   gameData: {loggedIn: false, decks: [], balance: 10000},\n};\n\nexport const RootReducer = createSlice({\n   name: 'todo_app',\n   initialState,\n   reducers: {\n      setGameData(state) {\n         state.info = {\n            switchModalOn: true,\n            type: 'success',\n            message: 'Successfully authorized',\n         };\n      },\n\n      setBalance(state, action) {\n         state.gameData.balance = action.payload.balance;\n         state.info = {\n            switchModalOn: true,\n            type: action.payload.type,\n            message: action.payload.message,\n         };\n         setToLocalStorage(state.gameData);\n      },\n\n      setLogin(state) {\n         state.gameData = getFromLocalStorage();\n         state.gameData.loggedIn = true;\n         state.info = {\n            switchModalOn: true,\n            type: 'success',\n            message: 'Successfully authorized',\n         };\n      },\n      setLogOut(state) {\n         state.gameData.loggedIn = false;\n         state.info = {\n            switchModalOn: true,\n            type: 'success',\n            message: 'Successfully logged out',\n         };\n      },\n      setLoginError(state) {\n         state.info = {\n            switchModalOn: true,\n            type: 'error',\n            message:\n               'Unable to authorize. Please check your username and/or password',\n         };\n      },\n   },\n   extraReducers(builder) {\n      // get existing deck\n      builder.addCase(getDeck.rejected, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'error',\n            message: 'Unable to fetch deck. Server or internet down',\n         };\n      });\n      builder.addCase(getDeck.pending, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'warning',\n            message: 'Fetching existing deck. Please wait...',\n         };\n      });\n      builder.addCase(getDeck.fulfilled, (state, action) => {\n         state.currentDeck = action.payload;\n\n         // state.info = {\n         //    switchModalOn: false,\n         //    // type: 'success',\n         //    // message: 'Deck generated',\n         // };\n      });\n      // new deck cases\n      builder.addCase(createNewDeck.rejected, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'error',\n            message: 'Unable to create deck. Server or internet down',\n         };\n      });\n      builder.addCase(createNewDeck.pending, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'warning',\n            message: 'Generating deck. Please wait...',\n         };\n      });\n      builder.addCase(createNewDeck.fulfilled, (state, action) => {\n         state.currentDeck = action.payload;\n         state.info = {\n            switchModalOn: false,\n            type: 'success',\n            message: 'Deck generated',\n         };\n         state.gameData.decks.push({\n            deckId: action.payload.deck_id,\n         });\n         setToLocalStorage(state.gameData);\n      });\n      // draw cards cases\n      builder.addCase(drawCards.fulfilled, (state, action) => {\n         state.currentDraw = action.payload;\n         state.currentDeck.remaining = action.payload.remaining;\n         // state.info = {\n         //    switchModalOn: false,\n         //    type: 'success',\n         //    message: 'Cards drawn',\n         // };\n      });\n      builder.addCase(drawCards.pending, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'warning',\n            message: 'Drawing a pair of cards...',\n         };\n      });\n      builder.addCase(drawCards.rejected, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'error',\n            message: 'Cards could not be drawn. Check your connection',\n         };\n         console.log('drawCards.rejected payload', action.payload);\n      });\n   },\n});\n\nexport const getInfoObj = (state: any) => state.info;\n\nexport const {setLogin} = RootReducer.actions;\n\nexport const {setLogOut} = RootReducer.actions;\n\nexport const {setLoginError} = RootReducer.actions;\nexport const {setBalance} = RootReducer.actions;\nexport default RootReducer.reducer;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/Header/Logo.tsx",["305","306","307"],[],"import {Box, Grid, Typography} from '@mui/material';\nimport React from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport LogoImg from './logo.png';\nconst Logo = () => {\n   const navigate = useNavigate();\n   return (\n      <>\n         <Grid\n            item\n            sx={{\n               cursor: 'pointer',\n               fontSize: '2.5rem',\n            }}\n            onClick={() => {\n               navigate('/');\n            }}\n         >\n            {/* <Typography variant=\"h2\">Pick a winner</Typography> */}\n            <img style={{marginTop: '0.4rem', width: '20rem'}} src={LogoImg} />\n         </Grid>\n      </>\n   );\n};\n\nexport default Logo;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/Home.tsx",["308","309","310","311"],[],"import {Masonry} from '@mui/lab';\nimport {Container, Grid, Typography} from '@mui/material';\nimport React, {useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useGlobalState} from '../../helpers/CRUD/read';\nimport {RootState, useAppDispatch} from '../../redux-store/store';\nimport RenderDeck from './RenderDeck';\n\nconst Home = () => {\n   const dispatch = useAppDispatch();\n   // const globalState = useGlobalState();\n   useEffect(() => {}, []);\n   const {gameData} = useGlobalState();\n\n   return (\n      <Container maxWidth=\"lg\" sx={{minHeight: '75vh', paddingTop: '6rem'}}>\n         {gameData.decks.length === 0 ? (\n            <Typography variant=\"h4\">\n               You don't have any decks. Click 'Start new game' to add one\n            </Typography>\n         ) : (\n            <Typography variant=\"h4\">Here are your decks</Typography>\n         )}\n         <Grid container spacing={3} sx={{marginTop: '1rem'}}>\n            {gameData.decks?.map((deck: any) => {\n               return <RenderDeck key={deck.deckId} deckId={deck.deckId} />;\n            })}\n         </Grid>\n      </Container>\n   );\n};\n\nexport default Home;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/About.tsx",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/CRUD/create.ts",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/CRUD/read.ts",["312","313"],[],"import {createAsyncThunk} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {useSelector} from 'react-redux';\nimport {RootState, useAppDispatch} from '../../redux-store/store';\nimport {BASE_URL} from '../consts';\nimport {GlobalState} from '../types';\nimport {setToLocalStorage} from './create';\n\nexport const useGlobalState = () => {\n   return useSelector((state: RootState) => {\n      return state;\n   });\n};\n\nexport const drawCards = createAsyncThunk(\n   'deck/drawCards',\n   async (deck_id: string | undefined) => {\n      const response = await axios.get(BASE_URL + deck_id + '/draw/?count=2 ');\n      console.log(response.data);\n      return response.data;\n   }\n);\n\nexport const getDeck = createAsyncThunk(\n   'deck/getDeck',\n   async (deck_id: string | undefined) => {\n      const response = await axios.get(BASE_URL + deck_id);\n      console.log(response.data);\n      return response.data;\n   }\n);\n\nexport async function fetchDeck(deck_id: string | undefined) {\n   try {\n      const response = await axios.get(BASE_URL + deck_id);\n      console.log(response.data);\n      return response.data;\n   } catch (error) {\n      console.log(error);\n      return error;\n   }\n}\n\nexport function getFromLocalStorage() {\n   const gameDataObj = {\n      loggedIn: false,\n      decks: [],\n      balance: 10000,\n   };\n   let gameData: any = localStorage.getItem('gameData');\n   if (!gameData) {\n      setToLocalStorage(gameDataObj);\n      gameData = localStorage.getItem('gameData');\n   }\n\n   return JSON.parse(gameData);\n}\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/CRUD/delete.ts",["314"],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/CRUD/update.ts",[],[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/consts.ts",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/dev/devMenu.tsx",["315","316","317","318"],[],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport {RootState, useAppDispatch} from '../redux-store/store';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {\n   drawCards,\n   getFromLocalStorage,\n   useGlobalState,\n} from '../helpers/CRUD/read';\nimport {useLocation, useParams} from 'react-router-dom';\nimport {createNewDeck, setToLocalStorage} from '../helpers/CRUD/create';\nimport {calcHighestRank} from '../helpers/calculate';\n\nexport default function DevMenu() {\n   const location = useLocation();\n   const {currentDeck, currentDraw, gameData} = useGlobalState();\n   const dispatch = useAppDispatch();\n\n   const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n   const open = Boolean(anchorEl);\n   const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n      setAnchorEl(event.currentTarget);\n   };\n   const handleClose = () => {\n      setAnchorEl(null);\n   };\n\n   const [inpValue, setInpValue] = React.useState('');\n\n   return (\n      <div\n         style={{\n            position: 'fixed',\n            bottom: '0',\n            right: '0',\n            backgroundColor: 'orange',\n            zIndex: '6000',\n         }}\n      >\n         <Button\n            id=\"basic-button\"\n            aria-controls={open ? 'basic-menu' : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? 'true' : undefined}\n            onClick={e => handleClick(e)}\n         >\n            DevMenu\n         </Button>\n         <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n               'aria-labelledby': 'basic-button',\n            }}\n            sx={{zIndex: '7000'}}\n         >\n            <MenuItem\n               onClick={() => {\n                  dispatch(createNewDeck());\n                  //   console.log(addToDo('test'));\n               }}\n            >\n               Create new deck\n            </MenuItem>\n            <MenuItem\n               onClick={() => {\n                  console.log(\n                     'global state',\n                     currentDeck,\n                     currentDraw,\n                     gameData\n                  );\n               }}\n            >\n               Read global state\n            </MenuItem>\n            <MenuItem\n               onClick={() => {\n                  console.log(currentDeck);\n               }}\n            >\n               Read current deck from state\n            </MenuItem>\n            <MenuItem\n               onClick={() => {\n                  console.log(currentDraw);\n               }}\n            >\n               Read current draw from state\n            </MenuItem>\n            <MenuItem\n               onClick={() => {\n                  dispatch(drawCards(currentDeck.deck_id));\n               }}\n            >\n               Fetch new draw\n            </MenuItem>\n\n            <MenuItem\n               onClick={() => {\n                  console.log(location);\n               }}\n            >\n               Get current page route\n            </MenuItem>\n\n            <MenuItem\n               onClick={() => {\n                  let res = calcHighestRank(\n                     currentDraw.cards[0].code[0],\n                     currentDraw.cards[1].code[0]\n                  );\n                  console.log(res);\n               }}\n            >\n               Calculate highest rank\n            </MenuItem>\n\n            <MenuItem\n               onClick={() => {\n                  console.log(getFromLocalStorage());\n               }}\n            >\n               Get from local storage\n            </MenuItem>\n\n            <MenuItem\n               onClick={() => {\n                  console.log(setToLocalStorage(inpValue));\n               }}\n            >\n               Set to local storage\n            </MenuItem>\n            <MenuItem onClick={() => {}}>Push to decks array</MenuItem>\n\n            <center>\n               <input\n                  placeholder=\"universal input\"\n                  value={inpValue}\n                  onChange={e => {\n                     setInpValue(e.target.value);\n                  }}\n               ></input>\n            </center>\n         </Menu>\n      </div>\n   );\n}\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/calculate.ts",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/CurrentDeck.tsx",["319","320","321","322","323","324","325","326"],[],"import {Button, Container, Grid, Typography} from '@mui/material';\nimport React, {useEffect, useState} from 'react';\nimport {useLocation, useParams} from 'react-router-dom';\nimport {calcHighestRank} from '../../helpers/calculate';\nimport {drawCards, getDeck, useGlobalState} from '../../helpers/CRUD/read';\nimport {setBalance} from '../../redux-store/RootReducer';\nimport {useAppDispatch} from '../../redux-store/store';\nimport cardBack from './back_of_a_card.png';\n\nconst CurrentDeck = () => {\n   const [gameOn, setGameOn] = useState(false);\n   const [cardsShown, setCardsShown] = useState(false);\n   const [buttonShown, setButtonShown] = useState(true);\n   const [deckRemaining, setDeckRemaining] = useState(null);\n   const [outcome, setOutcome] = useState({\n      hasWon: 'undecided',\n      chosenCard: 'none',\n   });\n   const {currentDeck, currentDraw, gameData} = useGlobalState();\n   const params = useParams();\n   const location = useLocation();\n   const dispatch = useAppDispatch();\n   useEffect(() => {\n      dispatch(getDeck(params.id));\n   }, []);\n\n   useEffect(() => {\n      setDeckRemaining(currentDeck.remaining);\n   }, [currentDeck.remaining]);\n\n   function handleDraw(card: string) {\n      console.log('card id', card);\n      let winner = calcHighestRank(\n         currentDraw.cards[0].code[0],\n         currentDraw.cards[1].code[0]\n      );\n\n      let currentBalance = gameData.balance;\n\n      if (card === winner) {\n         setOutcome({hasWon: 'true', chosenCard: card});\n         dispatch(\n            setBalance({\n               balance: currentBalance + 20,\n               type: 'success',\n               message: 'You earned 10$!',\n            })\n         );\n      } else {\n         setOutcome({hasWon: 'false', chosenCard: card});\n         dispatch(\n            setBalance({\n               balance: currentBalance,\n               type: 'error',\n               message: 'You lost your bet of 10$',\n            })\n         );\n      }\n   }\n\n   return (\n      <Container maxWidth=\"lg\" sx={{paddingTop: '6rem'}}>\n         <Typography sx={{textAlign: 'center'}}>\n            Deck id: {currentDeck.deck_id}\n         </Typography>\n         <Typography sx={{textAlign: 'center'}}>\n            Cards remaining in deck: {currentDeck.remaining}\n         </Typography>\n         <Grid container>\n            <Grid\n               item\n               sm={4}\n               md={4}\n               lg={4}\n               sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  minHeight: '70vh',\n               }}\n            >\n               {gameOn || (\n                  <img\n                     style={{\n                        width: '226px',\n                        height: '314px',\n                        borderRadius: '10px',\n                        boxShadow: '3px 3px 20px black',\n                        // cursor: 'pointer',\n                     }}\n                     src={cardBack}\n                  />\n               )}\n               {gameOn && (\n                  <>\n                     {cardsShown ? (\n                        <img\n                           style={{\n                              width: '226px',\n                              height: '314px',\n                              cursor: 'pointer',\n                              borderRadius: '10px',\n                              boxShadow: '3px 3px 20px black',\n                           }}\n                           src={currentDraw.cards[0].images.png}\n                        />\n                     ) : (\n                        <>\n                           {currentDraw.success && (\n                              <img\n                                 id={currentDraw.cards[0].code[0]}\n                                 style={{\n                                    width: '226px',\n                                    height: '314px',\n                                    borderRadius: '10px',\n                                    boxShadow: '3px 3px 20px black',\n                                 }}\n                                 src={cardBack}\n                                 onClick={e => {\n                                    const target =\n                                       e.target as HTMLButtonElement;\n                                    console.log(target.id);\n                                    handleDraw(target.id);\n                                    setCardsShown(true);\n                                    setButtonShown(true);\n                                 }}\n                              />\n                           )}\n                        </>\n                     )}\n                  </>\n               )}\n            </Grid>\n            {deckRemaining === 0 ? (\n               <Grid\n                  item\n                  sm={4}\n                  md={4}\n                  lg={4}\n                  sx={{\n                     display: 'flex',\n                     alignItems: 'center',\n                     justifyContent: 'center',\n                     minHeight: '70vh',\n                  }}\n               >\n                  There are no more cards in the deck! Please start a new game\n               </Grid>\n            ) : (\n               <Grid\n                  item\n                  sm={4}\n                  md={4}\n                  lg={4}\n                  sx={{\n                     display: 'flex',\n                     flexDirection: 'column',\n                     alignItems: 'center',\n                     justifyContent: 'space-evenly',\n                  }}\n               >\n                  {buttonShown ? (\n                     <>\n                        {outcome.hasWon === 'true' && (\n                           <Typography\n                              variant=\"h3\"\n                              sx={{color: 'orange', textAlign: 'center'}}\n                           >\n                              Congrats! You won!\n                           </Typography>\n                        )}\n                        {outcome.hasWon === 'false' && (\n                           <Typography\n                              variant=\"h3\"\n                              sx={{color: 'red', textAlign: 'center'}}\n                           >\n                              Sorry, good luck next time\n                           </Typography>\n                        )}\n                        <>\n                           <Typography variant=\"h4\">Feeling lucky?</Typography>\n                           <Button\n                              onClick={() => {\n                                 const currentBalance = gameData.balance;\n                                 dispatch(drawCards(params.id));\n                                 dispatch(\n                                    setBalance({\n                                       balance: currentBalance - 10,\n                                       type: 'warning',\n                                       message:\n                                          'You placed a bet of 10$. Your balance has been deducted',\n                                    })\n                                 );\n                                 setGameOn(true);\n                                 setCardsShown(false);\n                                 setButtonShown(false);\n                              }}\n                              variant=\"contained\"\n                           >\n                              Play!\n                           </Button>\n                           <Typography>\n                              Click to draw cards randomly. 10$ will be\n                              substracted from your account. If you win, your\n                              bet will be returned to you plus the amount of\n                              your bet will be added to your account (x2)\n                           </Typography>\n                        </>\n                     </>\n                  ) : (\n                     <>\n                        <Typography variant=\"h6\">\n                           Click on the left or right card\n                        </Typography>\n                     </>\n                  )}\n               </Grid>\n            )}\n\n            <Grid\n               item\n               sm={4}\n               md={4}\n               lg={4}\n               sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n               }}\n            >\n               {gameOn || (\n                  <img\n                     style={{\n                        width: '226px',\n                        height: '314px',\n                        borderRadius: '10px',\n                        boxShadow: '3px 3px 20px black',\n                        // cursor: 'pointer',\n                     }}\n                     src={cardBack}\n                  />\n               )}\n               {gameOn && (\n                  <>\n                     {cardsShown ? (\n                        <img\n                           style={{\n                              width: '226px',\n                              height: '314px',\n                              cursor: 'pointer',\n                              borderRadius: '10px',\n                              boxShadow: '3px 3px 20px black',\n                           }}\n                           src={currentDraw.cards[1].images.png}\n                        />\n                     ) : (\n                        <>\n                           {currentDraw.success && (\n                              <img\n                                 id={currentDraw.cards[1].code[0]}\n                                 style={{\n                                    width: '226px',\n                                    height: '314px',\n                                    borderRadius: '10px',\n                                    boxShadow: '3px 3px 20px black',\n                                 }}\n                                 src={cardBack}\n                                 onClick={e => {\n                                    const target =\n                                       e.target as HTMLButtonElement;\n                                    console.log(target.id);\n                                    handleDraw(target.id);\n                                    setCardsShown(true);\n                                    setButtonShown(true);\n                                 }}\n                              />\n                           )}\n                        </>\n                     )}\n                  </>\n               )}\n            </Grid>\n         </Grid>\n      </Container>\n   );\n};\n\nexport default CurrentDeck;\n","/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/redux-store/rootReducer.ts",["327","328","329","330","331","332","333","334"],[],"import React from 'react';\nimport {\n   combineReducers,\n   createAsyncThunk,\n   createSlice,\n   current,\n} from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nimport {GlobalState, Todo} from '../helpers/types';\nimport {createNewDeck} from '../helpers/CRUD/create';\nimport {drawCards} from '../helpers/CRUD/read';\nimport drawCardSlice from './drawCardsSlice';\nimport newDeckSlice from './NewDeckSlice';\n\nexport const initialState: GlobalState = {\n   currentDeck: {},\n   currentDraw: {},\n   info: {},\n};\n\n// export const RootReducer = createSlice({\n//    name: 'todo_app',\n//    initialState,\n//    reducers: {},\n//    extraReducers(builder) {\n//       // new deck cases\n//       builder.addCase(createNewDeck.rejected, (state, action) => {\n//          state.info = {\n//             switchModalOn: true,\n//             type: 'error',\n//             message: 'Unable to create deck. Server or internet down',\n//          };\n//       });\n//       builder.addCase(createNewDeck.pending, (state, action) => {\n//          state.info = {\n//             switchModalOn: true,\n//             type: 'warning',\n//             message: 'Generating deck. Please wait...',\n//          };\n//       });\n//       builder.addCase(createNewDeck.fulfilled, (state, action) => {\n//          state.currentDeck = action.payload;\n//          state.info = {\n//             switchModalOn: false,\n//             type: 'success',\n//             message: 'Deck generated',\n//          };\n//       });\n//       // draw cards cases\n//       builder.addCase(drawCards.fulfilled, (state, action) => {\n//          state.currentDraw = action.payload;\n//          state.currentDeck.remaining = action.payload.remaining;\n//          state.info = {\n//             switchModalOn: false,\n//             type: 'success',\n//             message: 'Cards drawn',\n//          };\n//       });\n//       builder.addCase(drawCards.pending, (state, action) => {\n//          state.info = {\n//             switchModalOn: true,\n//             type: 'warning',\n//             message: 'Drawing a pair of cards...',\n//          };\n//       });\n//       builder.addCase(drawCards.rejected, (state, action) => {\n//          state.info = {\n//             switchModalOn: true,\n//             type: 'error',\n//             message: 'Cards could not be drawn. Check your connection',\n//          };\n//          console.log('drawCards.rejected payload', action.payload);\n//       });\n//    },\n// });\n\nconst rootReducer = combineReducers({\n   drawCardSlice: drawCardSlice.reducer,\n   newDeckSlice: newDeckSlice.reducer,\n});\n\nexport const getInfoObj = (state: any) => state.info;\n\n// export const {addToDo} = RootReducer.actions;\nexport default rootReducer;\n",[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/Login.tsx",[],[],"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/RenderDeck.tsx",["335","336","337"],[],"import {Button, Grid, Paper, Typography} from '@mui/material';\nimport React, {useEffect, useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {useNavigate} from 'react-router-dom';\nimport {fetchDeck, getDeck} from '../../helpers/CRUD/read';\n\nconst RenderDeck = ({deckId}: any) => {\n   const navigate = useNavigate();\n   const [deck, setDeck] = useState({remaining: ''});\n   useEffect(() => {\n      fetchDeck(deckId).then(res => {\n         console.log(res);\n         setDeck(res);\n      });\n   }, []);\n   return (\n      <Grid item lg={3}>\n         <Paper\n            elevation={5}\n            sx={{minHeight: '15rem', padding: '1rem', position: 'relative'}}\n         >\n            <Typography variant=\"h6\">Deck: {deckId}</Typography>\n            <Typography>Cards remaining in deck: {deck.remaining}</Typography>\n            <Button\n               variant=\"outlined\"\n               sx={{position: 'absolute', left: '1rem', bottom: '1rem'}}\n               onClick={() => {\n                  navigate(`/decks/${deckId}`);\n               }}\n            >\n               Play this deck\n            </Button>\n         </Paper>\n      </Grid>\n   );\n};\n\nexport default RenderDeck;\n",{"ruleId":"338","severity":1,"message":"339","line":2,"column":8,"nodeType":"340","messageId":"341","endLine":2,"endColumn":12},{"ruleId":"338","severity":1,"message":"342","line":9,"column":8,"nodeType":"340","messageId":"341","endLine":9,"endColumn":15},{"ruleId":"343","severity":1,"message":"344","line":15,"column":13,"nodeType":"345","messageId":"346","endLine":15,"endColumn":62,"fix":"347"},{"ruleId":"338","severity":1,"message":"348","line":2,"column":20,"nodeType":"340","messageId":"341","endLine":2,"endColumn":24},{"ruleId":"338","severity":1,"message":"349","line":4,"column":9,"nodeType":"340","messageId":"341","endLine":4,"endColumn":20},{"ruleId":"338","severity":1,"message":"350","line":6,"column":9,"nodeType":"340","messageId":"341","endLine":6,"endColumn":18},{"ruleId":"338","severity":1,"message":"351","line":7,"column":8,"nodeType":"340","messageId":"341","endLine":7,"endColumn":15},{"ruleId":"352","severity":1,"message":"353","line":16,"column":7,"nodeType":"354","endLine":16,"endColumn":9,"suggestions":"355"},{"ruleId":"338","severity":1,"message":"356","line":1,"column":15,"nodeType":"340","messageId":"341","endLine":1,"endColumn":19},{"ruleId":"338","severity":1,"message":"350","line":5,"column":9,"nodeType":"340","messageId":"341","endLine":5,"endColumn":18},{"ruleId":"338","severity":1,"message":"349","line":6,"column":9,"nodeType":"340","messageId":"341","endLine":6,"endColumn":20},{"ruleId":"338","severity":1,"message":"357","line":6,"column":22,"nodeType":"340","messageId":"341","endLine":6,"endColumn":33},{"ruleId":"338","severity":1,"message":"358","line":9,"column":22,"nodeType":"340","messageId":"341","endLine":9,"endColumn":31},{"ruleId":"338","severity":1,"message":"359","line":1,"column":8,"nodeType":"340","messageId":"341","endLine":1,"endColumn":13},{"ruleId":"338","severity":1,"message":"360","line":2,"column":9,"nodeType":"340","messageId":"341","endLine":2,"endColumn":25},{"ruleId":"338","severity":1,"message":"361","line":2,"column":40,"nodeType":"340","messageId":"341","endLine":2,"endColumn":47},{"ruleId":"338","severity":1,"message":"362","line":3,"column":8,"nodeType":"340","messageId":"341","endLine":3,"endColumn":13},{"ruleId":"338","severity":1,"message":"363","line":4,"column":9,"nodeType":"340","messageId":"341","endLine":4,"endColumn":14},{"ruleId":"338","severity":1,"message":"364","line":5,"column":22,"nodeType":"340","messageId":"341","endLine":5,"endColumn":26},{"ruleId":"338","severity":1,"message":"365","line":6,"column":27,"nodeType":"340","messageId":"341","endLine":6,"endColumn":46},{"ruleId":"366","severity":1,"message":"367","line":69,"column":31,"nodeType":"368","messageId":"369","endLine":69,"endColumn":33},{"ruleId":"366","severity":1,"message":"367","line":91,"column":31,"nodeType":"368","messageId":"369","endLine":91,"endColumn":33},{"ruleId":"338","severity":1,"message":"370","line":1,"column":9,"nodeType":"340","messageId":"341","endLine":1,"endColumn":23},{"ruleId":"338","severity":1,"message":"371","line":8,"column":9,"nodeType":"340","messageId":"341","endLine":8,"endColumn":17},{"ruleId":"338","severity":1,"message":"372","line":3,"column":9,"nodeType":"340","messageId":"341","endLine":3,"endColumn":23},{"ruleId":"338","severity":1,"message":"372","line":4,"column":20,"nodeType":"340","messageId":"341","endLine":4,"endColumn":34},{"ruleId":"338","severity":1,"message":"373","line":1,"column":15,"nodeType":"340","messageId":"341","endLine":1,"endColumn":25},{"ruleId":"338","severity":1,"message":"374","line":4,"column":8,"nodeType":"340","messageId":"341","endLine":4,"endColumn":19},{"ruleId":"366","severity":1,"message":"375","line":11,"column":26,"nodeType":"368","messageId":"376","endLine":11,"endColumn":28},{"ruleId":"338","severity":1,"message":"377","line":1,"column":37,"nodeType":"340","messageId":"341","endLine":1,"endColumn":46},{"ruleId":"338","severity":1,"message":"378","line":1,"column":26,"nodeType":"340","messageId":"341","endLine":1,"endColumn":36},{"ruleId":"338","severity":1,"message":"358","line":4,"column":41,"nodeType":"340","messageId":"341","endLine":4,"endColumn":50},{"ruleId":"338","severity":1,"message":"379","line":15,"column":10,"nodeType":"340","messageId":"341","endLine":15,"endColumn":18},{"ruleId":"338","severity":1,"message":"380","line":3,"column":9,"nodeType":"340","messageId":"341","endLine":3,"endColumn":24},{"ruleId":"338","severity":1,"message":"339","line":2,"column":8,"nodeType":"340","messageId":"341","endLine":2,"endColumn":12},{"ruleId":"343","severity":1,"message":"344","line":15,"column":13,"nodeType":"345","messageId":"346","endLine":15,"endColumn":62,"fix":"381"},{"ruleId":"338","severity":1,"message":"382","line":4,"column":9,"nodeType":"340","messageId":"341","endLine":4,"endColumn":13},{"ruleId":"338","severity":1,"message":"383","line":7,"column":8,"nodeType":"340","messageId":"341","endLine":7,"endColumn":28},{"ruleId":"338","severity":1,"message":"384","line":15,"column":9,"nodeType":"340","messageId":"341","endLine":15,"endColumn":20},{"ruleId":"338","severity":1,"message":"385","line":23,"column":11,"nodeType":"340","messageId":"341","endLine":23,"endColumn":22},{"ruleId":"338","severity":1,"message":"380","line":3,"column":9,"nodeType":"340","messageId":"341","endLine":3,"endColumn":24},{"ruleId":"338","severity":1,"message":"359","line":1,"column":8,"nodeType":"340","messageId":"341","endLine":1,"endColumn":13},{"ruleId":"338","severity":1,"message":"360","line":2,"column":9,"nodeType":"340","messageId":"341","endLine":2,"endColumn":25},{"ruleId":"338","severity":1,"message":"361","line":2,"column":40,"nodeType":"340","messageId":"341","endLine":2,"endColumn":47},{"ruleId":"338","severity":1,"message":"362","line":3,"column":8,"nodeType":"340","messageId":"341","endLine":3,"endColumn":13},{"ruleId":"338","severity":1,"message":"364","line":5,"column":22,"nodeType":"340","messageId":"341","endLine":5,"endColumn":26},{"ruleId":"338","severity":1,"message":"386","line":1,"column":9,"nodeType":"340","messageId":"341","endLine":1,"endColumn":12},{"ruleId":"338","severity":1,"message":"373","line":1,"column":20,"nodeType":"340","messageId":"341","endLine":1,"endColumn":30},{"ruleId":"387","severity":1,"message":"388","line":20,"column":13,"nodeType":"345","endLine":20,"endColumn":80},{"ruleId":"338","severity":1,"message":"389","line":1,"column":9,"nodeType":"340","messageId":"341","endLine":1,"endColumn":16},{"ruleId":"338","severity":1,"message":"349","line":4,"column":9,"nodeType":"340","messageId":"341","endLine":4,"endColumn":20},{"ruleId":"338","severity":1,"message":"350","line":6,"column":9,"nodeType":"340","messageId":"341","endLine":6,"endColumn":18},{"ruleId":"338","severity":1,"message":"390","line":10,"column":10,"nodeType":"340","messageId":"341","endLine":10,"endColumn":18},{"ruleId":"338","severity":1,"message":"372","line":4,"column":20,"nodeType":"340","messageId":"341","endLine":4,"endColumn":34},{"ruleId":"338","severity":1,"message":"391","line":6,"column":9,"nodeType":"340","messageId":"341","endLine":6,"endColumn":20},{"ruleId":"338","severity":1,"message":"372","line":3,"column":9,"nodeType":"340","messageId":"341","endLine":3,"endColumn":23},{"ruleId":"338","severity":1,"message":"350","line":5,"column":9,"nodeType":"340","messageId":"341","endLine":5,"endColumn":18},{"ruleId":"338","severity":1,"message":"349","line":6,"column":9,"nodeType":"340","messageId":"341","endLine":6,"endColumn":20},{"ruleId":"338","severity":1,"message":"357","line":6,"column":22,"nodeType":"340","messageId":"341","endLine":6,"endColumn":33},{"ruleId":"338","severity":1,"message":"358","line":13,"column":22,"nodeType":"340","messageId":"341","endLine":13,"endColumn":31},{"ruleId":"338","severity":1,"message":"392","line":21,"column":10,"nodeType":"340","messageId":"341","endLine":21,"endColumn":18},{"ruleId":"352","severity":1,"message":"393","line":25,"column":7,"nodeType":"354","endLine":25,"endColumn":9,"suggestions":"394"},{"ruleId":"387","severity":1,"message":"388","line":83,"column":19,"nodeType":"345","endLine":92,"endColumn":21},{"ruleId":"387","severity":1,"message":"388","line":97,"column":25,"nodeType":"345","endLine":106,"endColumn":27},{"ruleId":"387","severity":1,"message":"388","line":110,"column":31,"nodeType":"345","endLine":127,"endColumn":33},{"ruleId":"387","severity":1,"message":"388","line":232,"column":19,"nodeType":"345","endLine":241,"endColumn":21},{"ruleId":"387","severity":1,"message":"388","line":246,"column":25,"nodeType":"345","endLine":255,"endColumn":27},{"ruleId":"387","severity":1,"message":"388","line":259,"column":31,"nodeType":"345","endLine":276,"endColumn":33},{"ruleId":"338","severity":1,"message":"359","line":1,"column":8,"nodeType":"340","messageId":"341","endLine":1,"endColumn":13},{"ruleId":"338","severity":1,"message":"360","line":4,"column":4,"nodeType":"340","messageId":"341","endLine":4,"endColumn":20},{"ruleId":"338","severity":1,"message":"395","line":5,"column":4,"nodeType":"340","messageId":"341","endLine":5,"endColumn":15},{"ruleId":"338","severity":1,"message":"361","line":6,"column":4,"nodeType":"340","messageId":"341","endLine":6,"endColumn":11},{"ruleId":"338","severity":1,"message":"362","line":8,"column":8,"nodeType":"340","messageId":"341","endLine":8,"endColumn":13},{"ruleId":"338","severity":1,"message":"364","line":10,"column":22,"nodeType":"340","messageId":"341","endLine":10,"endColumn":26},{"ruleId":"338","severity":1,"message":"396","line":11,"column":9,"nodeType":"340","messageId":"341","endLine":11,"endColumn":22},{"ruleId":"338","severity":1,"message":"397","line":12,"column":9,"nodeType":"340","messageId":"341","endLine":12,"endColumn":18},{"ruleId":"338","severity":1,"message":"357","line":3,"column":9,"nodeType":"340","messageId":"341","endLine":3,"endColumn":20},{"ruleId":"338","severity":1,"message":"398","line":5,"column":20,"nodeType":"340","messageId":"341","endLine":5,"endColumn":27},{"ruleId":"352","severity":1,"message":"399","line":15,"column":7,"nodeType":"354","endLine":15,"endColumn":9,"suggestions":"400"},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'DevMenu' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"401","text":"402"},"'Grid' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","'AddToDo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["403"],"'Icon' is defined but never used.","'useDispatch' is defined but never used.","'useParams' is defined but never used.","'React' is defined but never used.","'createAsyncThunk' is defined but never used.","'current' is defined but never used.","'axios' is defined but never used.","'TODOS' is defined but never used.","'Todo' is defined but never used.","'generateRandomColor' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ColorLensSharp' is defined but never used.","'getTodos' is defined but never used.","'useAppDispatch' is defined but never used.","'Typography' is defined but never used.","'AddToDoTask' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'TextField' is defined but never used.","'IconButton' is defined but never used.","'navigate' is assigned a value but never used.","'errorModalProps' is defined but never used.",{"range":"404","text":"402"},"'Link' is defined but never used.","'AddCircleOutlineIcon' is defined but never used.","'shuffleDeck' is defined but never used.","'currentDeck' is assigned a value but never used.","'Box' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Masonry' is defined but never used.","'dispatch' is assigned a value but never used.","'GlobalState' is defined but never used.","'location' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'params.id'. Either include them or remove the dependency array.",["405"],"'createSlice' is defined but never used.","'createNewDeck' is defined but never used.","'drawCards' is defined but never used.","'getDeck' is defined but never used.","React Hook useEffect has a missing dependency: 'deckId'. Either include it or remove the dependency array.",["406"],[405,405]," rel=\"noreferrer\"",{"desc":"407","fix":"408"},[405,405],{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},"Update the dependencies array to be: [dispatch]",{"range":"413","text":"414"},"Update the dependencies array to be: [dispatch, params.id]",{"range":"415","text":"416"},"Update the dependencies array to be: [deckId]",{"range":"417","text":"418"},[559,561],"[dispatch]",[1054,1056],"[dispatch, params.id]",[515,517],"[deckId]"]