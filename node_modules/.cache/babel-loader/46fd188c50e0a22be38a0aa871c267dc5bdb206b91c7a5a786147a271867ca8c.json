{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _chainPropTypes = _interopRequireDefault(require(\"./chainPropTypes\"));\nfunction isClassComponent(elementType) {\n  // elementType.prototype?.isReactComponent\n  const {\n    prototype = {}\n  } = elementType;\n  return Boolean(prototype.isReactComponent);\n}\nfunction elementTypeAcceptingRef(props, propName, componentName, location, propFullName) {\n  const propValue = props[propName];\n  const safePropName = propFullName || propName;\n  if (propValue == null ||\n  // When server-side rendering React doesn't warn either.\n  // This is not an accurate check for SSR.\n  // This is only in place for emotion compat.\n  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.\n  typeof window === 'undefined') {\n    return null;\n  }\n  let warningHint;\n\n  /**\n   * Blacklisting instead of whitelisting\n   *\n   * Blacklisting will miss some components, such as React.Fragment. Those will at least\n   * trigger a warning in React.\n   * We can't whitelist because there is no safe way to detect React.forwardRef\n   * or class components. \"Safe\" means there's no public API.\n   *\n   */\n  if (typeof propValue === 'function' && !isClassComponent(propValue)) {\n    warningHint = 'Did you accidentally provide a plain function component instead?';\n  }\n  if (warningHint !== undefined) {\n    return new Error(`Invalid ${location} \\`${safePropName}\\` supplied to \\`${componentName}\\`. ` + `Expected an element type that can hold a ref. ${warningHint} ` + 'For more information see https://mui.com/r/caveat-with-refs-guide');\n  }\n  return null;\n}\nvar _default = (0, _chainPropTypes.default)(_propTypes.default.elementType, elementTypeAcceptingRef);\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_propTypes","_chainPropTypes","isClassComponent","elementType","prototype","Boolean","isReactComponent","elementTypeAcceptingRef","props","propName","componentName","location","propFullName","propValue","safePropName","window","warningHint","undefined","Error","_default"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/node_modules/@mui/utils/elementTypeAcceptingRef.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _chainPropTypes = _interopRequireDefault(require(\"./chainPropTypes\"));\nfunction isClassComponent(elementType) {\n  // elementType.prototype?.isReactComponent\n  const {\n    prototype = {}\n  } = elementType;\n  return Boolean(prototype.isReactComponent);\n}\nfunction elementTypeAcceptingRef(props, propName, componentName, location, propFullName) {\n  const propValue = props[propName];\n  const safePropName = propFullName || propName;\n  if (propValue == null ||\n  // When server-side rendering React doesn't warn either.\n  // This is not an accurate check for SSR.\n  // This is only in place for emotion compat.\n  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.\n  typeof window === 'undefined') {\n    return null;\n  }\n  let warningHint;\n\n  /**\n   * Blacklisting instead of whitelisting\n   *\n   * Blacklisting will miss some components, such as React.Fragment. Those will at least\n   * trigger a warning in React.\n   * We can't whitelist because there is no safe way to detect React.forwardRef\n   * or class components. \"Safe\" means there's no public API.\n   *\n   */\n  if (typeof propValue === 'function' && !isClassComponent(propValue)) {\n    warningHint = 'Did you accidentally provide a plain function component instead?';\n  }\n  if (warningHint !== undefined) {\n    return new Error(`Invalid ${location} \\`${safePropName}\\` supplied to \\`${componentName}\\`. ` + `Expected an element type that can hold a ref. ${warningHint} ` + 'For more information see https://mui.com/r/caveat-with-refs-guide');\n  }\n  return null;\n}\nvar _default = (0, _chainPropTypes.default)(_propTypes.default.elementType, elementTypeAcceptingRef);\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AACpFC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,UAAU,GAAGP,sBAAsB,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;AAC9D,IAAIO,eAAe,GAAGR,sBAAsB,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACzE,SAASQ,gBAAgBA,CAACC,WAAW,EAAE;EACrC;EACA,MAAM;IACJC,SAAS,GAAG,CAAC;EACf,CAAC,GAAGD,WAAW;EACf,OAAOE,OAAO,CAACD,SAAS,CAACE,gBAAgB,CAAC;AAC5C;AACA,SAASC,uBAAuBA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,YAAY,EAAE;EACvF,MAAMC,SAAS,GAAGL,KAAK,CAACC,QAAQ,CAAC;EACjC,MAAMK,YAAY,GAAGF,YAAY,IAAIH,QAAQ;EAC7C,IAAII,SAAS,IAAI,IAAI;EACrB;EACA;EACA;EACA;EACA,OAAOE,MAAM,KAAK,WAAW,EAAE;IAC7B,OAAO,IAAI;EACb;EACA,IAAIC,WAAW;;EAEf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,OAAOH,SAAS,KAAK,UAAU,IAAI,CAACX,gBAAgB,CAACW,SAAS,CAAC,EAAE;IACnEG,WAAW,GAAG,kEAAkE;EAClF;EACA,IAAIA,WAAW,KAAKC,SAAS,EAAE;IAC7B,OAAO,IAAIC,KAAK,CAAE,WAAUP,QAAS,MAAKG,YAAa,oBAAmBJ,aAAc,MAAK,GAAI,iDAAgDM,WAAY,GAAE,GAAG,mEAAmE,CAAC;EACxO;EACA,OAAO,IAAI;AACb;AACA,IAAIG,QAAQ,GAAG,CAAC,CAAC,EAAElB,eAAe,CAACF,OAAO,EAAEC,UAAU,CAACD,OAAO,CAACI,WAAW,EAAEI,uBAAuB,CAAC;AACpGV,OAAO,CAACE,OAAO,GAAGoB,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}