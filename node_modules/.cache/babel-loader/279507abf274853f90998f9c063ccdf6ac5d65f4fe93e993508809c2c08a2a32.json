{"ast":null,"code":"import { createSlice, current } from '@reduxjs/toolkit';\nconst initialState = {\n  value: 0\n};\nexport const RootReducer = createSlice({\n  name: 'todo_app',\n  initialState,\n  reducers: {\n    addToDo: state => {\n      state.value += 1;\n      console.log(current(state));\n    }\n  }\n});\nexport const {\n  addToDo\n} = RootReducer.actions;\nexport default RootReducer.reducer;","map":{"version":3,"names":["createSlice","current","initialState","value","RootReducer","name","reducers","addToDo","state","console","log","actions","reducer"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/redux-store/RootReducer.ts"],"sourcesContent":["import React from 'react';\nimport {createSlice, current} from '@reduxjs/toolkit';\n\nexport interface CounterState {\n   value: number;\n}\n\nconst initialState: CounterState = {\n   value: 0,\n};\n\nexport const RootReducer = createSlice({\n   name: 'todo_app',\n   initialState,\n   reducers: {\n      addToDo: state => {\n         state.value += 1;\n         console.log(current(state));\n      },\n   },\n});\nexport const {addToDo} = RootReducer.actions;\n\nexport default RootReducer.reducer;\n"],"mappings":"AACA,SAAQA,WAAW,EAAEC,OAAO,QAAO,kBAAkB;AAMrD,MAAMC,YAA0B,GAAG;EAChCC,KAAK,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGJ,WAAW,CAAC;EACpCK,IAAI,EAAE,UAAU;EAChBH,YAAY;EACZI,QAAQ,EAAE;IACPC,OAAO,EAAEC,KAAK,IAAI;MACfA,KAAK,CAACL,KAAK,IAAI,CAAC;MAChBM,OAAO,CAACC,GAAG,CAACT,OAAO,CAACO,KAAK,CAAC,CAAC;IAC9B;EACH;AACH,CAAC,CAAC;AACF,OAAO,MAAM;EAACD;AAAO,CAAC,GAAGH,WAAW,CAACO,OAAO;AAE5C,eAAeP,WAAW,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}