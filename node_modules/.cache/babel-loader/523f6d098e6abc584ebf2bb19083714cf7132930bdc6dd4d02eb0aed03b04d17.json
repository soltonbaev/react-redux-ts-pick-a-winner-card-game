{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import addToDoReducer from'./RootReducer';import{useDispatch}from'react-redux';export var store=configureStore({reducer:addToDoReducer});// Infer the `RootState` and `AppDispatßch` types from the store itself\nexport var useAppDispatch=useDispatch;// Export a hook that","map":{"version":3,"names":["configureStore","addToDoReducer","useDispatch","store","reducer","useAppDispatch"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/redux-store/store.ts"],"sourcesContent":["import {configureStore} from '@reduxjs/toolkit';\nimport addToDoReducer from './RootReducer';\nimport {useDispatch} from 'react-redux';\n\nexport const store = configureStore({\n   reducer: addToDoReducer,\n});\n\n// Infer the `RootState` and `AppDispatßch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch: () => AppDispatch = useDispatch; // Export a hook that\n"],"mappings":"AAAA,OAAQA,cAAc,KAAO,kBAAkB,CAC/C,MAAO,CAAAC,cAAc,KAAM,eAAe,CAC1C,OAAQC,WAAW,KAAO,aAAa,CAEvC,MAAO,IAAM,CAAAC,KAAK,CAAGH,cAAc,CAAC,CACjCI,OAAO,CAAEH,cACZ,CAAC,CAAC,CAEF;AAIA,MAAO,IAAM,CAAAI,cAAiC,CAAGH,WAAW,CAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}