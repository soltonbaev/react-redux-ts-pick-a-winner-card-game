{"ast":null,"code":"var _jsxFileName = \"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/CurrentDeck.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Container, Grid, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { calcHighestRank } from '../../helpers/calculate';\nimport { drawCards, getDeck, useGlobalState } from '../../helpers/CRUD/read';\nimport { useAppDispatch } from '../../redux-store/store';\nimport cardBack from './back_of_a_card.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CurrentDeck = () => {\n  _s();\n  const [gameOn, setGameOn] = useState(false);\n  const [cardsShown, setCardsShown] = useState(false);\n  const [buttonShown, setButtonShown] = useState(true);\n  const [hasWon, sethasWon] = useState(false);\n  const {\n    currentDeck,\n    currentDraw\n  } = useGlobalState();\n  const params = useParams();\n  const location = useLocation();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getDeck(params.id));\n  }, []);\n  function handleDraw() {\n    let winner = calcHighestRank(currentDraw.cards[0].code[0], currentDraw.cards[1].code[0]);\n    setWinner(winner);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      margin: '6rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 4,\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: gameOn && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: cardsShown ? /*#__PURE__*/_jsxDEV(\"img\", {\n            id: currentDraw.cards[0].code[0],\n            style: {\n              width: '226px',\n              height: '314px'\n            },\n            src: currentDraw.cards[0].images.png,\n            onClick: e => {\n              const target = e.target;\n              console.log(target.id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '226px',\n              height: '314px'\n            },\n            src: cardBack,\n            onClick: () => {\n              setCardsShown(true);\n              setButtonShown(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 4,\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'space-evenly'\n        },\n        children: buttonShown ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Deck id: \", currentDeck.deck_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Cards remaining in deck: \", currentDeck.remaining]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              dispatch(drawCards(params.id));\n              setCardsShown(false);\n              setGameOn(true);\n              setButtonShown(false);\n            },\n            variant: \"contained\",\n            children: \"Play!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Click on the left or right card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 22\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 4,\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: gameOn && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: cardsShown ? /*#__PURE__*/_jsxDEV(\"img\", {\n            id: currentDraw.cards[1].code[0],\n            style: {\n              width: '226px',\n              height: '314px'\n            },\n            src: currentDraw.cards[1].images.png,\n            onClick: e => {\n              const target = e.target;\n              console.log(target.id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '226px',\n              height: '314px'\n            },\n            src: cardBack,\n            onClick: () => {\n              setCardsShown(true);\n              setButtonShown(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n_s(CurrentDeck, \"pkuxfe0LQ8w8rvE6EZeO/hBqc0k=\", false, function () {\n  return [useGlobalState, useParams, useLocation, useAppDispatch];\n});\n_c = CurrentDeck;\nexport default CurrentDeck;\nvar _c;\n$RefreshReg$(_c, \"CurrentDeck\");","map":{"version":3,"names":["Button","Container","Grid","Typography","React","useEffect","useState","useLocation","useParams","calcHighestRank","drawCards","getDeck","useGlobalState","useAppDispatch","cardBack","jsxDEV","_jsxDEV","Fragment","_Fragment","CurrentDeck","_s","gameOn","setGameOn","cardsShown","setCardsShown","buttonShown","setButtonShown","hasWon","sethasWon","currentDeck","currentDraw","params","location","dispatch","id","handleDraw","winner","cards","code","setWinner","maxWidth","sx","margin","children","container","item","lg","display","alignItems","justifyContent","style","width","height","src","images","png","onClick","e","target","console","log","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","variant","deck_id","remaining","_c","$RefreshReg$"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/CurrentDeck.tsx"],"sourcesContent":["import {Button, Container, Grid, Typography} from '@mui/material';\nimport React, {useEffect, useState} from 'react';\nimport {useLocation, useParams} from 'react-router-dom';\nimport {calcHighestRank} from '../../helpers/calculate';\nimport {drawCards, getDeck, useGlobalState} from '../../helpers/CRUD/read';\nimport {useAppDispatch} from '../../redux-store/store';\nimport cardBack from './back_of_a_card.jpg';\n\nconst CurrentDeck = () => {\n   const [gameOn, setGameOn] = useState(false);\n   const [cardsShown, setCardsShown] = useState(false);\n   const [buttonShown, setButtonShown] = useState(true);\n   const [hasWon, sethasWon] = useState(false);\n   const {currentDeck, currentDraw} = useGlobalState();\n   const params = useParams();\n   const location = useLocation();\n   const dispatch = useAppDispatch();\n   useEffect(() => {\n      dispatch(getDeck(params.id));\n   }, []);\n\n   function handleDraw() {\n      let winner = calcHighestRank(\n         currentDraw.cards[0].code[0],\n         currentDraw.cards[1].code[0]\n      );\n      setWinner(winner);\n   }\n\n   return (\n      <Container maxWidth=\"lg\" sx={{margin: '6rem'}}>\n         <Grid container>\n            <Grid\n               item\n               lg={4}\n               sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n               }}\n            >\n               {gameOn && (\n                  <>\n                     {cardsShown ? (\n                        <img\n                           id={currentDraw.cards[0].code[0]}\n                           style={{width: '226px', height: '314px'}}\n                           src={currentDraw.cards[0].images.png}\n                           onClick={e => {\n                              const target = e.target as HTMLButtonElement;\n                              console.log(target.id);\n                           }}\n                        />\n                     ) : (\n                        <img\n                           style={{width: '226px', height: '314px'}}\n                           src={cardBack}\n                           onClick={() => {\n                              setCardsShown(true);\n                              setButtonShown(true);\n                           }}\n                        />\n                     )}\n                  </>\n               )}\n            </Grid>\n            <Grid\n               item\n               lg={4}\n               sx={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  justifyContent: 'space-evenly',\n               }}\n            >\n               {buttonShown ? (\n                  <>\n                     <Typography variant=\"h6\">\n                        Deck id: {currentDeck.deck_id}\n                     </Typography>\n                     <Typography variant=\"h6\">\n                        Cards remaining in deck: {currentDeck.remaining}\n                     </Typography>\n                     <Button\n                        onClick={() => {\n                           dispatch(drawCards(params.id));\n                           setCardsShown(false);\n                           setGameOn(true);\n                           setButtonShown(false);\n                        }}\n                        variant=\"contained\"\n                     >\n                        Play!\n                     </Button>\n                  </>\n               ) : (\n                  <>\n                     <Typography variant=\"h6\">\n                        Click on the left or right card\n                     </Typography>\n                  </>\n               )}\n            </Grid>\n            <Grid\n               item\n               lg={4}\n               sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n               }}\n            >\n               {gameOn && (\n                  <>\n                     {cardsShown ? (\n                        <img\n                           id={currentDraw.cards[1].code[0]}\n                           style={{width: '226px', height: '314px'}}\n                           src={currentDraw.cards[1].images.png}\n                           onClick={e => {\n                              const target = e.target as HTMLButtonElement;\n                              console.log(target.id);\n                           }}\n                        />\n                     ) : (\n                        <img\n                           style={{width: '226px', height: '314px'}}\n                           src={cardBack}\n                           onClick={() => {\n                              setCardsShown(true);\n                              setButtonShown(true);\n                           }}\n                        />\n                     )}\n                  </>\n               )}\n            </Grid>\n         </Grid>\n      </Container>\n   );\n};\n\nexport default CurrentDeck;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}