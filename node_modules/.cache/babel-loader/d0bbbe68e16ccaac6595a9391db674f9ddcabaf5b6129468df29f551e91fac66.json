{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { addTask, addToDo } from '../helpers/CRUD/create';\nimport { getTasks, getTodos } from '../helpers/CRUD/read';\nimport { deleteTask, deleteTodo } from '../helpers/CRUD/delete';\nimport { toggleCompleted, updateTitle } from '../helpers/CRUD/update';\nconst initialState = {\n  todos: [],\n  tasks: [],\n  info: {}\n  //    notes: [],\n  //    type: '',\n  //    title: '',\n};\n\nexport const RootReducer = createSlice({\n  name: 'todo_app',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(addToDo.pending, (state, action) => {\n      state.info = {\n        switchModalOn: true,\n        type: 'warning',\n        message: 'Adding a list...'\n      };\n    });\n    builder.addCase(addToDo.fulfilled, (state, action) => {\n      state.todos.push(action.payload);\n      state.info = {\n        switchModalOn: false,\n        type: 'success',\n        message: 'List added'\n      };\n    });\n    builder.addCase(getTodos.fulfilled, (state, action) => {\n      state.todos = action.payload;\n      state.info = {\n        switchModalOn: false,\n        type: 'success',\n        message: 'Lists loaded successfully...'\n      };\n    });\n    builder.addCase(getTodos.pending, (state, action) => {\n      state.info = {\n        switchModalOn: true,\n        type: 'warning',\n        message: 'Please wait while lists are loading...'\n      };\n    });\n    builder.addCase(deleteTodo.fulfilled, (state, action) => {\n      state.todos = state.todos.filter(todo => {\n        return todo.id !== action.payload;\n      });\n      console.log(action.payload);\n    });\n    builder.addCase(updateTitle.fulfilled, (state, action) => {\n      state.todos.map(todo => {\n        console.log(todo);\n        if (todo.id === action.payload.id) {\n          todo.title = action.payload.title;\n          console.log('todo found!');\n        }\n      });\n    });\n    builder.addCase(addTask.fulfilled, (state, action) => {\n      state.tasks.push(action.payload);\n    });\n    builder.addCase(getTasks.fulfilled, (state, action) => {\n      state.tasks = action.payload;\n    });\n    builder.addCase(deleteTask.fulfilled, (state, action) => {\n      state.tasks = state.tasks.filter(task => {\n        return task.id !== action.payload;\n      });\n      console.log(action.payload);\n    });\n    builder.addCase(toggleCompleted.fulfilled, (state, action) => {\n      state.tasks.map(task => {\n        console.log(task);\n        if (task.id === action.payload.id) {\n          task.completed = action.payload.completed;\n        }\n      });\n    });\n  }\n});\nexport const getInfoObj = state => state.info;\n\n// export const {addToDo} = RootReducer.actions;\nexport default RootReducer.reducer;","map":{"version":3,"names":["createSlice","addTask","addToDo","getTasks","getTodos","deleteTask","deleteTodo","toggleCompleted","updateTitle","initialState","todos","tasks","info","RootReducer","name","reducers","extraReducers","builder","addCase","pending","state","action","switchModalOn","type","message","fulfilled","push","payload","filter","todo","id","console","log","map","title","task","completed","getInfoObj","reducer"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/redux-store/RootReducer.ts"],"sourcesContent":["import React from 'react';\nimport {createAsyncThunk, createSlice, current} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {TODOS} from '../helpers/consts';\nimport {GlobalState, Todo} from '../helpers/types';\nimport {addTask, addToDo, generateRandomColor} from '../helpers/CRUD/create';\nimport {getTasks, getTodos} from '../helpers/CRUD/read';\nimport {deleteTask, deleteTodo} from '../helpers/CRUD/delete';\nimport {toggleCompleted, updateTitle} from '../helpers/CRUD/update';\n\nconst initialState: GlobalState = {\n   todos: [],\n   tasks: [],\n   info: {},\n   //    notes: [],\n   //    type: '',\n   //    title: '',\n};\n\nexport const RootReducer = createSlice({\n   name: 'todo_app',\n   initialState,\n   reducers: {},\n   extraReducers(builder) {\n      builder.addCase(addToDo.pending, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'warning',\n            message: 'Adding a list...',\n         };\n      });\n      builder.addCase(addToDo.fulfilled, (state, action) => {\n         state.todos.push(action.payload);\n         state.info = {\n            switchModalOn: false,\n            type: 'success',\n            message: 'List added',\n         };\n      });\n      builder.addCase(getTodos.fulfilled, (state, action) => {\n         state.todos = action.payload;\n         state.info = {\n            switchModalOn: false,\n            type: 'success',\n            message: 'Lists loaded successfully...',\n         };\n      });\n      builder.addCase(getTodos.pending, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'warning',\n            message: 'Please wait while lists are loading...',\n         };\n      });\n      builder.addCase(deleteTodo.fulfilled, (state, action) => {\n         state.todos = state.todos.filter(todo => {\n            return todo.id !== action.payload;\n         });\n         console.log(action.payload);\n      });\n      builder.addCase(updateTitle.fulfilled, (state, action) => {\n         state.todos.map(todo => {\n            console.log(todo);\n            if (todo.id === action.payload.id) {\n               todo.title = action.payload.title;\n               console.log('todo found!');\n            }\n         });\n      });\n\n      builder.addCase(addTask.fulfilled, (state, action) => {\n         state.tasks.push(action.payload);\n      });\n      builder.addCase(getTasks.fulfilled, (state, action) => {\n         state.tasks = action.payload;\n      });\n      builder.addCase(deleteTask.fulfilled, (state, action) => {\n         state.tasks = state.tasks.filter(task => {\n            return task.id !== action.payload;\n         });\n         console.log(action.payload);\n      });\n      builder.addCase(toggleCompleted.fulfilled, (state, action) => {\n         state.tasks.map(task => {\n            console.log(task);\n            if (task.id === action.payload.id) {\n               task.completed = action.payload.completed;\n            }\n         });\n      });\n   },\n});\n\nexport const getInfoObj = (state: any) => state.info;\n\n// export const {addToDo} = RootReducer.actions;\nexport default RootReducer.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}