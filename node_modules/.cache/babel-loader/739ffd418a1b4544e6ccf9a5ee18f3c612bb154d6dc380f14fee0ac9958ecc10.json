{"ast":null,"code":"var _jsxFileName = \"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/RenderDeck.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Grid, Paper, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchDeck } from '../../helpers/CRUD/read';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderDeck = _ref => {\n  _s();\n  let {\n    deckId\n  } = _ref;\n  const navigate = useNavigate();\n  const [deck, setDeck] = useState({\n    remaining: ''\n  });\n  useEffect(() => {\n    fetchDeck(deckId).then(res => {\n      console.log(res);\n      setDeck(res);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    lg: 3,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 5,\n      sx: {\n        minHeight: '15rem',\n        padding: '1rem',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Deck: \", deckId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Cards remaining in deck: \", deck.remaining]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        sx: {\n          position: 'absolute',\n          left: '1rem',\n          bottom: '1rem'\n        },\n        onClick: () => {\n          navigate(`/decks/${deckId}`);\n        },\n        children: \"Play this deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n_s(RenderDeck, \"kgL0l+mLnCmWkGu6/YP/i+uA6Wk=\", false, function () {\n  return [useNavigate];\n});\n_c = RenderDeck;\nexport default RenderDeck;\nvar _c;\n$RefreshReg$(_c, \"RenderDeck\");","map":{"version":3,"names":["Button","Grid","Paper","Typography","React","useEffect","useState","useNavigate","fetchDeck","jsxDEV","_jsxDEV","RenderDeck","_ref","_s","deckId","navigate","deck","setDeck","remaining","then","res","console","log","item","lg","children","elevation","sx","minHeight","padding","position","variant","fileName","_jsxFileName","lineNumber","columnNumber","left","bottom","onClick","_c","$RefreshReg$"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/RenderDeck.tsx"],"sourcesContent":["import {Button, Grid, Paper, Typography} from '@mui/material';\nimport React, {useEffect, useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {useNavigate} from 'react-router-dom';\nimport {fetchDeck, getDeck} from '../../helpers/CRUD/read';\n\nconst RenderDeck = ({deckId}: any) => {\n   const navigate = useNavigate();\n   const [deck, setDeck] = useState({remaining: ''});\n   useEffect(() => {\n      fetchDeck(deckId).then(res => {\n         console.log(res);\n         setDeck(res);\n      });\n   }, []);\n   return (\n      <Grid item lg={3}>\n         <Paper\n            elevation={5}\n            sx={{minHeight: '15rem', padding: '1rem', position: 'relative'}}\n         >\n            <Typography variant=\"h6\">Deck: {deckId}</Typography>\n            <Typography>Cards remaining in deck: {deck.remaining}</Typography>\n            <Button\n               variant=\"outlined\"\n               sx={{position: 'absolute', left: '1rem', bottom: '1rem'}}\n               onClick={() => {\n                  navigate(`/decks/${deckId}`);\n               }}\n            >\n               Play this deck\n            </Button>\n         </Paper>\n      </Grid>\n   );\n};\n\nexport default RenderDeck;\n"],"mappings":";;AAAA,SAAQA,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,UAAU,QAAO,eAAe;AAC7D,OAAOC,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEhD,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,SAAS,QAAgB,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,UAAU,GAAGC,IAAA,IAAmB;EAAAC,EAAA;EAAA,IAAlB;IAACC;EAAW,CAAC,GAAAF,IAAA;EAC9B,MAAMG,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAACY,SAAS,EAAE;EAAE,CAAC,CAAC;EACjDb,SAAS,CAAC,MAAM;IACbG,SAAS,CAACM,MAAM,CAAC,CAACK,IAAI,CAACC,GAAG,IAAI;MAC3BC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBH,OAAO,CAACG,GAAG,CAAC;IACf,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACN,oBACGV,OAAA,CAACT,IAAI;IAACsB,IAAI;IAACC,EAAE,EAAE,CAAE;IAAAC,QAAA,eACdf,OAAA,CAACR,KAAK;MACHwB,SAAS,EAAE,CAAE;MACbC,EAAE,EAAE;QAACC,SAAS,EAAE,OAAO;QAAEC,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAU,CAAE;MAAAL,QAAA,gBAEhEf,OAAA,CAACP,UAAU;QAAC4B,OAAO,EAAC,IAAI;QAAAN,QAAA,GAAC,QAAM,EAACX,MAAM;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAc,eACpDzB,OAAA,CAACP,UAAU;QAAAsB,QAAA,GAAC,2BAAyB,EAACT,IAAI,CAACE,SAAS;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAc,eAClEzB,OAAA,CAACV,MAAM;QACJ+B,OAAO,EAAC,UAAU;QAClBJ,EAAE,EAAE;UAACG,QAAQ,EAAE,UAAU;UAAEM,IAAI,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAM,CAAE;QACzDC,OAAO,EAAEA,CAAA,KAAM;UACZvB,QAAQ,CAAE,UAASD,MAAO,EAAC,CAAC;QAC/B,CAAE;QAAAW,QAAA,EACJ;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEb,CAAC;AAACtB,EAAA,CA7BIF,UAAU;EAAA,QACIJ,WAAW;AAAA;AAAAgC,EAAA,GADzB5B,UAAU;AA+BhB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}