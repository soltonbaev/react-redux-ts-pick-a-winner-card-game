{"ast":null,"code":"var _jsxFileName = \"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/ToDoTask/RenderTasks.tsx\",\n  _s = $RefreshSig$();\nimport { Grid } from '@mui/material';\nimport React from 'react';\nimport { useGlobalState } from '../../../../helpers/CRUD/read';\nimport ToDoTask from './ToDoTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderTasks = _ref => {\n  _s();\n  let {\n    todoId\n  } = _ref;\n  const {\n    tasks\n  } = useGlobalState();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    sx: {\n      padding: '1rem 1rem 1rem 0'\n    },\n    children: tasks.map(task => {\n      // console.log(task.task);\n      if (todoId === task.todoId) {\n        //    return <Typography>{task.task}</Typography>;\n        return /*#__PURE__*/_jsxDEV(ToDoTask, {\n          task: task.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 23\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n_s(RenderTasks, \"TnZYwJZr9f2/hjiF6TDqMG/lSPA=\", false, function () {\n  return [useGlobalState];\n});\n_c = RenderTasks;\nexport default RenderTasks;\nvar _c;\n$RefreshReg$(_c, \"RenderTasks\");","map":{"version":3,"names":["Grid","React","useGlobalState","ToDoTask","jsxDEV","_jsxDEV","RenderTasks","_ref","_s","todoId","tasks","item","sx","padding","children","map","task","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/ToDoTask/RenderTasks.tsx"],"sourcesContent":["import {Grid, Typography} from '@mui/material';\nimport React from 'react';\nimport {useGlobalState} from '../../../../helpers/CRUD/read';\nimport AddToDoTask from './AddToDoTask';\nimport ToDoTask from './ToDoTask';\n\nconst RenderTasks = ({todoId}: any) => {\n   const {tasks} = useGlobalState();\n   return (\n      <Grid item sx={{padding: '1rem 1rem 1rem 0'}}>\n         {tasks.map(task => {\n            // console.log(task.task);\n            if (todoId === task.todoId) {\n               //    return <Typography>{task.task}</Typography>;\n               return <ToDoTask task={task.task} />;\n            }\n         })}\n      </Grid>\n   );\n};\n\nexport default RenderTasks;\n"],"mappings":";;AAAA,SAAQA,IAAI,QAAmB,eAAe;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,cAAc,QAAO,+BAA+B;AAE5D,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,GAAGC,IAAA,IAAmB;EAAAC,EAAA;EAAA,IAAlB;IAACC;EAAW,CAAC,GAAAF,IAAA;EAC/B,MAAM;IAACG;EAAK,CAAC,GAAGR,cAAc,EAAE;EAChC,oBACGG,OAAA,CAACL,IAAI;IAACW,IAAI;IAACC,EAAE,EAAE;MAACC,OAAO,EAAE;IAAkB,CAAE;IAAAC,QAAA,EACzCJ,KAAK,CAACK,GAAG,CAACC,IAAI,IAAI;MAChB;MACA,IAAIP,MAAM,KAAKO,IAAI,CAACP,MAAM,EAAE;QACzB;QACA,oBAAOJ,OAAA,CAACF,QAAQ;UAACa,IAAI,EAAEA,IAAI,CAACA;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MACvC;IACH,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEb,CAAC;AAACZ,EAAA,CAbIF,WAAW;EAAA,QACEJ,cAAc;AAAA;AAAAmB,EAAA,GAD3Bf,WAAW;AAejB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}