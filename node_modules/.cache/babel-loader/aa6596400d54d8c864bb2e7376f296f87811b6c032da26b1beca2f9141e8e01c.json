{"ast":null,"code":"var _jsxFileName = \"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/CurrentDeck.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Container, Grid, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { drawCards, getDeck, useGlobalState } from '../../helpers/CRUD/read';\nimport { useAppDispatch } from '../../redux-store/store';\nimport cardBack from './back_of_a_card.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentDeck = () => {\n  _s();\n  const [gameOn, setGameOn] = useState(false);\n  const [cardsShown, setCardsShown] = useState(false);\n  const [buttonShown, setButtonShown] = useState(true);\n  const {\n    currentDeck,\n    currentDraw\n  } = useGlobalState();\n  const params = useParams();\n  const location = useLocation();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getDeck(params.id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      marginTop: '5rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: currentDeck.deck_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: [\"Cards remaining in deck: \", currentDeck.remaining]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this), gameOn && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 4,\n        children: cardsShown ? /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: '226px',\n            height: '314px'\n          },\n          src: currentDraw.cards[0].images.png\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: '226px',\n            height: '314px'\n          },\n          src: cardBack,\n          onClick: () => {\n            setCardsShown(true);\n            setButtonShown(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 2,\n        children: buttonShown && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            dispatch(drawCards(params.id));\n            setCardsShown(false);\n            setGameOn(true);\n            setButtonShown(false);\n          },\n          variant: \"contained\",\n          children: \"Play a game!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 4,\n        children: cardsShown ? /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: '226px',\n            height: '314px'\n          },\n          src: currentDraw.cards[1].images.png\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: '226px',\n            height: '314px'\n          },\n          src: cardBack,\n          onClick: () => {\n            setCardsShown(true);\n            setButtonShown(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n_s(CurrentDeck, \"7+KCQNSu2dGSYTLO9Bc3GSzJuDw=\", false, function () {\n  return [useGlobalState, useParams, useLocation, useAppDispatch];\n});\n_c = CurrentDeck;\nexport default CurrentDeck;\nvar _c;\n$RefreshReg$(_c, \"CurrentDeck\");","map":{"version":3,"names":["Button","Container","Grid","Typography","React","useEffect","useState","useLocation","useParams","drawCards","getDeck","useGlobalState","useAppDispatch","cardBack","jsxDEV","_jsxDEV","CurrentDeck","_s","gameOn","setGameOn","cardsShown","setCardsShown","buttonShown","setButtonShown","currentDeck","currentDraw","params","location","dispatch","id","maxWidth","sx","marginTop","children","variant","deck_id","fileName","_jsxFileName","lineNumber","columnNumber","remaining","container","item","lg","style","width","height","src","cards","images","png","onClick","_c","$RefreshReg$"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/CurrentDeck.tsx"],"sourcesContent":["import {Button, Container, Grid, Typography} from '@mui/material';\nimport React, {useEffect, useState} from 'react';\nimport {useLocation, useParams} from 'react-router-dom';\nimport {drawCards, getDeck, useGlobalState} from '../../helpers/CRUD/read';\nimport {useAppDispatch} from '../../redux-store/store';\nimport cardBack from './back_of_a_card.jpg';\n\nconst CurrentDeck = () => {\n   const [gameOn, setGameOn] = useState(false);\n   const [cardsShown, setCardsShown] = useState(false);\n   const [buttonShown, setButtonShown] = useState(true);\n   const {currentDeck, currentDraw} = useGlobalState();\n   const params = useParams();\n   const location = useLocation();\n   const dispatch = useAppDispatch();\n   useEffect(() => {\n      dispatch(getDeck(params.id));\n   }, []);\n   return (\n      <Container maxWidth=\"lg\" sx={{marginTop: '5rem'}}>\n         <Typography variant=\"h3\">{currentDeck.deck_id}</Typography>\n\n         <Typography variant=\"h3\">\n            Cards remaining in deck: {currentDeck.remaining}\n         </Typography>\n\n         {gameOn && (\n            <Grid container>\n               <Grid item lg={4}>\n                  {cardsShown ? (\n                     <img\n                        style={{width: '226px', height: '314px'}}\n                        src={currentDraw.cards[0].images.png}\n                     />\n                  ) : (\n                     <img\n                        style={{width: '226px', height: '314px'}}\n                        src={cardBack}\n                        onClick={() => {\n                           setCardsShown(true);\n                           setButtonShown(true);\n                        }}\n                     />\n                  )}\n               </Grid>\n               <Grid item lg={2}>\n                  {buttonShown && (\n                     <Button\n                        onClick={() => {\n                           dispatch(drawCards(params.id));\n                           setCardsShown(false);\n                           setGameOn(true);\n                           setButtonShown(false);\n                        }}\n                        variant=\"contained\"\n                     >\n                        Play a game!\n                     </Button>\n                  )}\n               </Grid>\n               <Grid item lg={4}>\n                  {cardsShown ? (\n                     <img\n                        style={{width: '226px', height: '314px'}}\n                        src={currentDraw.cards[1].images.png}\n                     />\n                  ) : (\n                     <img\n                        style={{width: '226px', height: '314px'}}\n                        src={cardBack}\n                        onClick={() => {\n                           setCardsShown(true);\n                           setButtonShown(true);\n                        }}\n                     />\n                  )}\n               </Grid>\n            </Grid>\n         )}\n      </Container>\n   );\n};\n\nexport default CurrentDeck;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}