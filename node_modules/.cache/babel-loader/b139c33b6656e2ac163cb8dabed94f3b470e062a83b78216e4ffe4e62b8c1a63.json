{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { BASE_URL } from '../consts';\nexport const drawCards = _s(createAsyncThunk('deck/drawCards', _s(async () => {\n  _s();\n  const {\n    currentDeck\n  } = useGlobalState();\n  console.log('draw cards current deck', currentDeck);\n  const response = await axios.get(BASE_URL + currentDeck.deck_id + '/draw/?count=2 ');\n  console.log(response.data);\n  return response.data;\n}, \"Ee/rQDUdm8vsDcvXx2SN6sQVaws=\", false, function () {\n  return [useGlobalState];\n})), \"Ee/rQDUdm8vsDcvXx2SN6sQVaws=\", false, function () {\n  return [useGlobalState];\n});\nexport const useGlobalState = () => {\n  _s2();\n  return useSelector(state => {\n    return state;\n  });\n};\n_s2(useGlobalState, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"names":["createAsyncThunk","axios","useSelector","BASE_URL","drawCards","_s","currentDeck","useGlobalState","console","log","response","get","deck_id","data","_s2","state"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/CRUD/read.ts"],"sourcesContent":["import {createAsyncThunk} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {useSelector} from 'react-redux';\nimport {RootState, useAppDispatch} from '../../redux-store/store';\nimport {BASE_URL} from '../consts';\n\nexport const drawCards = createAsyncThunk('deck/drawCards', async () => {\n   const {currentDeck} = useGlobalState();\n   console.log('draw cards current deck', currentDeck);\n   const response = await axios.get(\n      BASE_URL + currentDeck.deck_id + '/draw/?count=2 '\n   );\n   console.log(response.data);\n   return response.data;\n});\n\nexport const useGlobalState = () => {\n   return useSelector((state: RootState) => {\n      return state;\n   });\n};\n"],"mappings":";;AAAA,SAAQA,gBAAgB,QAAO,kBAAkB;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,aAAa;AAEvC,SAAQC,QAAQ,QAAO,WAAW;AAElC,OAAO,MAAMC,SAAS,GAAAC,EAAA,CAAGL,gBAAgB,CAAC,gBAAgB,EAAAK,EAAA,CAAE,YAAY;EAAAA,EAAA;EACrE,MAAM;IAACC;EAAW,CAAC,GAAGC,cAAc,EAAE;EACtCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,WAAW,CAAC;EACnD,MAAMI,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC7BR,QAAQ,GAAGG,WAAW,CAACM,OAAO,GAAG,iBAAiB,CACpD;EACDJ,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACG,IAAI,CAAC;EAC1B,OAAOH,QAAQ,CAACG,IAAI;AACvB,CAAC;EAAA,QAPwBN,cAAc;AAAA,GAOrC;EAAA,QAPuBA,cAAc;AAAA,EAOrC;AAEF,OAAO,MAAMA,cAAc,GAAGA,CAAA,KAAM;EAAAO,GAAA;EACjC,OAAOZ,WAAW,CAAEa,KAAgB,IAAK;IACtC,OAAOA,KAAK;EACf,CAAC,CAAC;AACL,CAAC;AAACD,GAAA,CAJWP,cAAc;EAAA,QACjBL,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}