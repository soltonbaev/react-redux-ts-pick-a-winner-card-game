{"ast":null,"code":"var _jsxFileName = \"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/Header/Header.tsx\",\n  _s = $RefreshSig$();\nimport { Container, Grid, IconButton, Tooltip, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { createNewDeck } from '../../helpers/CRUD/create';\nimport { useAppDispatch } from '../../redux-store/store';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport Logo from './Logo';\nimport HomeOutlinedIcon from '@mui/icons-material/HomeOutlined';\nimport MonetizationOnOutlinedIcon from '@mui/icons-material/MonetizationOnOutlined';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport { useGlobalState } from '../../helpers/CRUD/read';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const {\n    pathname\n  } = useLocation();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const {\n    currentDeck,\n    gameData\n  } = useGlobalState();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backdropFilter: 'blur(50px)',\n      position: 'fixed',\n      top: '0',\n      zIndex: '1000',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          padding: '0.5rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [gameData.loggedIn && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              // cursor: 'pointer',\n              marginRight: '1rem'\n            }\n            // onClick={() => {\n            //    dispatch(shuffleDeck());\n            // }}\n            ,\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(MonetizationOnOutlinedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"My balance:\", gameData.balance, \" $\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 22\n          }, this), pathname === '/' && gameData.loggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                cursor: 'pointer',\n                marginRight: '1rem'\n              },\n              onClick: () => {\n                dispatch(createNewDeck());\n                navigate(`decks/${currentDeck.deck_id}`);\n              },\n              children: [/*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Start new game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this)\n          }, void 0, false), pathname === '/' ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              cursor: 'pointer'\n            },\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"About the app\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"white\",\n                children: /*#__PURE__*/_jsxDEV(InfoOutlinedIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 22\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(HomeOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Back to the game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n_s(Header, \"rVsZ81CuHuZV8/3cv1Jv7HyaUw4=\", false, function () {\n  return [useLocation, useNavigate, useAppDispatch, useGlobalState];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Container","Grid","IconButton","Tooltip","Typography","Box","React","Link","useLocation","useNavigate","createNewDeck","useAppDispatch","AddCircleOutlineIcon","Logo","HomeOutlinedIcon","MonetizationOnOutlinedIcon","InfoOutlinedIcon","useGlobalState","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","pathname","navigate","dispatch","currentDeck","gameData","sx","backdropFilter","position","top","zIndex","width","children","maxWidth","container","display","alignItems","justifyContent","padding","fileName","_jsxFileName","lineNumber","columnNumber","item","loggedIn","marginRight","balance","cursor","onClick","deck_id","title","color","to","_c","$RefreshReg$"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/Header/Header.tsx"],"sourcesContent":["import {Container, Grid, IconButton, Tooltip, Typography} from '@mui/material';\nimport {Box} from '@mui/system';\nimport React from 'react';\nimport {Link, useLocation, useNavigate} from 'react-router-dom';\nimport {createNewDeck} from '../../helpers/CRUD/create';\nimport {useAppDispatch} from '../../redux-store/store';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport Logo from './Logo';\nimport HomeOutlinedIcon from '@mui/icons-material/HomeOutlined';\nimport MonetizationOnOutlinedIcon from '@mui/icons-material/MonetizationOnOutlined';\n\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport {shuffleDeck} from '../../helpers/CRUD/update';\nimport {useGlobalState} from '../../helpers/CRUD/read';\n\nconst Header = () => {\n   const {pathname} = useLocation();\n   const navigate = useNavigate();\n   const dispatch = useAppDispatch();\n   const {currentDeck, gameData} = useGlobalState();\n   return (\n      <Box\n         sx={{\n            backdropFilter: 'blur(50px)',\n            position: 'fixed',\n            top: '0',\n            zIndex: '1000',\n            width: '100%',\n         }}\n      >\n         <Container maxWidth=\"lg\">\n            <Grid\n               container\n               sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  padding: '0.5rem',\n               }}\n            >\n               <Logo />\n               <Grid item sx={{display: 'flex', alignItems: 'center'}}>\n                  {gameData.loggedIn && (\n                     <Grid\n                        item\n                        sx={{\n                           display: 'flex',\n                           alignItems: 'center',\n                           // cursor: 'pointer',\n                           marginRight: '1rem',\n                        }}\n                        // onClick={() => {\n                        //    dispatch(shuffleDeck());\n                        // }}\n                     >\n                        <>\n                           <MonetizationOnOutlinedIcon />\n                           <Typography>\n                              My balance:{gameData.balance} $\n                           </Typography>\n                        </>\n                     </Grid>\n                  )}\n                  {pathname === '/' && gameData.loggedIn && (\n                     <>\n                        <Grid\n                           item\n                           sx={{\n                              display: 'flex',\n                              alignItems: 'center',\n                              cursor: 'pointer',\n                              marginRight: '1rem',\n                           }}\n                           onClick={() => {\n                              dispatch(createNewDeck());\n                              navigate(`decks/${currentDeck.deck_id}`);\n                           }}\n                        >\n                           <AddCircleOutlineIcon />\n                           <Typography>Start new game</Typography>\n                        </Grid>\n                     </>\n                  )}\n                  {pathname === '/' ? (\n                     <Grid\n                        item\n                        sx={{\n                           display: 'flex',\n                           alignItems: 'center',\n                           cursor: 'pointer',\n                        }}\n                     >\n                        <Tooltip title=\"About the app\">\n                           <IconButton color=\"white\">\n                              <InfoOutlinedIcon></InfoOutlinedIcon>\n                           </IconButton>\n                        </Tooltip>\n                        {/* <Link to=\"/about\">About the app</Link> */}\n                     </Grid>\n                  ) : (\n                     <Grid\n                        item\n                        sx={{\n                           display: 'flex',\n                           alignItems: 'center',\n                           cursor: 'pointer',\n                        }}\n                     >\n                        <HomeOutlinedIcon></HomeOutlinedIcon>\n                        <Link to=\"/\">Back to the game</Link>\n                     </Grid>\n                  )}\n               </Grid>\n            </Grid>\n         </Container>\n      </Box>\n   );\n};\n\nexport default Header;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}