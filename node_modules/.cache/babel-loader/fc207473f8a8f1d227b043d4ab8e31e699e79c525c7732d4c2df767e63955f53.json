{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { drawCards } from '../helpers/CRUD/read';\nimport { initialState } from './RootReducer';\nexport const drawCardSlice = createSlice({\n  name: 'draw_cards',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    // draw cards cases\n    builder.addCase(drawCards.fulfilled, (state, action) => {\n      state.currentDraw = action.payload;\n      state.currentDeck.remaining = action.payload.remaining;\n      state.info = {\n        switchModalOn: false,\n        type: 'success',\n        message: 'Cards drawn'\n      };\n    });\n    builder.addCase(drawCards.pending, (state, action) => {\n      state.info = {\n        switchModalOn: true,\n        type: 'warning',\n        message: 'Drawing a pair of cards...'\n      };\n    });\n    builder.addCase(drawCards.rejected, (state, action) => {\n      state.info = {\n        switchModalOn: true,\n        type: 'error',\n        message: 'Cards could not be drawn. Check your connection'\n      };\n      console.log('drawCards.rejected payload', action.payload);\n    });\n  }\n});\nexport default drawCardSlice.reducer;","map":{"version":3,"names":["createSlice","drawCards","initialState","drawCardSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","currentDraw","payload","currentDeck","remaining","info","switchModalOn","type","message","pending","rejected","console","log","reducer"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/redux-store/drawCardsSlice.ts"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport {drawCards} from '../helpers/CRUD/read';\nimport {initialState} from './RootReducer';\n\nexport const drawCardSlice = createSlice({\n   name: 'draw_cards',\n   initialState,\n   reducers: {},\n   extraReducers(builder) {\n      // draw cards cases\n      builder.addCase(drawCards.fulfilled, (state, action) => {\n         state.currentDraw = action.payload;\n         state.currentDeck.remaining = action.payload.remaining;\n         state.info = {\n            switchModalOn: false,\n            type: 'success',\n            message: 'Cards drawn',\n         };\n      });\n      builder.addCase(drawCards.pending, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'warning',\n            message: 'Drawing a pair of cards...',\n         };\n      });\n      builder.addCase(drawCards.rejected, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'error',\n            message: 'Cards could not be drawn. Check your connection',\n         };\n         console.log('drawCards.rejected payload', action.payload);\n      });\n   },\n});\n\nexport default drawCardSlice.reducer;\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,SAAS,QAAO,sBAAsB;AAC9C,SAAQC,YAAY,QAAO,eAAe;AAE1C,OAAO,MAAMC,aAAa,GAAGH,WAAW,CAAC;EACtCI,IAAI,EAAE,YAAY;EAClBF,YAAY;EACZG,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAaA,CAACC,OAAO,EAAE;IACpB;IACAA,OAAO,CAACC,OAAO,CAACP,SAAS,CAACQ,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrDD,KAAK,CAACE,WAAW,GAAGD,MAAM,CAACE,OAAO;MAClCH,KAAK,CAACI,WAAW,CAACC,SAAS,GAAGJ,MAAM,CAACE,OAAO,CAACE,SAAS;MACtDL,KAAK,CAACM,IAAI,GAAG;QACVC,aAAa,EAAE,KAAK;QACpBC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE;MACZ,CAAC;IACJ,CAAC,CAAC;IACFZ,OAAO,CAACC,OAAO,CAACP,SAAS,CAACmB,OAAO,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACM,IAAI,GAAG;QACVC,aAAa,EAAE,IAAI;QACnBC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE;MACZ,CAAC;IACJ,CAAC,CAAC;IACFZ,OAAO,CAACC,OAAO,CAACP,SAAS,CAACoB,QAAQ,EAAE,CAACX,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACM,IAAI,GAAG;QACVC,aAAa,EAAE,IAAI;QACnBC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE;MACZ,CAAC;MACDG,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEZ,MAAM,CAACE,OAAO,CAAC;IAC5D,CAAC,CAAC;EACL;AACH,CAAC,CAAC;AAEF,eAAeV,aAAa,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}