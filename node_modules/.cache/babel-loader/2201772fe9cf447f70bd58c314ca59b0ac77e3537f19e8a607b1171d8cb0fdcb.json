{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assignNestedKeys = void 0;\nexports.default = cssVarsParser;\nexports.walkObjectDeep = void 0;\n/**\n * This function create an object from keys, value and then assign to target\n *\n * @param {Object} obj : the target object to be assigned\n * @param {string[]} keys\n * @param {string | number} value\n *\n * @example\n * const source = {}\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\n *\n * @example\n * const source = { palette: { primary: 'var(--palette-primary)' } }\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\n */\nconst assignNestedKeys = function (obj, keys, value) {\n  let arrayKeys = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  let temp = obj;\n  keys.forEach((k, index) => {\n    if (index === keys.length - 1) {\n      if (Array.isArray(temp)) {\n        temp[Number(k)] = value;\n      } else if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = arrayKeys.includes(k) ? [] : {};\n      }\n      temp = temp[k];\n    }\n  });\n};\n\n/**\n *\n * @param {Object} obj : source object\n * @param {Function} callback : a function that will be called when\n *                   - the deepest key in source object is reached\n *                   - the value of the deepest key is NOT `undefined` | `null`\n *\n * @example\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\n * // ['palette', 'primary', 'main'] '#000000'\n */\nexports.assignNestedKeys = assignNestedKeys;\nconst walkObjectDeep = (obj, callback, shouldSkipPaths) => {\n  function recurse(object) {\n    let parentKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let arrayKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    Object.entries(object).forEach(_ref => {\n      let [key, value] = _ref;\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {\n        if (value !== undefined && value !== null) {\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\n            recurse(value, [...parentKeys, key], Array.isArray(value) ? [...arrayKeys, key] : arrayKeys);\n          } else {\n            callback([...parentKeys, key], value, arrayKeys);\n          }\n        }\n      }\n    });\n  }\n  recurse(obj);\n};\nexports.walkObjectDeep = walkObjectDeep;\nconst getCssValue = (keys, value) => {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\n      // CSS property that are unitless\n      return value;\n    }\n    const lastKey = keys[keys.length - 1];\n    if (lastKey.toLowerCase().indexOf('opacity') >= 0) {\n      // opacity values are unitless\n      return value;\n    }\n    return `${value}px`;\n  }\n  return value;\n};\n\n/**\n * a function that parse theme and return { css, vars }\n *\n * @param {Object} theme\n * @param {{\n *  prefix?: string,\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\n * }} options.\n *  `prefix`: The prefix of the generated CSS variables. This function does not change the value.\n *\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme).\n *\n * @example\n * const { css, vars } = parser({\n *   fontSize: 12,\n *   lineHeight: 1.2,\n *   palette: { primary: { 500: 'var(--color)' } }\n * }, { prefix: 'foo' })\n *\n * console.log(css) // { '--foo-fontSize': '12px', '--foo-lineHeight': 1.2, '--foo-palette-primary-500': 'var(--color)' }\n * console.log(vars) // { fontSize: 'var(--foo-fontSize)', lineHeight: 'var(--foo-lineHeight)', palette: { primary: { 500: 'var(--foo-palette-primary-500)' } } }\n */\nfunction cssVarsParser(theme, options) {\n  const {\n    prefix,\n    shouldSkipGeneratingVar\n  } = options || {};\n  const css = {};\n  const vars = {};\n  const varsWithDefaults = {};\n  walkObjectDeep(theme, (keys, value, arrayKeys) => {\n    if (typeof value === 'string' || typeof value === 'number') {\n      if (!shouldSkipGeneratingVar || !shouldSkipGeneratingVar(keys, value)) {\n        // only create css & var if `shouldSkipGeneratingVar` return false\n        const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\n        Object.assign(css, {\n          [cssVar]: getCssValue(keys, value)\n        });\n        assignNestedKeys(vars, keys, `var(${cssVar})`, arrayKeys);\n        assignNestedKeys(varsWithDefaults, keys, `var(${cssVar}, ${value})`, arrayKeys);\n      }\n    }\n  }, keys => keys[0] === 'vars' // skip 'vars/*' paths\n  );\n\n  return {\n    css,\n    vars,\n    varsWithDefaults\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","assignNestedKeys","default","cssVarsParser","walkObjectDeep","obj","keys","arrayKeys","arguments","length","undefined","temp","forEach","k","index","Array","isArray","Number","includes","callback","shouldSkipPaths","recurse","object","parentKeys","entries","_ref","key","getCssValue","some","prop","lastKey","toLowerCase","indexOf","theme","options","prefix","shouldSkipGeneratingVar","css","vars","varsWithDefaults","cssVar","join","assign"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/node_modules/@mui/system/cssVars/cssVarsParser.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assignNestedKeys = void 0;\nexports.default = cssVarsParser;\nexports.walkObjectDeep = void 0;\n/**\n * This function create an object from keys, value and then assign to target\n *\n * @param {Object} obj : the target object to be assigned\n * @param {string[]} keys\n * @param {string | number} value\n *\n * @example\n * const source = {}\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\n *\n * @example\n * const source = { palette: { primary: 'var(--palette-primary)' } }\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\n */\nconst assignNestedKeys = (obj, keys, value, arrayKeys = []) => {\n  let temp = obj;\n  keys.forEach((k, index) => {\n    if (index === keys.length - 1) {\n      if (Array.isArray(temp)) {\n        temp[Number(k)] = value;\n      } else if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = arrayKeys.includes(k) ? [] : {};\n      }\n      temp = temp[k];\n    }\n  });\n};\n\n/**\n *\n * @param {Object} obj : source object\n * @param {Function} callback : a function that will be called when\n *                   - the deepest key in source object is reached\n *                   - the value of the deepest key is NOT `undefined` | `null`\n *\n * @example\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\n * // ['palette', 'primary', 'main'] '#000000'\n */\nexports.assignNestedKeys = assignNestedKeys;\nconst walkObjectDeep = (obj, callback, shouldSkipPaths) => {\n  function recurse(object, parentKeys = [], arrayKeys = []) {\n    Object.entries(object).forEach(([key, value]) => {\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {\n        if (value !== undefined && value !== null) {\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\n            recurse(value, [...parentKeys, key], Array.isArray(value) ? [...arrayKeys, key] : arrayKeys);\n          } else {\n            callback([...parentKeys, key], value, arrayKeys);\n          }\n        }\n      }\n    });\n  }\n  recurse(obj);\n};\nexports.walkObjectDeep = walkObjectDeep;\nconst getCssValue = (keys, value) => {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\n      // CSS property that are unitless\n      return value;\n    }\n    const lastKey = keys[keys.length - 1];\n    if (lastKey.toLowerCase().indexOf('opacity') >= 0) {\n      // opacity values are unitless\n      return value;\n    }\n    return `${value}px`;\n  }\n  return value;\n};\n\n/**\n * a function that parse theme and return { css, vars }\n *\n * @param {Object} theme\n * @param {{\n *  prefix?: string,\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\n * }} options.\n *  `prefix`: The prefix of the generated CSS variables. This function does not change the value.\n *\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme).\n *\n * @example\n * const { css, vars } = parser({\n *   fontSize: 12,\n *   lineHeight: 1.2,\n *   palette: { primary: { 500: 'var(--color)' } }\n * }, { prefix: 'foo' })\n *\n * console.log(css) // { '--foo-fontSize': '12px', '--foo-lineHeight': 1.2, '--foo-palette-primary-500': 'var(--color)' }\n * console.log(vars) // { fontSize: 'var(--foo-fontSize)', lineHeight: 'var(--foo-lineHeight)', palette: { primary: { 500: 'var(--foo-palette-primary-500)' } } }\n */\nfunction cssVarsParser(theme, options) {\n  const {\n    prefix,\n    shouldSkipGeneratingVar\n  } = options || {};\n  const css = {};\n  const vars = {};\n  const varsWithDefaults = {};\n  walkObjectDeep(theme, (keys, value, arrayKeys) => {\n    if (typeof value === 'string' || typeof value === 'number') {\n      if (!shouldSkipGeneratingVar || !shouldSkipGeneratingVar(keys, value)) {\n        // only create css & var if `shouldSkipGeneratingVar` return false\n        const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\n        Object.assign(css, {\n          [cssVar]: getCssValue(keys, value)\n        });\n        assignNestedKeys(vars, keys, `var(${cssVar})`, arrayKeys);\n        assignNestedKeys(varsWithDefaults, keys, `var(${cssVar}, ${value})`, arrayKeys);\n      }\n    }\n  }, keys => keys[0] === 'vars' // skip 'vars/*' paths\n  );\n\n  return {\n    css,\n    vars,\n    varsWithDefaults\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}