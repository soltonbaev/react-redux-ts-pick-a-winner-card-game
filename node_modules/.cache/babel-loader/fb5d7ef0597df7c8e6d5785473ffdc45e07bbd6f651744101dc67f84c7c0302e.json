{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { BASE_URL } from '../consts';\nimport { useGlobalState } from './read';\nexport const shuffleDeck = _s(createAsyncThunk('deck/shuffleDeck', _s(async () => {\n  _s();\n  const {\n    currentDeck\n  } = useGlobalState();\n  const response = await axios(BASE_URL + currentDeck.deck_id + '/shuffle/?remaining=true');\n  console.log(response.data);\n  return response.data;\n}, \"Ee/rQDUdm8vsDcvXx2SN6sQVaws=\", false, function () {\n  return [useGlobalState];\n})), \"Ee/rQDUdm8vsDcvXx2SN6sQVaws=\", false, function () {\n  return [useGlobalState];\n});","map":{"version":3,"names":["createAsyncThunk","axios","BASE_URL","useGlobalState","shuffleDeck","_s","currentDeck","response","deck_id","console","log","data"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/CRUD/update.ts"],"sourcesContent":["import {createAsyncThunk} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {BASE_URL} from '../consts';\nimport {useGlobalState} from './read';\n\nexport const shuffleDeck = createAsyncThunk('deck/shuffleDeck', async () => {\n   const {currentDeck} = useGlobalState();\n   const response = await axios(\n      BASE_URL + currentDeck.deck_id + '/shuffle/?remaining=true'\n   );\n   console.log(response.data);\n   return response.data;\n});\n"],"mappings":";AAAA,SAAQA,gBAAgB,QAAO,kBAAkB;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,WAAW;AAClC,SAAQC,cAAc,QAAO,QAAQ;AAErC,OAAO,MAAMC,WAAW,GAAAC,EAAA,CAAGL,gBAAgB,CAAC,kBAAkB,EAAAK,EAAA,CAAE,YAAY;EAAAA,EAAA;EACzE,MAAM;IAACC;EAAW,CAAC,GAAGH,cAAc,EAAE;EACtC,MAAMI,QAAQ,GAAG,MAAMN,KAAK,CACzBC,QAAQ,GAAGI,WAAW,CAACE,OAAO,GAAG,0BAA0B,CAC7D;EACDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAC1B,OAAOJ,QAAQ,CAACI,IAAI;AACvB,CAAC;EAAA,QANwBR,cAAc;AAAA,GAMrC;EAAA,QANuBA,cAAc;AAAA,EAMrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}