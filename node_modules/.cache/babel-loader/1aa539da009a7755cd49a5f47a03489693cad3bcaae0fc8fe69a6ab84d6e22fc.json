{"ast":null,"code":"var _jsxFileName = \"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/ToDoTask/RenderTasks.tsx\",\n  _s = $RefreshSig$();\nimport { Grid } from '@mui/material';\nimport React from 'react';\nimport { useGlobalState } from '../../../../helpers/CRUD/read';\nimport ToDoTask from './ToDoTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RenderTasks = _ref => {\n  _s();\n  let {\n    todoId\n  } = _ref;\n  const {\n    tasks\n  } = useGlobalState();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: tasks.filter(task => {\n        if (todoId === task.todoId) {\n          return /*#__PURE__*/_jsxDEV(ToDoTask, {\n            task: task.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 26\n          }, this);\n        }\n      })\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n_s(RenderTasks, \"TnZYwJZr9f2/hjiF6TDqMG/lSPA=\", false, function () {\n  return [useGlobalState];\n});\n_c = RenderTasks;\nexport default RenderTasks;\nvar _c;\n$RefreshReg$(_c, \"RenderTasks\");","map":{"version":3,"names":["Grid","React","useGlobalState","ToDoTask","jsxDEV","_jsxDEV","Fragment","_Fragment","RenderTasks","_ref","_s","todoId","tasks","item","children","filter","task","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/ToDoTask/RenderTasks.tsx"],"sourcesContent":["import {Grid} from '@mui/material';\nimport React from 'react';\nimport {useGlobalState} from '../../../../helpers/CRUD/read';\nimport AddToDoTask from './AddToDoTask';\nimport ToDoTask from './ToDoTask';\n\nconst RenderTasks = ({todoId}: any) => {\n   const {tasks} = useGlobalState();\n   return (\n      <Grid item>\n         <>\n            {/* {console.log(tasks)} */}\n            {tasks.filter(task => {\n               if (todoId === task.todoId) {\n                  return <ToDoTask task={task.task} />;\n               }\n            })}\n         </>\n      </Grid>\n   );\n};\n\nexport default RenderTasks;\n"],"mappings":";;AAAA,SAAQA,IAAI,QAAO,eAAe;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,cAAc,QAAO,+BAA+B;AAE5D,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,WAAW,GAAGC,IAAA,IAAmB;EAAAC,EAAA;EAAA,IAAlB;IAACC;EAAW,CAAC,GAAAF,IAAA;EAC/B,MAAM;IAACG;EAAK,CAAC,GAAGV,cAAc,EAAE;EAChC,oBACGG,OAAA,CAACL,IAAI;IAACa,IAAI;IAAAC,QAAA,eACPT,OAAA,CAAAE,SAAA;MAAAO,QAAA,EAEIF,KAAK,CAACG,MAAM,CAACC,IAAI,IAAI;QACnB,IAAIL,MAAM,KAAKK,IAAI,CAACL,MAAM,EAAE;UACzB,oBAAON,OAAA,CAACF,QAAQ;YAACa,IAAI,EAAEA,IAAI,CAACA;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG;QACvC;MACH,CAAC;IAAC;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEb,CAAC;AAACV,EAAA,CAdIF,WAAW;EAAA,QACEN,cAAc;AAAA;AAAAmB,EAAA,GAD3Bb,WAAW;AAgBjB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}