{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{addTask,addToDo}from'../helpers/CRUD/create';import{getTasks,getTodos}from'../helpers/CRUD/read';import{deleteTask,deleteTodo}from'../helpers/CRUD/delete';import{toggleCompleted,updateTitle}from'../helpers/CRUD/update';var initialState={todos:[],tasks:[],info:{}//    notes: [],\n//    type: '',\n//    title: '',\n};export var RootReducer=createSlice({name:'todo_app',initialState:initialState,reducers:{},extraReducers:function extraReducers(builder){builder.addCase(addToDo.rejected,function(state,action){state.info={switchModalOn:true,type:'error',message:'Unable to add the list. Server or internet down'};});builder.addCase(addToDo.pending,function(state,action){state.info={switchModalOn:true,type:'warning',message:'Adding a list...'};});builder.addCase(addToDo.fulfilled,function(state,action){state.todos.push(action.payload);state.info={switchModalOn:false,type:'success',message:'List added'};});builder.addCase(getTodos.fulfilled,function(state,action){state.todos=action.payload;state.info={switchModalOn:false,type:'success',message:'Lists loaded successfully...'};});builder.addCase(getTodos.pending,function(state,action){state.info={switchModalOn:true,type:'warning',message:'Please wait while lists are loading...'};});builder.addCase(deleteTodo.fulfilled,function(state,action){state.todos=state.todos.filter(function(todo){return todo.id!==action.payload;});console.log(action.payload);});builder.addCase(updateTitle.fulfilled,function(state,action){state.todos.map(function(todo){console.log(todo);if(todo.id===action.payload.id){todo.title=action.payload.title;console.log('todo found!');}});});builder.addCase(addTask.fulfilled,function(state,action){state.tasks.push(action.payload);});builder.addCase(getTasks.fulfilled,function(state,action){state.tasks=action.payload;});builder.addCase(deleteTask.fulfilled,function(state,action){state.tasks=state.tasks.filter(function(task){return task.id!==action.payload;});console.log(action.payload);});builder.addCase(toggleCompleted.fulfilled,function(state,action){state.tasks.map(function(task){console.log(task);if(task.id===action.payload.id){task.completed=action.payload.completed;}});});}});export var getInfoObj=function getInfoObj(state){return state.info;};// export const {addToDo} = RootReducer.actions;\nexport default RootReducer.reducer;","map":{"version":3,"names":["createSlice","addTask","addToDo","getTasks","getTodos","deleteTask","deleteTodo","toggleCompleted","updateTitle","initialState","todos","tasks","info","RootReducer","name","reducers","extraReducers","builder","addCase","rejected","state","action","switchModalOn","type","message","pending","fulfilled","push","payload","filter","todo","id","console","log","map","title","task","completed","getInfoObj","reducer"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/redux-store/RootReducer.ts"],"sourcesContent":["import React from 'react';\nimport {createAsyncThunk, createSlice, current} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {TODOS} from '../helpers/consts';\nimport {GlobalState, Todo} from '../helpers/types';\nimport {addTask, addToDo, generateRandomColor} from '../helpers/CRUD/create';\nimport {getTasks, getTodos} from '../helpers/CRUD/read';\nimport {deleteTask, deleteTodo} from '../helpers/CRUD/delete';\nimport {toggleCompleted, updateTitle} from '../helpers/CRUD/update';\n\nconst initialState: GlobalState = {\n   todos: [],\n   tasks: [],\n   info: {},\n   //    notes: [],\n   //    type: '',\n   //    title: '',\n};\n\nexport const RootReducer = createSlice({\n   name: 'todo_app',\n   initialState,\n   reducers: {},\n   extraReducers(builder) {\n      builder.addCase(addToDo.rejected, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'error',\n            message: 'Unable to add the list. Server or internet down',\n         };\n      });\n      builder.addCase(addToDo.pending, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'warning',\n            message: 'Adding a list...',\n         };\n      });\n      builder.addCase(addToDo.fulfilled, (state, action) => {\n         state.todos.push(action.payload);\n         state.info = {\n            switchModalOn: false,\n            type: 'success',\n            message: 'List added',\n         };\n      });\n      builder.addCase(getTodos.fulfilled, (state, action) => {\n         state.todos = action.payload;\n         state.info = {\n            switchModalOn: false,\n            type: 'success',\n            message: 'Lists loaded successfully...',\n         };\n      });\n      builder.addCase(getTodos.pending, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'warning',\n            message: 'Please wait while lists are loading...',\n         };\n      });\n      builder.addCase(deleteTodo.fulfilled, (state, action) => {\n         state.todos = state.todos.filter(todo => {\n            return todo.id !== action.payload;\n         });\n         console.log(action.payload);\n      });\n      builder.addCase(updateTitle.fulfilled, (state, action) => {\n         state.todos.map(todo => {\n            console.log(todo);\n            if (todo.id === action.payload.id) {\n               todo.title = action.payload.title;\n               console.log('todo found!');\n            }\n         });\n      });\n\n      builder.addCase(addTask.fulfilled, (state, action) => {\n         state.tasks.push(action.payload);\n      });\n      builder.addCase(getTasks.fulfilled, (state, action) => {\n         state.tasks = action.payload;\n      });\n      builder.addCase(deleteTask.fulfilled, (state, action) => {\n         state.tasks = state.tasks.filter(task => {\n            return task.id !== action.payload;\n         });\n         console.log(action.payload);\n      });\n      builder.addCase(toggleCompleted.fulfilled, (state, action) => {\n         state.tasks.map(task => {\n            console.log(task);\n            if (task.id === action.payload.id) {\n               task.completed = action.payload.completed;\n            }\n         });\n      });\n   },\n});\n\nexport const getInfoObj = (state: any) => state.info;\n\n// export const {addToDo} = RootReducer.actions;\nexport default RootReducer.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}