{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createNewDeck } from '../helpers/CRUD/create';\nimport { drawCards } from '../helpers/CRUD/read';\nconst initialState = {\n  currentDeck: {},\n  currentDraw: {},\n  info: {}\n};\nexport const RootReducer = createSlice({\n  name: 'todo_app',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    // new deck cases\n    builder.addCase(createNewDeck.rejected, (state, action) => {\n      state.info = {\n        switchModalOn: true,\n        type: 'error',\n        message: 'Unable to create deck. Server or internet down'\n      };\n    });\n    builder.addCase(createNewDeck.pending, (state, action) => {\n      state.info = {\n        switchModalOn: true,\n        type: 'warning',\n        message: 'Generating deck. Please wait...'\n      };\n    });\n    builder.addCase(createNewDeck.fulfilled, (state, action) => {\n      state.currentDeck = action.payload;\n      state.info = {\n        switchModalOn: false,\n        type: 'success',\n        message: 'Deck generated'\n      };\n    });\n    // draw cards cases\n    builder.addCase(drawCards.fulfilled, (state, action) => {\n      state.currentDraw = action.payload;\n      state.info = {\n        switchModalOn: false,\n        type: 'success',\n        message: 'Cards drawn'\n      };\n    });\n    builder.addCase(drawCards.pending, (state, action) => {\n      state.info = {\n        switchModalOn: true,\n        type: 'warning',\n        message: 'Drawing a pair of cards...'\n      };\n    });\n    builder.addCase(drawCards.rejected, (state, action) => {\n      state.info = {\n        switchModalOn: true,\n        type: 'error',\n        message: 'Cards could not be drawn. Check your connection'\n      };\n      console.log('drawCards.rejected payload', action.payload);\n    });\n  }\n});\nexport const getInfoObj = state => state.info;\n\n// export const {addToDo} = RootReducer.actions;\nexport default RootReducer.reducer;","map":{"version":3,"names":["createSlice","createNewDeck","drawCards","initialState","currentDeck","currentDraw","info","RootReducer","name","reducers","extraReducers","builder","addCase","rejected","state","action","switchModalOn","type","message","pending","fulfilled","payload","console","log","getInfoObj","reducer"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/redux-store/RootReducer.ts"],"sourcesContent":["import React from 'react';\nimport {createAsyncThunk, createSlice, current} from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nimport {GlobalState, Todo} from '../helpers/types';\nimport {createNewDeck} from '../helpers/CRUD/create';\nimport {drawCards} from '../helpers/CRUD/read';\n\nconst initialState: GlobalState = {\n   currentDeck: {},\n   currentDraw: {},\n   info: {},\n};\n\nexport const RootReducer = createSlice({\n   name: 'todo_app',\n   initialState,\n   reducers: {},\n   extraReducers(builder) {\n      // new deck cases\n      builder.addCase(createNewDeck.rejected, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'error',\n            message: 'Unable to create deck. Server or internet down',\n         };\n      });\n      builder.addCase(createNewDeck.pending, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'warning',\n            message: 'Generating deck. Please wait...',\n         };\n      });\n      builder.addCase(createNewDeck.fulfilled, (state, action) => {\n         state.currentDeck = action.payload;\n         state.info = {\n            switchModalOn: false,\n            type: 'success',\n            message: 'Deck generated',\n         };\n      });\n      // draw cards cases\n      builder.addCase(drawCards.fulfilled, (state, action) => {\n         state.currentDraw = action.payload;\n         state.info = {\n            switchModalOn: false,\n            type: 'success',\n            message: 'Cards drawn',\n         };\n      });\n      builder.addCase(drawCards.pending, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'warning',\n            message: 'Drawing a pair of cards...',\n         };\n      });\n      builder.addCase(drawCards.rejected, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'error',\n            message: 'Cards could not be drawn. Check your connection',\n         };\n         console.log('drawCards.rejected payload', action.payload);\n      });\n   },\n});\n\nexport const getInfoObj = (state: any) => state.info;\n\n// export const {addToDo} = RootReducer.actions;\nexport default RootReducer.reducer;\n"],"mappings":"AACA,SAA0BA,WAAW,QAAgB,kBAAkB;AAIvE,SAAQC,aAAa,QAAO,wBAAwB;AACpD,SAAQC,SAAS,QAAO,sBAAsB;AAE9C,MAAMC,YAAyB,GAAG;EAC/BC,WAAW,EAAE,CAAC,CAAC;EACfC,WAAW,EAAE,CAAC,CAAC;EACfC,IAAI,EAAE,CAAC;AACV,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGP,WAAW,CAAC;EACpCQ,IAAI,EAAE,UAAU;EAChBL,YAAY;EACZM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAaA,CAACC,OAAO,EAAE;IACpB;IACAA,OAAO,CAACC,OAAO,CAACX,aAAa,CAACY,QAAQ,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAACR,IAAI,GAAG;QACVU,aAAa,EAAE,IAAI;QACnBC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE;MACZ,CAAC;IACJ,CAAC,CAAC;IACFP,OAAO,CAACC,OAAO,CAACX,aAAa,CAACkB,OAAO,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACR,IAAI,GAAG;QACVU,aAAa,EAAE,IAAI;QACnBC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE;MACZ,CAAC;IACJ,CAAC,CAAC;IACFP,OAAO,CAACC,OAAO,CAACX,aAAa,CAACmB,SAAS,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MACzDD,KAAK,CAACV,WAAW,GAAGW,MAAM,CAACM,OAAO;MAClCP,KAAK,CAACR,IAAI,GAAG;QACVU,aAAa,EAAE,KAAK;QACpBC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE;MACZ,CAAC;IACJ,CAAC,CAAC;IACF;IACAP,OAAO,CAACC,OAAO,CAACV,SAAS,CAACkB,SAAS,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MACrDD,KAAK,CAACT,WAAW,GAAGU,MAAM,CAACM,OAAO;MAClCP,KAAK,CAACR,IAAI,GAAG;QACVU,aAAa,EAAE,KAAK;QACpBC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE;MACZ,CAAC;IACJ,CAAC,CAAC;IACFP,OAAO,CAACC,OAAO,CAACV,SAAS,CAACiB,OAAO,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACR,IAAI,GAAG;QACVU,aAAa,EAAE,IAAI;QACnBC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE;MACZ,CAAC;IACJ,CAAC,CAAC;IACFP,OAAO,CAACC,OAAO,CAACV,SAAS,CAACW,QAAQ,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACR,IAAI,GAAG;QACVU,aAAa,EAAE,IAAI;QACnBC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE;MACZ,CAAC;MACDI,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAER,MAAM,CAACM,OAAO,CAAC;IAC5D,CAAC,CAAC;EACL;AACH,CAAC,CAAC;AAEF,OAAO,MAAMG,UAAU,GAAIV,KAAU,IAAKA,KAAK,CAACR,IAAI;;AAEpD;AACA,eAAeC,WAAW,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}