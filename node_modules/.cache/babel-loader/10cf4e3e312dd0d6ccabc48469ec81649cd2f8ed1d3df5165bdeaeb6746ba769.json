{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { addTask, addToDo } from '../helpers/CRUD/create';\nimport { getTasks, getTodos } from '../helpers/CRUD/read';\nimport { deleteTask, deleteTodo } from '../helpers/CRUD/delete';\nimport { updateTitle } from '../helpers/CRUD/update';\nconst initialState = {\n  todos: [],\n  tasks: []\n  //    notes: [],\n  //    type: '',\n  //    title: '',\n};\n\nexport const RootReducer = createSlice({\n  name: 'todo_app',\n  initialState,\n  reducers: {\n    //   addToDo: (state, action) => {\n    //      state.todos.push(action.payload);\n    //      //  console.log('Current state', current(state));\n    //   },\n    //   addTask: (state, action) => {\n    //      state.tasks.push(action.payload);\n    //   },\n    //   addNotes: (state, action) => {\n    //      state.notes.push(action.payload);\n    //   },\n  },\n  extraReducers(builder) {\n    builder.addCase(addToDo.fulfilled, (state, action) => {\n      state.todos.push(action.payload);\n    });\n    builder.addCase(getTodos.fulfilled, (state, action) => {\n      state.todos = action.payload;\n    });\n    builder.addCase(deleteTodo.fulfilled, (state, action) => {\n      state.todos = state.todos.filter(todo => {\n        return todo.id !== action.payload;\n      });\n      console.log(action.payload);\n    });\n    builder.addCase(updateTitle.fulfilled, (state, action) => {\n      state.todos.map(todo => {\n        console.log(todo);\n        if (todo.id === action.payload.id) {\n          todo.title = action.payload.title;\n          //    return todo;\n          console.log('todo found!');\n        }\n      });\n      console.log('Update title', action.payload);\n    });\n    builder.addCase(addTask.fulfilled, (state, action) => {\n      state.tasks.push(action.payload);\n    });\n    builder.addCase(getTasks.fulfilled, (state, action) => {\n      state.tasks = action.payload;\n    });\n    builder.addCase(deleteTask.fulfilled, (state, action) => {\n      state.tasks = state.tasks.filter(task => {\n        return task.id !== action.payload;\n      });\n      console.log(action.payload);\n    });\n  }\n});\n\n// export const {addToDo} = RootReducer.actions;\nexport default RootReducer.reducer;","map":{"version":3,"names":["createSlice","addTask","addToDo","getTasks","getTodos","deleteTask","deleteTodo","updateTitle","initialState","todos","tasks","RootReducer","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","push","payload","filter","todo","id","console","log","map","title","task","reducer"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/redux-store/RootReducer.ts"],"sourcesContent":["import React from 'react';\nimport {createAsyncThunk, createSlice, current} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {TODOS} from '../helpers/consts';\nimport {GlobalState, Todo} from '../helpers/types';\nimport {addTask, addToDo, generateRandomColor} from '../helpers/CRUD/create';\nimport {getTasks, getTodos} from '../helpers/CRUD/read';\nimport {deleteTask, deleteTodo} from '../helpers/CRUD/delete';\nimport {updateTitle} from '../helpers/CRUD/update';\n\nconst initialState: GlobalState = {\n   todos: [],\n   tasks: [],\n   //    notes: [],\n   //    type: '',\n   //    title: '',\n};\n\nexport const RootReducer = createSlice({\n   name: 'todo_app',\n   initialState,\n   reducers: {\n      //   addToDo: (state, action) => {\n      //      state.todos.push(action.payload);\n      //      //  console.log('Current state', current(state));\n      //   },\n      //   addTask: (state, action) => {\n      //      state.tasks.push(action.payload);\n      //   },\n      //   addNotes: (state, action) => {\n      //      state.notes.push(action.payload);\n      //   },\n   },\n   extraReducers(builder) {\n      builder.addCase(addToDo.fulfilled, (state, action) => {\n         state.todos.push(action.payload);\n      });\n      builder.addCase(getTodos.fulfilled, (state, action) => {\n         state.todos = action.payload;\n      });\n      builder.addCase(deleteTodo.fulfilled, (state, action) => {\n         state.todos = state.todos.filter(todo => {\n            return todo.id !== action.payload;\n         });\n         console.log(action.payload);\n      });\n      builder.addCase(updateTitle.fulfilled, (state, action) => {\n         state.todos.map(todo => {\n            console.log(todo);\n            if (todo.id === action.payload.id) {\n               todo.title = action.payload.title;\n               //    return todo;\n               console.log('todo found!');\n            }\n         });\n         console.log('Update title', action.payload);\n      });\n\n      builder.addCase(addTask.fulfilled, (state, action) => {\n         state.tasks.push(action.payload);\n      });\n      builder.addCase(getTasks.fulfilled, (state, action) => {\n         state.tasks = action.payload;\n      });\n      builder.addCase(deleteTask.fulfilled, (state, action) => {\n         state.tasks = state.tasks.filter(task => {\n            return task.id !== action.payload;\n         });\n         console.log(action.payload);\n      });\n   },\n});\n\n// export const {addToDo} = RootReducer.actions;\nexport default RootReducer.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}