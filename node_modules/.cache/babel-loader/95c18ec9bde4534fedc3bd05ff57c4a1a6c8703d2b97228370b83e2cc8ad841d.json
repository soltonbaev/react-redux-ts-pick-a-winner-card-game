{"ast":null,"code":"import _slicedToArray from \"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { ActionTypes } from './useListbox.types';\nimport defaultReducer from './defaultListboxReducer';\nimport useControllableReducer from './useControllableReducer';\nimport areArraysEqual from '../utils/areArraysEqual';\nimport useLatest from '../utils/useLatest';\nimport useTextNavigation from '../utils/useTextNavigation';\nvar defaultOptionComparer = function defaultOptionComparer(optionA, optionB) {\n  return optionA === optionB;\n};\nvar defaultIsOptionDisabled = function defaultIsOptionDisabled() {\n  return false;\n};\nvar defaultOptionStringifier = function defaultOptionStringifier(option) {\n  return typeof option === 'string' ? option : String(option);\n};\n\n/**\n * @ignore - do not document.\n */\nexport default function useListbox(props) {\n  var _props$optionIdGenera;\n  var _props$disabledItemsF = props.disabledItemsFocusable,\n    disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n    _props$disableListWra = props.disableListWrap,\n    disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n    _props$focusManagemen = props.focusManagement,\n    focusManagement = _props$focusManagemen === void 0 ? 'activeDescendant' : _props$focusManagemen,\n    idProp = props.id,\n    _props$isOptionDisabl = props.isOptionDisabled,\n    isOptionDisabled = _props$isOptionDisabl === void 0 ? defaultIsOptionDisabled : _props$isOptionDisabl,\n    externalListboxRef = props.listboxRef,\n    _props$multiple = props.multiple,\n    multiple = _props$multiple === void 0 ? false : _props$multiple,\n    _props$optionComparer = props.optionComparer,\n    optionComparer = _props$optionComparer === void 0 ? defaultOptionComparer : _props$optionComparer,\n    _props$optionStringif = props.optionStringifier,\n    optionStringifier = _props$optionStringif === void 0 ? defaultOptionStringifier : _props$optionStringif,\n    options = props.options,\n    externalReducer = props.stateReducer,\n    valueParam = props.value;\n  var id = useId(idProp);\n  var defaultIdGenerator = React.useCallback(function (_, index) {\n    return \"\".concat(id, \"-option-\").concat(index);\n  }, [id]);\n  var optionIdGenerator = (_props$optionIdGenera = props.optionIdGenerator) != null ? _props$optionIdGenera : defaultIdGenerator;\n  var propsWithDefaults = useLatest(_extends({}, props, {\n    disabledItemsFocusable: disabledItemsFocusable,\n    disableListWrap: disableListWrap,\n    focusManagement: focusManagement,\n    isOptionDisabled: isOptionDisabled,\n    multiple: multiple,\n    optionComparer: optionComparer,\n    optionStringifier: optionStringifier\n  }), [props]);\n  var listboxRef = React.useRef(null);\n  var handleRef = useForkRef(externalListboxRef, listboxRef);\n  var _useControllableReduc = useControllableReducer(defaultReducer, externalReducer, propsWithDefaults),\n    _useControllableReduc2 = _slicedToArray(_useControllableReduc, 2),\n    _useControllableReduc3 = _useControllableReduc2[0],\n    highlightedValue = _useControllableReduc3.highlightedValue,\n    selectedValue = _useControllableReduc3.selectedValue,\n    dispatch = _useControllableReduc2[1];\n  var handleTextNavigation = useTextNavigation(function (searchString, event) {\n    return dispatch({\n      type: ActionTypes.textNavigation,\n      event: event,\n      searchString: searchString\n    });\n  });\n  React.useEffect(function () {\n    // if a controlled value changes, we need to update the state to keep things in sync\n    if (valueParam !== undefined && valueParam !== selectedValue) {\n      dispatch({\n        type: ActionTypes.setValue,\n        event: null,\n        value: valueParam\n      });\n    }\n  }, [valueParam, selectedValue, dispatch]);\n  var highlightedIndex = React.useMemo(function () {\n    return highlightedValue == null ? -1 : options.findIndex(function (option) {\n      return optionComparer(option, highlightedValue);\n    });\n  }, [highlightedValue, options, optionComparer]);\n\n  // introducing refs to avoid recreating the getOptionState function on each change.\n  var latestSelectedValue = useLatest(selectedValue);\n  var latestHighlightedIndex = useLatest(highlightedIndex);\n  var previousOptions = React.useRef([]);\n  React.useEffect(function () {\n    if (areArraysEqual(previousOptions.current, options, optionComparer)) {\n      return;\n    }\n    dispatch({\n      type: ActionTypes.optionsChange,\n      event: null,\n      options: options,\n      previousOptions: previousOptions.current\n    });\n    previousOptions.current = options;\n  }, [options, optionComparer, dispatch]);\n  var setSelectedValue = React.useCallback(function (option) {\n    dispatch({\n      type: ActionTypes.setValue,\n      event: null,\n      value: option\n    });\n  }, [dispatch]);\n  var setHighlightedValue = React.useCallback(function (option) {\n    dispatch({\n      type: ActionTypes.setHighlight,\n      event: null,\n      highlight: option\n    });\n  }, [dispatch]);\n  var createHandleOptionClick = React.useCallback(function (option, other) {\n    return function (event) {\n      var _other$onClick;\n      (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\n      if (event.defaultPrevented) {\n        return;\n      }\n      event.preventDefault();\n      dispatch({\n        type: ActionTypes.optionClick,\n        option: option,\n        event: event\n      });\n    };\n  }, [dispatch]);\n  var createHandleOptionPointerOver = React.useCallback(function (option, other) {\n    return function (event) {\n      var _other$onMouseOver;\n      (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);\n      if (event.defaultPrevented) {\n        return;\n      }\n      dispatch({\n        type: ActionTypes.optionHover,\n        option: option,\n        event: event\n      });\n    };\n  }, [dispatch]);\n  var createHandleKeyDown = function createHandleKeyDown(other) {\n    return function (event) {\n      var _other$onKeyDown;\n      (_other$onKeyDown = other.onKeyDown) == null ? void 0 : _other$onKeyDown.call(other, event);\n      if (event.defaultPrevented) {\n        return;\n      }\n      var keysToPreventDefault = ['ArrowUp', 'ArrowDown', 'Home', 'End', 'PageUp', 'PageDown'];\n      if (focusManagement === 'activeDescendant') {\n        // When the child element is focused using the activeDescendant attribute,\n        // the listbox handles keyboard events on its behalf.\n        // We have to `preventDefault()` is this case to prevent the browser from\n        // scrolling the view when space is pressed or submitting forms when enter is pressed.\n        keysToPreventDefault.push(' ', 'Enter');\n      }\n      if (keysToPreventDefault.includes(event.key)) {\n        event.preventDefault();\n      }\n      dispatch({\n        type: ActionTypes.keyDown,\n        event: event\n      });\n      handleTextNavigation(event);\n    };\n  };\n  var createHandleBlur = function createHandleBlur(other) {\n    return function (event) {\n      var _other$onBlur, _listboxRef$current;\n      (_other$onBlur = other.onBlur) == null ? void 0 : _other$onBlur.call(other, event);\n      if (event.defaultPrevented) {\n        return;\n      }\n      if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement)) {\n        // focus is within the listbox\n        return;\n      }\n      dispatch({\n        type: ActionTypes.blur,\n        event: event\n      });\n    };\n  };\n  var getRootProps = function getRootProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, otherHandlers, {\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? optionIdGenerator(highlightedValue, highlightedIndex) : undefined,\n      id: id,\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers),\n      role: 'listbox',\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\n      ref: handleRef\n    });\n  };\n  var getOptionState = React.useCallback(function (option) {\n    var selected;\n    var index = options.findIndex(function (opt) {\n      return optionComparer(opt, option);\n    });\n    if (multiple) {\n      var _ref;\n      selected = ((_ref = latestSelectedValue.current) != null ? _ref : []).some(function (value) {\n        return value != null && optionComparer(option, value);\n      });\n    } else {\n      selected = optionComparer(option, latestSelectedValue.current);\n    }\n    var disabled = isOptionDisabled(option, index);\n    var highlighted = latestHighlightedIndex.current === index && index !== -1;\n    return {\n      disabled: disabled,\n      highlighted: highlighted,\n      index: index,\n      selected: selected\n    };\n  }, [options, multiple, isOptionDisabled, optionComparer, latestSelectedValue, latestHighlightedIndex]);\n  var getOptionTabIndex = React.useCallback(function (optionState) {\n    if (focusManagement === 'activeDescendant') {\n      return undefined;\n    }\n    if (!optionState.highlighted) {\n      return -1;\n    }\n    if (optionState.disabled && !disabledItemsFocusable) {\n      return -1;\n    }\n    return 0;\n  }, [focusManagement, disabledItemsFocusable]);\n  var getOptionProps = React.useCallback(function (option) {\n    var otherHandlers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var optionState = getOptionState(option);\n    return _extends({}, otherHandlers, {\n      'aria-disabled': optionState.disabled || undefined,\n      'aria-selected': optionState.selected,\n      id: optionIdGenerator(option, optionState.index),\n      onClick: createHandleOptionClick(option, otherHandlers),\n      onPointerOver: createHandleOptionPointerOver(option, otherHandlers),\n      role: 'option',\n      tabIndex: getOptionTabIndex(optionState)\n    });\n  }, [optionIdGenerator, createHandleOptionClick, createHandleOptionPointerOver, getOptionTabIndex, getOptionState]);\n  React.useDebugValue({\n    highlightedOption: highlightedValue,\n    selectedOption: selectedValue\n  });\n  return {\n    getRootProps: getRootProps,\n    getOptionProps: getOptionProps,\n    getOptionState: getOptionState,\n    highlightedOption: highlightedValue,\n    selectedOption: selectedValue,\n    setSelectedValue: setSelectedValue,\n    setHighlightedValue: setHighlightedValue\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useId","useId","ActionTypes","defaultReducer","useControllableReducer","areArraysEqual","useLatest","useTextNavigation","defaultOptionComparer","optionA","optionB","defaultIsOptionDisabled","defaultOptionStringifier","option","String","useListbox","props","_props$optionIdGenera","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$focusManagemen","focusManagement","idProp","id","_props$isOptionDisabl","isOptionDisabled","externalListboxRef","listboxRef","_props$multiple","multiple","_props$optionComparer","optionComparer","_props$optionStringif","optionStringifier","options","externalReducer","stateReducer","valueParam","value","defaultIdGenerator","useCallback","_","index","concat","optionIdGenerator","propsWithDefaults","useRef","handleRef","_useControllableReduc","_useControllableReduc2","_slicedToArray","_useControllableReduc3","highlightedValue","selectedValue","dispatch","handleTextNavigation","searchString","event","type","textNavigation","useEffect","undefined","setValue","highlightedIndex","useMemo","findIndex","latestSelectedValue","latestHighlightedIndex","previousOptions","current","optionsChange","setSelectedValue","setHighlightedValue","setHighlight","highlight","createHandleOptionClick","other","_other$onClick","onClick","call","defaultPrevented","preventDefault","optionClick","createHandleOptionPointerOver","_other$onMouseOver","onMouseOver","optionHover","createHandleKeyDown","_other$onKeyDown","onKeyDown","keysToPreventDefault","push","includes","key","keyDown","createHandleBlur","_other$onBlur","_listboxRef$current","onBlur","contains","document","activeElement","blur","getRootProps","otherHandlers","arguments","length","role","tabIndex","ref","getOptionState","selected","opt","_ref","some","disabled","highlighted","getOptionTabIndex","optionState","getOptionProps","onPointerOver","useDebugValue","highlightedOption","selectedOption"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/node_modules/@mui/base/useListbox/useListbox.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { ActionTypes } from './useListbox.types';\nimport defaultReducer from './defaultListboxReducer';\nimport useControllableReducer from './useControllableReducer';\nimport areArraysEqual from '../utils/areArraysEqual';\nimport useLatest from '../utils/useLatest';\nimport useTextNavigation from '../utils/useTextNavigation';\nconst defaultOptionComparer = (optionA, optionB) => optionA === optionB;\nconst defaultIsOptionDisabled = () => false;\nconst defaultOptionStringifier = option => typeof option === 'string' ? option : String(option);\n\n/**\n * @ignore - do not document.\n */\nexport default function useListbox(props) {\n  var _props$optionIdGenera;\n  const {\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    focusManagement = 'activeDescendant',\n    id: idProp,\n    isOptionDisabled = defaultIsOptionDisabled,\n    listboxRef: externalListboxRef,\n    multiple = false,\n    optionComparer = defaultOptionComparer,\n    optionStringifier = defaultOptionStringifier,\n    options,\n    stateReducer: externalReducer,\n    value: valueParam\n  } = props;\n  const id = useId(idProp);\n  const defaultIdGenerator = React.useCallback((_, index) => `${id}-option-${index}`, [id]);\n  const optionIdGenerator = (_props$optionIdGenera = props.optionIdGenerator) != null ? _props$optionIdGenera : defaultIdGenerator;\n  const propsWithDefaults = useLatest(_extends({}, props, {\n    disabledItemsFocusable,\n    disableListWrap,\n    focusManagement,\n    isOptionDisabled,\n    multiple,\n    optionComparer,\n    optionStringifier\n  }), [props]);\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(externalListboxRef, listboxRef);\n  const [{\n    highlightedValue,\n    selectedValue\n  }, dispatch] = useControllableReducer(defaultReducer, externalReducer, propsWithDefaults);\n  const handleTextNavigation = useTextNavigation((searchString, event) => dispatch({\n    type: ActionTypes.textNavigation,\n    event,\n    searchString\n  }));\n  React.useEffect(() => {\n    // if a controlled value changes, we need to update the state to keep things in sync\n    if (valueParam !== undefined && valueParam !== selectedValue) {\n      dispatch({\n        type: ActionTypes.setValue,\n        event: null,\n        value: valueParam\n      });\n    }\n  }, [valueParam, selectedValue, dispatch]);\n  const highlightedIndex = React.useMemo(() => {\n    return highlightedValue == null ? -1 : options.findIndex(option => optionComparer(option, highlightedValue));\n  }, [highlightedValue, options, optionComparer]);\n\n  // introducing refs to avoid recreating the getOptionState function on each change.\n  const latestSelectedValue = useLatest(selectedValue);\n  const latestHighlightedIndex = useLatest(highlightedIndex);\n  const previousOptions = React.useRef([]);\n  React.useEffect(() => {\n    if (areArraysEqual(previousOptions.current, options, optionComparer)) {\n      return;\n    }\n    dispatch({\n      type: ActionTypes.optionsChange,\n      event: null,\n      options,\n      previousOptions: previousOptions.current\n    });\n    previousOptions.current = options;\n  }, [options, optionComparer, dispatch]);\n  const setSelectedValue = React.useCallback(option => {\n    dispatch({\n      type: ActionTypes.setValue,\n      event: null,\n      value: option\n    });\n  }, [dispatch]);\n  const setHighlightedValue = React.useCallback(option => {\n    dispatch({\n      type: ActionTypes.setHighlight,\n      event: null,\n      highlight: option\n    });\n  }, [dispatch]);\n  const createHandleOptionClick = React.useCallback((option, other) => event => {\n    var _other$onClick;\n    (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    event.preventDefault();\n    dispatch({\n      type: ActionTypes.optionClick,\n      option,\n      event\n    });\n  }, [dispatch]);\n  const createHandleOptionPointerOver = React.useCallback((option, other) => event => {\n    var _other$onMouseOver;\n    (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ActionTypes.optionHover,\n      option,\n      event\n    });\n  }, [dispatch]);\n  const createHandleKeyDown = other => event => {\n    var _other$onKeyDown;\n    (_other$onKeyDown = other.onKeyDown) == null ? void 0 : _other$onKeyDown.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    const keysToPreventDefault = ['ArrowUp', 'ArrowDown', 'Home', 'End', 'PageUp', 'PageDown'];\n    if (focusManagement === 'activeDescendant') {\n      // When the child element is focused using the activeDescendant attribute,\n      // the listbox handles keyboard events on its behalf.\n      // We have to `preventDefault()` is this case to prevent the browser from\n      // scrolling the view when space is pressed or submitting forms when enter is pressed.\n      keysToPreventDefault.push(' ', 'Enter');\n    }\n    if (keysToPreventDefault.includes(event.key)) {\n      event.preventDefault();\n    }\n    dispatch({\n      type: ActionTypes.keyDown,\n      event\n    });\n    handleTextNavigation(event);\n  };\n  const createHandleBlur = other => event => {\n    var _other$onBlur, _listboxRef$current;\n    (_other$onBlur = other.onBlur) == null ? void 0 : _other$onBlur.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement)) {\n      // focus is within the listbox\n      return;\n    }\n    dispatch({\n      type: ActionTypes.blur,\n      event\n    });\n  };\n  const getRootProps = (otherHandlers = {}) => {\n    return _extends({}, otherHandlers, {\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? optionIdGenerator(highlightedValue, highlightedIndex) : undefined,\n      id,\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers),\n      role: 'listbox',\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\n      ref: handleRef\n    });\n  };\n  const getOptionState = React.useCallback(option => {\n    let selected;\n    const index = options.findIndex(opt => optionComparer(opt, option));\n    if (multiple) {\n      var _ref;\n      selected = ((_ref = latestSelectedValue.current) != null ? _ref : []).some(value => value != null && optionComparer(option, value));\n    } else {\n      selected = optionComparer(option, latestSelectedValue.current);\n    }\n    const disabled = isOptionDisabled(option, index);\n    const highlighted = latestHighlightedIndex.current === index && index !== -1;\n    return {\n      disabled,\n      highlighted,\n      index,\n      selected\n    };\n  }, [options, multiple, isOptionDisabled, optionComparer, latestSelectedValue, latestHighlightedIndex]);\n  const getOptionTabIndex = React.useCallback(optionState => {\n    if (focusManagement === 'activeDescendant') {\n      return undefined;\n    }\n    if (!optionState.highlighted) {\n      return -1;\n    }\n    if (optionState.disabled && !disabledItemsFocusable) {\n      return -1;\n    }\n    return 0;\n  }, [focusManagement, disabledItemsFocusable]);\n  const getOptionProps = React.useCallback((option, otherHandlers = {}) => {\n    const optionState = getOptionState(option);\n    return _extends({}, otherHandlers, {\n      'aria-disabled': optionState.disabled || undefined,\n      'aria-selected': optionState.selected,\n      id: optionIdGenerator(option, optionState.index),\n      onClick: createHandleOptionClick(option, otherHandlers),\n      onPointerOver: createHandleOptionPointerOver(option, otherHandlers),\n      role: 'option',\n      tabIndex: getOptionTabIndex(optionState)\n    });\n  }, [optionIdGenerator, createHandleOptionClick, createHandleOptionPointerOver, getOptionTabIndex, getOptionState]);\n  React.useDebugValue({\n    highlightedOption: highlightedValue,\n    selectedOption: selectedValue\n  });\n  return {\n    getRootProps,\n    getOptionProps,\n    getOptionState,\n    highlightedOption: highlightedValue,\n    selectedOption: selectedValue,\n    setSelectedValue,\n    setHighlightedValue\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}