{"ast":null,"code":"var _jsxFileName = \"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/Todo.tsx\",\n  _s = $RefreshSig$();\nimport { Grid, IconButton, Paper, Typography } from '@mui/material';\nimport React from 'react';\nimport AddToDoTask from './ToDoTask/AddToDoTask';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useAppDispatch } from '../../../redux-store/store';\nimport { deleteTodo } from '../../../helpers/CRUD/delete';\nimport { getTodos } from '../../../helpers/CRUD/useRead';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = _ref => {\n  _s();\n  let {\n    title,\n    color,\n    id\n  } = _ref;\n  const dispatch = useAppDispatch();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 5,\n      sx: {\n        width: '15rem',\n        height: '15rem',\n        backgroundColor: color,\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          textAlign: 'center',\n          marginBottom: '1rem'\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddToDoTask, {\n        todoId: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        sx: {\n          position: 'absolute',\n          bottom: '1rem',\n          right: '1rem'\n        },\n        onClick: () => {\n          dispatch(deleteTodo(id));\n          dispatch(getTodos());\n        },\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n_s(Todo, \"BJQ1DUn/XFEl2NsQ3DWyHAXfnkY=\", false, function () {\n  return [useAppDispatch];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["Grid","IconButton","Paper","Typography","React","AddToDoTask","DeleteIcon","useAppDispatch","deleteTodo","getTodos","jsxDEV","_jsxDEV","Todo","_ref","_s","title","color","id","dispatch","item","children","elevation","sx","width","height","backgroundColor","position","variant","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","todoId","bottom","right","onClick","_c","$RefreshReg$"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/Todo.tsx"],"sourcesContent":["import {ColorLensSharp} from '@mui/icons-material';\nimport {Grid, IconButton, Paper, Typography} from '@mui/material';\nimport React from 'react';\nimport AddToDoTask from './ToDoTask/AddToDoTask';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {useAppDispatch} from '../../../redux-store/store';\nimport {deleteTodo} from '../../../helpers/CRUD/delete';\nimport {getTodos} from '../../../helpers/CRUD/useRead';\nimport {toDoProps} from '../../../helpers/types';\n\nconst Todo = ({title, color, id}: toDoProps) => {\n   const dispatch = useAppDispatch();\n   return (\n      <Grid item>\n         <Paper\n            elevation={5}\n            sx={{\n               width: '15rem',\n               height: '15rem',\n               backgroundColor: color,\n               position: 'relative',\n            }}\n         >\n            <Typography\n               variant=\"h5\"\n               sx={{textAlign: 'center', marginBottom: '1rem'}}\n            >\n               {title}\n            </Typography>\n            <AddToDoTask todoId={id} />\n            <IconButton\n               sx={{position: 'absolute', bottom: '1rem', right: '1rem'}}\n               onClick={() => {\n                  dispatch(deleteTodo(id));\n                  dispatch(getTodos());\n               }}\n            >\n               <DeleteIcon />\n            </IconButton>\n         </Paper>\n      </Grid>\n   );\n};\n\nexport default Todo;\n"],"mappings":";;AACA,SAAQA,IAAI,EAAEC,UAAU,EAAEC,KAAK,EAAEC,UAAU,QAAO,eAAe;AACjE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,SAAQC,cAAc,QAAO,4BAA4B;AACzD,SAAQC,UAAU,QAAO,8BAA8B;AACvD,SAAQC,QAAQ,QAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvD,MAAMC,IAAI,GAAGC,IAAA,IAAmC;EAAAC,EAAA;EAAA,IAAlC;IAACC,KAAK;IAAEC,KAAK;IAAEC;EAAa,CAAC,GAAAJ,IAAA;EACxC,MAAMK,QAAQ,GAAGX,cAAc,EAAE;EACjC,oBACGI,OAAA,CAACX,IAAI;IAACmB,IAAI;IAAAC,QAAA,eACPT,OAAA,CAACT,KAAK;MACHmB,SAAS,EAAE,CAAE;MACbC,EAAE,EAAE;QACDC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,OAAO;QACfC,eAAe,EAAET,KAAK;QACtBU,QAAQ,EAAE;MACb,CAAE;MAAAN,QAAA,gBAEFT,OAAA,CAACR,UAAU;QACRwB,OAAO,EAAC,IAAI;QACZL,EAAE,EAAE;UAACM,SAAS,EAAE,QAAQ;UAAEC,YAAY,EAAE;QAAM,CAAE;QAAAT,QAAA,EAE/CL;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI,eACbtB,OAAA,CAACN,WAAW;QAAC6B,MAAM,EAAEjB;MAAG;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC3BtB,OAAA,CAACV,UAAU;QACRqB,EAAE,EAAE;UAACI,QAAQ,EAAE,UAAU;UAAES,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAM,CAAE;QAC1DC,OAAO,EAAEA,CAAA,KAAM;UACZnB,QAAQ,CAACV,UAAU,CAACS,EAAE,CAAC,CAAC;UACxBC,QAAQ,CAACT,QAAQ,EAAE,CAAC;QACvB,CAAE;QAAAW,QAAA,eAEFT,OAAA,CAACL,UAAU;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEb,CAAC;AAACnB,EAAA,CAhCIF,IAAI;EAAA,QACUL,cAAc;AAAA;AAAA+B,EAAA,GAD5B1B,IAAI;AAkCV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}