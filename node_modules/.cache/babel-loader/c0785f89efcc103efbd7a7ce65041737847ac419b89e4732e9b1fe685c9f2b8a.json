{"ast":null,"code":"var _jsxFileName = \"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/Todo.tsx\",\n  _s = $RefreshSig$();\nimport { Grid, IconButton, Paper, TextField, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport AddToDoTask from './ToDoTask/AddToDoTask';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useAppDispatch } from '../../../redux-store/store';\nimport { deleteTodo } from '../../../helpers/CRUD/delete';\nimport RenderTasks from './ToDoTask/RenderTasks';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { updateTitle } from '../../../helpers/CRUD/update';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todo = _ref => {\n  _s();\n  let {\n    title,\n    color,\n    id\n  } = _ref;\n  const [titleEditMode, setTitleEditMode] = useState(false);\n  const [titleValue, setTitleValue] = useState(title);\n  const dispatch = useAppDispatch();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 5,\n      sx: {\n        width: '15rem',\n        minHeight: '15rem',\n        backgroundColor: color,\n        position: 'relative',\n        padding: '1rem'\n      },\n      children: [!titleEditMode ? /*#__PURE__*/_jsxDEV(Typography, {\n        onClick: () => {\n          setTitleEditMode(true);\n        },\n        variant: \"h5\",\n        sx: {\n          textAlign: 'center',\n          marginBottom: '1rem'\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          size: \"small\",\n          sx: {\n            padding: '1rem 0'\n          },\n          value: titleValue,\n          onChange: e => {\n            setTitleValue(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            dispatch(updateTitle({\n              id: id,\n              title: titleValue\n            }));\n            setTitleEditMode(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(AddToDoTask, {\n        todoId: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RenderTasks, {\n        todoId: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        sx: {\n          position: 'absolute',\n          bottom: '0',\n          right: '0'\n        },\n        onClick: () => {\n          dispatch(deleteTodo(id));\n        },\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n_s(Todo, \"3DKLXQNwT8m8HFkOkiOeEbBNcAM=\", false, function () {\n  return [useAppDispatch];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["Grid","IconButton","Paper","TextField","Typography","React","useState","AddToDoTask","DeleteIcon","useAppDispatch","deleteTodo","RenderTasks","CheckIcon","updateTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_ref","_s","title","color","id","titleEditMode","setTitleEditMode","titleValue","setTitleValue","dispatch","item","children","elevation","sx","width","minHeight","backgroundColor","position","padding","onClick","variant","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","size","value","onChange","e","target","todoId","bottom","right","_c","$RefreshReg$"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/components/content/ToDo/Todo.tsx"],"sourcesContent":["import {ColorLensSharp} from '@mui/icons-material';\nimport {Grid, IconButton, Paper, TextField, Typography} from '@mui/material';\nimport React, {useState} from 'react';\nimport AddToDoTask from './ToDoTask/AddToDoTask';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {useAppDispatch} from '../../../redux-store/store';\nimport {deleteTodo} from '../../../helpers/CRUD/delete';\nimport {getTodos} from '../../../helpers/CRUD/read';\nimport {toDoProps} from '../../../helpers/types';\nimport RenderTasks from './ToDoTask/RenderTasks';\nimport CheckIcon from '@mui/icons-material/Check';\nimport {updateTitle} from '../../../helpers/CRUD/update';\n\nconst Todo = ({title, color, id}: toDoProps) => {\n   const [titleEditMode, setTitleEditMode] = useState(false);\n   const [titleValue, setTitleValue] = useState(title);\n   const dispatch = useAppDispatch();\n   return (\n      <Grid item>\n         <Paper\n            elevation={5}\n            sx={{\n               width: '15rem',\n               minHeight: '15rem',\n               backgroundColor: color,\n               position: 'relative',\n               padding: '1rem',\n            }}\n         >\n            {!titleEditMode ? (\n               <Typography\n                  onClick={() => {\n                     setTitleEditMode(true);\n                  }}\n                  variant=\"h5\"\n                  sx={{textAlign: 'center', marginBottom: '1rem'}}\n               >\n                  {title}\n               </Typography>\n            ) : (\n               <>\n                  <TextField\n                     size=\"small\"\n                     sx={{padding: '1rem 0'}}\n                     value={titleValue}\n                     onChange={e => {\n                        setTitleValue(e.target.value);\n                     }}\n                  />\n                  <IconButton\n                     onClick={() => {\n                        dispatch(updateTitle({id: id, title: titleValue}));\n                        setTitleEditMode(false);\n                     }}\n                  >\n                     <CheckIcon />\n                  </IconButton>\n               </>\n            )}\n            <AddToDoTask todoId={id} />\n            <RenderTasks todoId={id} />\n            <IconButton\n               sx={{position: 'absolute', bottom: '0', right: '0'}}\n               onClick={() => {\n                  dispatch(deleteTodo(id));\n               }}\n            >\n               <DeleteIcon />\n            </IconButton>\n         </Paper>\n      </Grid>\n   );\n};\n\nexport default Todo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}