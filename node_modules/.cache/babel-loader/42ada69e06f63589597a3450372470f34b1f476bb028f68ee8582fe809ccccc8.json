{"ast":null,"code":"var _jsxFileName = \"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/CurrentDeck.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Container, Typography } from '@mui/material';\nimport React, { useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { drawCards, getDeck, useGlobalState } from '../../helpers/CRUD/read';\nimport { useAppDispatch } from '../../redux-store/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentDeck = () => {\n  _s();\n  const [gameOn, setGameOn] = useState(false);\n  const {\n    currentDeck\n  } = useGlobalState();\n  const params = useParams();\n  const location = useLocation();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getDeck(params.id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      marginTop: '5rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: currentDeck.deck_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: [\"Cards remaining in deck: \", currentDeck.remaining]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        dispatch(drawCards(params.id));\n      },\n      variant: \"contained\",\n      children: \"Play a game!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n_s(CurrentDeck, \"Ri+/LNM7Jx1BPg3dLebMj/0LdA8=\", false, function () {\n  return [useGlobalState, useParams, useLocation, useAppDispatch];\n});\n_c = CurrentDeck;\nexport default CurrentDeck;\nvar _c;\n$RefreshReg$(_c, \"CurrentDeck\");","map":{"version":3,"names":["Button","Container","Typography","React","useEffect","useLocation","useParams","drawCards","getDeck","useGlobalState","useAppDispatch","jsxDEV","_jsxDEV","CurrentDeck","_s","gameOn","setGameOn","useState","currentDeck","params","location","dispatch","id","maxWidth","sx","marginTop","children","variant","deck_id","fileName","_jsxFileName","lineNumber","columnNumber","remaining","onClick","_c","$RefreshReg$"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/CurrentDeck.tsx"],"sourcesContent":["import {Button, Container, Typography} from '@mui/material';\nimport React, {useEffect} from 'react';\nimport {useLocation, useParams} from 'react-router-dom';\nimport {drawCards, getDeck, useGlobalState} from '../../helpers/CRUD/read';\nimport {useAppDispatch} from '../../redux-store/store';\n\nconst CurrentDeck = () => {\n   const [gameOn, setGameOn] = useState(false);\n   const {currentDeck} = useGlobalState();\n   const params = useParams();\n   const location = useLocation();\n   const dispatch = useAppDispatch();\n   useEffect(() => {\n      dispatch(getDeck(params.id));\n   }, []);\n   return (\n      <Container maxWidth=\"lg\" sx={{marginTop: '5rem'}}>\n         <Typography variant=\"h3\">{currentDeck.deck_id}</Typography>\n\n         <Typography variant=\"h3\">\n            Cards remaining in deck: {currentDeck.remaining}\n         </Typography>\n         <Button\n            onClick={() => {\n               dispatch(drawCards(params.id));\n            }}\n            variant=\"contained\"\n         >\n            Play a game!\n         </Button>\n      </Container>\n   );\n};\n\nexport default CurrentDeck;\n"],"mappings":";;AAAA,SAAQA,MAAM,EAAEC,SAAS,EAAEC,UAAU,QAAO,eAAe;AAC3D,OAAOC,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,WAAW,EAAEC,SAAS,QAAO,kBAAkB;AACvD,SAAQC,SAAS,EAAEC,OAAO,EAAEC,cAAc,QAAO,yBAAyB;AAC1E,SAAQC,cAAc,QAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM;IAACC;EAAW,CAAC,GAAGT,cAAc,EAAE;EACtC,MAAMU,MAAM,GAAGb,SAAS,EAAE;EAC1B,MAAMc,QAAQ,GAAGf,WAAW,EAAE;EAC9B,MAAMgB,QAAQ,GAAGX,cAAc,EAAE;EACjCN,SAAS,CAAC,MAAM;IACbiB,QAAQ,CAACb,OAAO,CAACW,MAAM,CAACG,EAAE,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EACN,oBACGV,OAAA,CAACX,SAAS;IAACsB,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAACC,SAAS,EAAE;IAAM,CAAE;IAAAC,QAAA,gBAC9Cd,OAAA,CAACV,UAAU;MAACyB,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAER,WAAW,CAACU;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAc,eAE3DpB,OAAA,CAACV,UAAU;MAACyB,OAAO,EAAC,IAAI;MAAAD,QAAA,GAAC,2BACG,EAACR,WAAW,CAACe,SAAS;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrC,eACbpB,OAAA,CAACZ,MAAM;MACJkC,OAAO,EAAEA,CAAA,KAAM;QACZb,QAAQ,CAACd,SAAS,CAACY,MAAM,CAACG,EAAE,CAAC,CAAC;MACjC,CAAE;MACFK,OAAO,EAAC,WAAW;MAAAD,QAAA,EACrB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAElB,CAAC;AAAClB,EAAA,CA1BID,WAAW;EAAA,QAEQJ,cAAc,EACrBH,SAAS,EACPD,WAAW,EACXK,cAAc;AAAA;AAAAyB,EAAA,GAL5BtB,WAAW;AA4BjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}