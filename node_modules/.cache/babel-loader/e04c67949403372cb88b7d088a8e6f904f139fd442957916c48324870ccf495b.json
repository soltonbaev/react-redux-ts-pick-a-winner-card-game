{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { TASKS, TODOS } from '../consts';\nexport const deleteTodo = createAsyncThunk('todos/deleteTodo', async id => {\n  const response = await axios.delete(TODOS + '/' + id);\n  console.log(response.data);\n  return id;\n});\nexport const deleteTask = createAsyncThunk('tasks/deleteTasks', async id => {\n  const response = await axios.delete(TASKS + '/' + id);\n  console.log(response.data);\n  return id;\n});","map":{"version":3,"names":["createAsyncThunk","axios","TASKS","TODOS","deleteTodo","id","response","delete","console","log","data","deleteTask"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/CRUD/delete.ts"],"sourcesContent":["import {createAsyncThunk} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {useAppDispatch} from '../../redux-store/store';\nimport {TASKS, TODOS} from '../consts';\n\nexport const deleteTodo = createAsyncThunk(\n   'todos/deleteTodo',\n   async (id: number) => {\n      const response = await axios.delete(TODOS + '/' + id);\n      console.log(response.data);\n      return id;\n   }\n);\n\nexport const deleteTask = createAsyncThunk(\n   'tasks/deleteTasks',\n   async (id: number) => {\n      const response = await axios.delete(TASKS + '/' + id);\n      console.log(response.data);\n      return id;\n   }\n);\n"],"mappings":"AAAA,SAAQA,gBAAgB,QAAO,kBAAkB;AACjD,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAAQC,KAAK,EAAEC,KAAK,QAAO,WAAW;AAEtC,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CACvC,kBAAkB,EAClB,MAAOK,EAAU,IAAK;EACnB,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,MAAM,CAACJ,KAAK,GAAG,GAAG,GAAGE,EAAE,CAAC;EACrDG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAC1B,OAAOL,EAAE;AACZ,CAAC,CACH;AAED,OAAO,MAAMM,UAAU,GAAGX,gBAAgB,CACvC,mBAAmB,EACnB,MAAOK,EAAU,IAAK;EACnB,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,MAAM,CAACL,KAAK,GAAG,GAAG,GAAGG,EAAE,CAAC;EACrDG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAC1B,OAAOL,EAAE;AACZ,CAAC,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}