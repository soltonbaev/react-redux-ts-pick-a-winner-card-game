{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { addToDo } from '../helpers/CRUD/create';\nimport { getTodos } from '../helpers/CRUD/read';\nimport { deleteTodo } from '../helpers/CRUD/delete';\nconst initialState = {\n  todos: [],\n  tasks: []\n  //    notes: [],\n  //    type: '',\n  //    title: '',\n};\n\nexport const RootReducer = createSlice({\n  name: 'todo_app',\n  initialState,\n  reducers: {\n    //   addToDo: (state, action) => {\n    //      state.todos.push(action.payload);\n    //      //  console.log('Current state', current(state));\n    //   },\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    }\n    //   addNotes: (state, action) => {\n    //      state.notes.push(action.payload);\n    //   },\n  },\n\n  extraReducers(builder) {\n    // omit posts loading reducers\n    builder.addCase(addToDo.fulfilled, (state, action) => {\n      // We can directly add the new post object to our posts array\n      state.todos.push(action.payload);\n    });\n    builder.addCase(getTodos.fulfilled, (state, action) => {\n      // We can directly add the new post object to our posts array\n      state.todos = action.payload;\n    });\n    builder.addCase(deleteTodo.fulfilled, (state, action) => {\n      // We can directly add the new post object to our posts array\n      state.todos = action.payload;\n    });\n  }\n});\n\n// export const {addToDo} = RootReducer.actions;\nexport default RootReducer.reducer;","map":{"version":3,"names":["createSlice","addToDo","getTodos","deleteTodo","initialState","todos","tasks","RootReducer","name","reducers","addTask","state","action","push","payload","extraReducers","builder","addCase","fulfilled","reducer"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/redux-store/RootReducer.ts"],"sourcesContent":["import React from 'react';\nimport {createAsyncThunk, createSlice, current} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {TODOS} from '../helpers/consts';\nimport {GlobalState, Todo} from '../helpers/types';\nimport {addToDo, generateRandomColor} from '../helpers/CRUD/create';\nimport {getTodos} from '../helpers/CRUD/read';\nimport {deleteTodo} from '../helpers/CRUD/delete';\n\nconst initialState: GlobalState = {\n   todos: [],\n   tasks: [],\n   //    notes: [],\n   //    type: '',\n   //    title: '',\n};\n\nexport const RootReducer = createSlice({\n   name: 'todo_app',\n   initialState,\n   reducers: {\n      //   addToDo: (state, action) => {\n      //      state.todos.push(action.payload);\n      //      //  console.log('Current state', current(state));\n      //   },\n      addTask: (state, action) => {\n         state.tasks.push(action.payload);\n      },\n      //   addNotes: (state, action) => {\n      //      state.notes.push(action.payload);\n      //   },\n   },\n   extraReducers(builder) {\n      // omit posts loading reducers\n      builder.addCase(addToDo.fulfilled, (state, action) => {\n         // We can directly add the new post object to our posts array\n         state.todos.push(action.payload);\n      });\n      builder.addCase(getTodos.fulfilled, (state, action) => {\n         // We can directly add the new post object to our posts array\n         state.todos = action.payload;\n      });\n      builder.addCase(deleteTodo.fulfilled, (state, action) => {\n         // We can directly add the new post object to our posts array\n         state.todos = action.payload;\n      });\n   },\n});\n\n// export const {addToDo} = RootReducer.actions;\nexport default RootReducer.reducer;\n"],"mappings":"AACA,SAA0BA,WAAW,QAAgB,kBAAkB;AAIvE,SAAQC,OAAO,QAA4B,wBAAwB;AACnE,SAAQC,QAAQ,QAAO,sBAAsB;AAC7C,SAAQC,UAAU,QAAO,wBAAwB;AAEjD,MAAMC,YAAyB,GAAG;EAC/BC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;EACP;EACA;EACA;AACH,CAAC;;AAED,OAAO,MAAMC,WAAW,GAAGP,WAAW,CAAC;EACpCQ,IAAI,EAAE,UAAU;EAChBJ,YAAY;EACZK,QAAQ,EAAE;IACP;IACA;IACA;IACA;IACAC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzBD,KAAK,CAACL,KAAK,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACnC;IACA;IACA;IACA;EACH,CAAC;;EACDC,aAAaA,CAACC,OAAO,EAAE;IACpB;IACAA,OAAO,CAACC,OAAO,CAAChB,OAAO,CAACiB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACnD;MACAD,KAAK,CAACN,KAAK,CAACQ,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACnC,CAAC,CAAC;IACFE,OAAO,CAACC,OAAO,CAACf,QAAQ,CAACgB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACpD;MACAD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACE,OAAO;IAC/B,CAAC,CAAC;IACFE,OAAO,CAACC,OAAO,CAACd,UAAU,CAACe,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACtD;MACAD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACE,OAAO;IAC/B,CAAC,CAAC;EACL;AACH,CAAC,CAAC;;AAEF;AACA,eAAeP,WAAW,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}