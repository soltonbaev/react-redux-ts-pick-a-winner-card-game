{"ast":null,"code":"var _jsxFileName = \"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/CurrentDeck.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Container, Grid, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { drawCards, getDeck, useGlobalState } from '../../helpers/CRUD/read';\nimport { useAppDispatch } from '../../redux-store/store';\nimport cardBack from './back_of_a_card.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CurrentDeck = () => {\n  _s();\n  const [gameOn, setGameOn] = useState(false);\n  const [cardsShown, setCardsShown] = useState(false);\n  const [buttonShown, setButtonShown] = useState(true);\n  const {\n    currentDeck,\n    currentDraw\n  } = useGlobalState();\n  const params = useParams();\n  const location = useLocation();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getDeck(params.id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      marginTop: '5rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 4,\n        children: gameOn && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: cardsShown ? /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '226px',\n              height: '314px'\n            },\n            src: currentDraw.cards[0].images.png\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '226px',\n              height: '314px'\n            },\n            src: cardBack,\n            onClick: () => {\n              setCardsShown(true);\n              setButtonShown(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 2,\n        children: buttonShown && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [' ', /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            children: currentDeck.deck_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            children: [\"Cards remaining in deck: \", currentDeck.remaining]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              dispatch(drawCards(params.id));\n              setCardsShown(false);\n              setGameOn(true);\n              setButtonShown(false);\n            },\n            variant: \"contained\",\n            children: \"Play a game!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 4,\n        children: gameOn && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: cardsShown ? /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '226px',\n              height: '314px'\n            },\n            src: currentDraw.cards[1].images.png\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '226px',\n              height: '314px'\n            },\n            src: cardBack,\n            onClick: () => {\n              setCardsShown(true);\n              setButtonShown(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n_s(CurrentDeck, \"7+KCQNSu2dGSYTLO9Bc3GSzJuDw=\", false, function () {\n  return [useGlobalState, useParams, useLocation, useAppDispatch];\n});\n_c = CurrentDeck;\nexport default CurrentDeck;\nvar _c;\n$RefreshReg$(_c, \"CurrentDeck\");","map":{"version":3,"names":["Button","Container","Grid","Typography","React","useEffect","useState","useLocation","useParams","drawCards","getDeck","useGlobalState","useAppDispatch","cardBack","jsxDEV","_jsxDEV","Fragment","_Fragment","CurrentDeck","_s","gameOn","setGameOn","cardsShown","setCardsShown","buttonShown","setButtonShown","currentDeck","currentDraw","params","location","dispatch","id","maxWidth","sx","marginTop","children","container","item","lg","style","width","height","src","cards","images","png","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","deck_id","remaining","_c","$RefreshReg$"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/components/content/CurrentDeck.tsx"],"sourcesContent":["import {Button, Container, Grid, Typography} from '@mui/material';\nimport React, {useEffect, useState} from 'react';\nimport {useLocation, useParams} from 'react-router-dom';\nimport {drawCards, getDeck, useGlobalState} from '../../helpers/CRUD/read';\nimport {useAppDispatch} from '../../redux-store/store';\nimport cardBack from './back_of_a_card.jpg';\n\nconst CurrentDeck = () => {\n   const [gameOn, setGameOn] = useState(false);\n   const [cardsShown, setCardsShown] = useState(false);\n   const [buttonShown, setButtonShown] = useState(true);\n   const {currentDeck, currentDraw} = useGlobalState();\n   const params = useParams();\n   const location = useLocation();\n   const dispatch = useAppDispatch();\n   useEffect(() => {\n      dispatch(getDeck(params.id));\n   }, []);\n   return (\n      <Container maxWidth=\"lg\" sx={{marginTop: '5rem'}}>\n         <Grid container>\n            <Grid item lg={4}>\n               {gameOn && (\n                  <>\n                     {cardsShown ? (\n                        <img\n                           style={{width: '226px', height: '314px'}}\n                           src={currentDraw.cards[0].images.png}\n                        />\n                     ) : (\n                        <img\n                           style={{width: '226px', height: '314px'}}\n                           src={cardBack}\n                           onClick={() => {\n                              setCardsShown(true);\n                              setButtonShown(true);\n                           }}\n                        />\n                     )}\n                  </>\n               )}\n            </Grid>\n            <Grid item lg={2}>\n               {buttonShown && (\n                  <>\n                     {' '}\n                     <Typography variant=\"h3\">{currentDeck.deck_id}</Typography>\n                     <Typography variant=\"h3\">\n                        Cards remaining in deck: {currentDeck.remaining}\n                     </Typography>\n                     <Button\n                        onClick={() => {\n                           dispatch(drawCards(params.id));\n                           setCardsShown(false);\n                           setGameOn(true);\n                           setButtonShown(false);\n                        }}\n                        variant=\"contained\"\n                     >\n                        Play a game!\n                     </Button>\n                  </>\n               )}\n            </Grid>\n            <Grid item lg={4}>\n               {gameOn && (\n                  <>\n                     {cardsShown ? (\n                        <img\n                           style={{width: '226px', height: '314px'}}\n                           src={currentDraw.cards[1].images.png}\n                        />\n                     ) : (\n                        <img\n                           style={{width: '226px', height: '314px'}}\n                           src={cardBack}\n                           onClick={() => {\n                              setCardsShown(true);\n                              setButtonShown(true);\n                           }}\n                        />\n                     )}\n                  </>\n               )}\n            </Grid>\n         </Grid>\n      </Container>\n   );\n};\n\nexport default CurrentDeck;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}