{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { BASE_URL } from '../consts';\nexport const useGlobalState = () => {\n  _s();\n  return useSelector(state => {\n    return state;\n  });\n};\n_s(useGlobalState, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\nfunction getCurrentDeckId() {\n  _s2();\n  const {\n    currentDeck\n  } = useGlobalState();\n  return currentDeck.deck_id;\n}\n_s2(getCurrentDeckId, \"Ee/rQDUdm8vsDcvXx2SN6sQVaws=\", false, function () {\n  return [useGlobalState];\n});\nexport const drawCards = _s3(createAsyncThunk('deck/drawCards', _s3(async () => {\n  _s3();\n  console.log('Test');\n  const {\n    currentDeck\n  } = useGlobalState();\n  console.log('draw cards current deck', currentDeck);\n  const response = await axios.get(BASE_URL + currentDeck.deck_id + '/draw/?count=2 ');\n  console.log(response.data);\n  return response.data;\n}, \"Ee/rQDUdm8vsDcvXx2SN6sQVaws=\", false, function () {\n  return [useGlobalState];\n})), \"Ee/rQDUdm8vsDcvXx2SN6sQVaws=\", false, function () {\n  return [useGlobalState];\n});","map":{"version":3,"names":["createAsyncThunk","axios","useSelector","BASE_URL","useGlobalState","_s","state","getCurrentDeckId","_s2","currentDeck","deck_id","drawCards","_s3","console","log","response","get","data"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/CRUD/read.ts"],"sourcesContent":["import {createAsyncThunk} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {useSelector} from 'react-redux';\nimport {RootState, useAppDispatch} from '../../redux-store/store';\nimport {BASE_URL} from '../consts';\n\nexport const useGlobalState = () => {\n   return useSelector((state: RootState) => {\n      return state;\n   });\n};\n\nfunction getCurrentDeckId() {\n   const {currentDeck} = useGlobalState();\n   return currentDeck.deck_id;\n}\n\nexport const drawCards = createAsyncThunk('deck/drawCards', async () => {\n   console.log('Test');\n   const {currentDeck} = useGlobalState();\n   console.log('draw cards current deck', currentDeck);\n   const response = await axios.get(\n      BASE_URL + currentDeck.deck_id + '/draw/?count=2 '\n   );\n   console.log(response.data);\n   return response.data;\n});\n"],"mappings":";;;AAAA,SAAQA,gBAAgB,QAAO,kBAAkB;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,aAAa;AAEvC,SAAQC,QAAQ,QAAO,WAAW;AAElC,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,OAAOH,WAAW,CAAEI,KAAgB,IAAK;IACtC,OAAOA,KAAK;EACf,CAAC,CAAC;AACL,CAAC;AAACD,EAAA,CAJWD,cAAc;EAAA,QACjBF,WAAW;AAAA;AAKrB,SAASK,gBAAgBA,CAAA,EAAG;EAAAC,GAAA;EACzB,MAAM;IAACC;EAAW,CAAC,GAAGL,cAAc,EAAE;EACtC,OAAOK,WAAW,CAACC,OAAO;AAC7B;AAACF,GAAA,CAHQD,gBAAgB;EAAA,QACAH,cAAc;AAAA;AAIvC,OAAO,MAAMO,SAAS,GAAAC,GAAA,CAAGZ,gBAAgB,CAAC,gBAAgB,EAAAY,GAAA,CAAE,YAAY;EAAAA,GAAA;EACrEC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACnB,MAAM;IAACL;EAAW,CAAC,GAAGL,cAAc,EAAE;EACtCS,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEL,WAAW,CAAC;EACnD,MAAMM,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAC7Bb,QAAQ,GAAGM,WAAW,CAACC,OAAO,GAAG,iBAAiB,CACpD;EACDG,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACE,IAAI,CAAC;EAC1B,OAAOF,QAAQ,CAACE,IAAI;AACvB,CAAC;EAAA,QAPwBb,cAAc;AAAA,GAOrC;EAAA,QAPuBA,cAAc;AAAA,EAOrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}