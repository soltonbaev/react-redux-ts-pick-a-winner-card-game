{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { BASE_URL } from '../consts';\nimport { setToLocalStorage } from './create';\nexport const useGlobalState = () => {\n  _s();\n  return useSelector(state => {\n    return state;\n  });\n};\n_s(useGlobalState, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\nexport const drawCards = createAsyncThunk('deck/drawCards', async deck_id => {\n  const response = await axios.get(BASE_URL + deck_id + '/draw/?count=2 ');\n  console.log(response.data);\n  return response.data;\n});\nexport const getDeck = createAsyncThunk('deck/getDeck', async deck_id => {\n  const response = await axios.get(BASE_URL + deck_id);\n  console.log(response.data);\n  return response.data;\n});\nexport async function fetchDeck(deck_id) {\n  try {\n    const response = await axios.get(BASE_URL + deck_id);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}\nexport function getFromLocalStorage() {\n  let gameData = localStorage.getItem('gameData');\n  if (!gameData) {\n    setToLocalStorage({\n      currentDeck: {},\n      currentDraw: {},\n      info: {},\n      gameData: {\n        loggedIn: false,\n        decks: [],\n        balance: 10000\n      }\n    });\n    gameData: any = localStorage.getItem('gameData');\n  }\n  return JSON.parse(gameData);\n}","map":{"version":3,"names":["createAsyncThunk","axios","useSelector","BASE_URL","setToLocalStorage","useGlobalState","_s","state","drawCards","deck_id","response","get","console","log","data","getDeck","fetchDeck","error","getFromLocalStorage","gameData","localStorage","getItem","currentDeck","currentDraw","info","loggedIn","decks","balance","any","JSON","parse"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/CRUD/read.ts"],"sourcesContent":["import {createAsyncThunk} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {useSelector} from 'react-redux';\nimport {RootState, useAppDispatch} from '../../redux-store/store';\nimport {BASE_URL} from '../consts';\nimport {setToLocalStorage} from './create';\n\nexport const useGlobalState = () => {\n   return useSelector((state: RootState) => {\n      return state;\n   });\n};\n\nexport const drawCards = createAsyncThunk(\n   'deck/drawCards',\n   async (deck_id: string | undefined) => {\n      const response = await axios.get(BASE_URL + deck_id + '/draw/?count=2 ');\n      console.log(response.data);\n      return response.data;\n   }\n);\n\nexport const getDeck = createAsyncThunk(\n   'deck/getDeck',\n   async (deck_id: string | undefined) => {\n      const response = await axios.get(BASE_URL + deck_id);\n      console.log(response.data);\n      return response.data;\n   }\n);\n\nexport async function fetchDeck(deck_id: string | undefined) {\n   try {\n      const response = await axios.get(BASE_URL + deck_id);\n      console.log(response.data);\n      return response.data;\n   } catch (error) {\n      console.log(error);\n      return error;\n   }\n}\n\nexport function getFromLocalStorage() {\n   let gameData: any = localStorage.getItem('gameData');\n   if (!gameData) {\n      setToLocalStorage({\n         currentDeck: {},\n         currentDraw: {},\n         info: {},\n         gameData: {loggedIn: false, decks: [], balance: 10000},\n      });\n      gameData: any = localStorage.getItem('gameData');\n   }\n\n   return JSON.parse(gameData);\n}\n"],"mappings":";AAAA,SAAQA,gBAAgB,QAAO,kBAAkB;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,aAAa;AAEvC,SAAQC,QAAQ,QAAO,WAAW;AAClC,SAAQC,iBAAiB,QAAO,UAAU;AAE1C,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,OAAOJ,WAAW,CAAEK,KAAgB,IAAK;IACtC,OAAOA,KAAK;EACf,CAAC,CAAC;AACL,CAAC;AAACD,EAAA,CAJWD,cAAc;EAAA,QACjBH,WAAW;AAAA;AAKrB,OAAO,MAAMM,SAAS,GAAGR,gBAAgB,CACtC,gBAAgB,EAChB,MAAOS,OAA2B,IAAK;EACpC,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACR,QAAQ,GAAGM,OAAO,GAAG,iBAAiB,CAAC;EACxEG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAC1B,OAAOJ,QAAQ,CAACI,IAAI;AACvB,CAAC,CACH;AAED,OAAO,MAAMC,OAAO,GAAGf,gBAAgB,CACpC,cAAc,EACd,MAAOS,OAA2B,IAAK;EACpC,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACR,QAAQ,GAAGM,OAAO,CAAC;EACpDG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAC1B,OAAOJ,QAAQ,CAACI,IAAI;AACvB,CAAC,CACH;AAED,OAAO,eAAeE,SAASA,CAACP,OAA2B,EAAE;EAC1D,IAAI;IACD,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACR,QAAQ,GAAGM,OAAO,CAAC;IACpDG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC1B,OAAOJ,QAAQ,CAACI,IAAI;EACvB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACbL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IAClB,OAAOA,KAAK;EACf;AACH;AAEA,OAAO,SAASC,mBAAmBA,CAAA,EAAG;EACnC,IAAIC,QAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACpD,IAAI,CAACF,QAAQ,EAAE;IACZf,iBAAiB,CAAC;MACfkB,WAAW,EAAE,CAAC,CAAC;MACfC,WAAW,EAAE,CAAC,CAAC;MACfC,IAAI,EAAE,CAAC,CAAC;MACRL,QAAQ,EAAE;QAACM,QAAQ,EAAE,KAAK;QAAEC,KAAK,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAK;IACxD,CAAC,CAAC;IACFR,QAAQ,EAAES,GAAG,GAAGR,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACnD;EAEA,OAAOQ,IAAI,CAACC,KAAK,CAACX,QAAQ,CAAC;AAC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}