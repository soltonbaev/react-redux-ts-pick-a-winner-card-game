{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createNewDeck } from '../helpers/CRUD/create';\nimport { initialState } from './rootReducer';\nconst newDeckSlice = createSlice({\n  name: 'newDeck',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    // new deck cases\n    builder.addCase(createNewDeck.rejected, (state, action) => {\n      state.info = {\n        switchModalOn: true,\n        type: 'error',\n        message: 'Unable to create deck. Server or internet down'\n      };\n    });\n    builder.addCase(createNewDeck.pending, (state, action) => {\n      state.info = {\n        switchModalOn: true,\n        type: 'warning',\n        message: 'Generating deck. Please wait...'\n      };\n    });\n    builder.addCase(createNewDeck.fulfilled, (state, action) => {\n      state.currentDeck = action.payload;\n      state.info = {\n        switchModalOn: false,\n        type: 'success',\n        message: 'Deck generated'\n      };\n    });\n  }\n});\nexport default newDeckSlice.reducer;","map":{"version":3,"names":["createSlice","createNewDeck","initialState","newDeckSlice","name","reducers","extraReducers","builder","addCase","rejected","state","action","info","switchModalOn","type","message","pending","fulfilled","currentDeck","payload","reducer"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/redux-store/NewDeckSlice.ts"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport {createNewDeck} from '../helpers/CRUD/create';\nimport {initialState} from './rootReducer';\n\nconst newDeckSlice = createSlice({\n   name: 'newDeck',\n   initialState,\n   reducers: {},\n   extraReducers(builder) {\n      // new deck cases\n      builder.addCase(createNewDeck.rejected, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'error',\n            message: 'Unable to create deck. Server or internet down',\n         };\n      });\n      builder.addCase(createNewDeck.pending, (state, action) => {\n         state.info = {\n            switchModalOn: true,\n            type: 'warning',\n            message: 'Generating deck. Please wait...',\n         };\n      });\n      builder.addCase(createNewDeck.fulfilled, (state, action) => {\n         state.currentDeck = action.payload;\n         state.info = {\n            switchModalOn: false,\n            type: 'success',\n            message: 'Deck generated',\n         };\n      });\n   },\n});\n\nexport default newDeckSlice.reducer;\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,aAAa,QAAO,wBAAwB;AACpD,SAAQC,YAAY,QAAO,eAAe;AAE1C,MAAMC,YAAY,GAAGH,WAAW,CAAC;EAC9BI,IAAI,EAAE,SAAS;EACfF,YAAY;EACZG,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAaA,CAACC,OAAO,EAAE;IACpB;IACAA,OAAO,CAACC,OAAO,CAACP,aAAa,CAACQ,QAAQ,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAACE,IAAI,GAAG;QACVC,aAAa,EAAE,IAAI;QACnBC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE;MACZ,CAAC;IACJ,CAAC,CAAC;IACFR,OAAO,CAACC,OAAO,CAACP,aAAa,CAACe,OAAO,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACE,IAAI,GAAG;QACVC,aAAa,EAAE,IAAI;QACnBC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE;MACZ,CAAC;IACJ,CAAC,CAAC;IACFR,OAAO,CAACC,OAAO,CAACP,aAAa,CAACgB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACzDD,KAAK,CAACQ,WAAW,GAAGP,MAAM,CAACQ,OAAO;MAClCT,KAAK,CAACE,IAAI,GAAG;QACVC,aAAa,EAAE,KAAK;QACpBC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE;MACZ,CAAC;IACJ,CAAC,CAAC;EACL;AACH,CAAC,CAAC;AAEF,eAAeZ,YAAY,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}