{"ast":null,"code":"import _toConsumableArray from \"/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ActionTypes } from './useListbox.types';\nvar pageSize = 5;\nfunction findValidOptionToHighlight(index, lookupDirection, options, focusDisabled, isOptionDisabled, wrapAround) {\n  if (options.length === 0 || options.every(function (o, i) {\n    return isOptionDisabled(o, i);\n  })) {\n    return -1;\n  }\n  var nextFocus = index;\n  for (;;) {\n    // No valid options found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === options.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n    var nextFocusDisabled = focusDisabled ? false : isOptionDisabled(options[nextFocus], nextFocus);\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n      if (wrapAround) {\n        nextFocus = (nextFocus + options.length) % options.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\nfunction getNewHighlightedOption(options, previouslyHighlightedOption, diff, lookupDirection, highlightDisabled, isOptionDisabled, wrapAround, optionComparer) {\n  var _options$nextIndex;\n  var maxIndex = options.length - 1;\n  var defaultHighlightedIndex = -1;\n  var nextIndexCandidate;\n  var previouslyHighlightedIndex = previouslyHighlightedOption == null ? -1 : options.findIndex(function (option) {\n    return optionComparer(option, previouslyHighlightedOption);\n  });\n  if (diff === 'reset') {\n    var _options$defaultHighl;\n    return defaultHighlightedIndex === -1 ? null : (_options$defaultHighl = options[defaultHighlightedIndex]) != null ? _options$defaultHighl : null;\n  }\n  if (diff === 'start') {\n    nextIndexCandidate = 0;\n  } else if (diff === 'end') {\n    nextIndexCandidate = maxIndex;\n  } else {\n    var newIndex = previouslyHighlightedIndex + diff;\n    if (newIndex < 0) {\n      if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(diff) > 1) {\n        nextIndexCandidate = 0;\n      } else {\n        nextIndexCandidate = maxIndex;\n      }\n    } else if (newIndex > maxIndex) {\n      if (!wrapAround || Math.abs(diff) > 1) {\n        nextIndexCandidate = maxIndex;\n      } else {\n        nextIndexCandidate = 0;\n      }\n    } else {\n      nextIndexCandidate = newIndex;\n    }\n  }\n  var nextIndex = findValidOptionToHighlight(nextIndexCandidate, lookupDirection, options, highlightDisabled, isOptionDisabled, wrapAround);\n  return (_options$nextIndex = options[nextIndex]) != null ? _options$nextIndex : null;\n}\nfunction handleOptionSelection(option, state, props) {\n  var multiple = props.multiple,\n    _props$optionComparer = props.optionComparer,\n    optionComparer = _props$optionComparer === void 0 ? function (o, v) {\n      return o === v;\n    } : _props$optionComparer,\n    _props$isOptionDisabl = props.isOptionDisabled,\n    isOptionDisabled = _props$isOptionDisabl === void 0 ? function () {\n      return false;\n    } : _props$isOptionDisabl;\n  var selectedValue = state.selectedValue;\n  var optionIndex = props.options.findIndex(function (o) {\n    return props.optionComparer(option, o);\n  });\n  if (isOptionDisabled(option, optionIndex)) {\n    return state;\n  }\n  if (multiple) {\n    var _ref, _ref2;\n    var selectedValues = (_ref = selectedValue) != null ? _ref : [];\n    // if the option is already selected, remove it from the selection, otherwise add it\n    var newSelectedValues = selectedValues.some(function (sv) {\n      return optionComparer(sv, option);\n    }) ? selectedValue.filter(function (v) {\n      return !optionComparer(v, option);\n    }) : [].concat(_toConsumableArray((_ref2 = selectedValue) != null ? _ref2 : []), [option]);\n    return {\n      selectedValue: newSelectedValues,\n      highlightedValue: option\n    };\n  }\n  if (selectedValue != null && optionComparer(option, selectedValue)) {\n    return state;\n  }\n  return {\n    selectedValue: option,\n    highlightedValue: option\n  };\n}\nfunction handleKeyDown(event, state, props) {\n  var options = props.options,\n    isOptionDisabled = props.isOptionDisabled,\n    disableListWrap = props.disableListWrap,\n    disabledItemsFocusable = props.disabledItemsFocusable,\n    optionComparer = props.optionComparer;\n  var moveHighlight = function moveHighlight(diff, direction, wrapAround) {\n    return getNewHighlightedOption(options, state.highlightedValue, diff, direction, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : function () {\n      return false;\n    }, wrapAround, optionComparer);\n  };\n  switch (event.key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight('start', 'next', false)\n      });\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight('end', 'previous', false)\n      });\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(-pageSize, 'previous', false)\n      });\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(pageSize, 'next', false)\n      });\n    case 'ArrowUp':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(-1, 'previous', !(disableListWrap != null ? disableListWrap : false))\n      });\n    case 'ArrowDown':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(1, 'next', !(disableListWrap != null ? disableListWrap : false))\n      });\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n      return handleOptionSelection(state.highlightedValue, state, props);\n    default:\n      break;\n  }\n  return state;\n}\nfunction handleBlur(state) {\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\nvar textCriteriaMatches = function textCriteriaMatches(nextFocus, searchString, stringifyOption) {\n  var _stringifyOption;\n  var text = (_stringifyOption = stringifyOption(nextFocus)) == null ? void 0 : _stringifyOption.trim().toLowerCase();\n  if (!text || text.length === 0) {\n    // Make option not navigable if stringification fails or results in empty string.\n    return false;\n  }\n  return text.indexOf(searchString) === 0;\n};\nfunction handleTextNavigation(state, searchString, props) {\n  var options = props.options,\n    isOptionDisabled = props.isOptionDisabled,\n    disableListWrap = props.disableListWrap,\n    disabledItemsFocusable = props.disabledItemsFocusable,\n    optionComparer = props.optionComparer,\n    optionStringifier = props.optionStringifier;\n  var moveHighlight = function moveHighlight(previouslyHighlightedOption) {\n    return getNewHighlightedOption(options, previouslyHighlightedOption, 1, 'next', disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : function () {\n      return false;\n    }, !(disableListWrap != null ? disableListWrap : false), optionComparer);\n  };\n  var startWithCurrentOption = searchString.length > 1;\n  var nextOption = startWithCurrentOption ? state.highlightedValue : moveHighlight(state.highlightedValue);\n\n  // use `for` instead of `while` prevent infinite loop\n  for (var index = 0; index < options.length; index += 1) {\n    // Return un-mutated state if looped back to the currently highlighted value\n    if (!nextOption || !startWithCurrentOption && state.highlightedValue === nextOption) {\n      return state;\n    }\n    if (textCriteriaMatches(nextOption, searchString, optionStringifier) && (!isOptionDisabled(nextOption, options.indexOf(nextOption)) || disabledItemsFocusable)) {\n      // The nextOption is the element to be highlighted\n      return _extends({}, state, {\n        highlightedValue: nextOption\n      });\n    }\n    // Move to the next element.\n    nextOption = moveHighlight(nextOption);\n  }\n\n  // No option match text search criteria\n  return state;\n}\nfunction handleOptionsChange(options, previousOptions, state, props) {\n  var _options$find, _options$find2;\n  var multiple = props.multiple,\n    optionComparer = props.optionComparer;\n  var newHighlightedOption = state.highlightedValue == null ? null : (_options$find = options.find(function (option) {\n    return optionComparer(option, state.highlightedValue);\n  })) != null ? _options$find : null;\n  if (multiple) {\n    var _ref3;\n    // exclude selected values that are no longer in the options\n    var selectedValues = (_ref3 = state.selectedValue) != null ? _ref3 : [];\n    var newSelectedValues = selectedValues.filter(function (selectedValue) {\n      return options.some(function (option) {\n        return optionComparer(option, selectedValue);\n      });\n    });\n    return {\n      highlightedValue: newHighlightedOption,\n      selectedValue: newSelectedValues\n    };\n  }\n  var newSelectedValue = (_options$find2 = options.find(function (option) {\n    return optionComparer(option, state.selectedValue);\n  })) != null ? _options$find2 : null;\n  return {\n    highlightedValue: newHighlightedOption,\n    selectedValue: newSelectedValue\n  };\n}\nexport default function defaultListboxReducer(state, action) {\n  var type = action.type;\n  switch (type) {\n    case ActionTypes.keyDown:\n      return handleKeyDown(action.event, state, action.props);\n    case ActionTypes.optionClick:\n      return handleOptionSelection(action.option, state, action.props);\n    case ActionTypes.blur:\n      return handleBlur(state);\n    case ActionTypes.setValue:\n      return _extends({}, state, {\n        selectedValue: action.value\n      });\n    case ActionTypes.setHighlight:\n      return _extends({}, state, {\n        highlightedValue: action.highlight\n      });\n    case ActionTypes.textNavigation:\n      return handleTextNavigation(state, action.searchString, action.props);\n    case ActionTypes.optionsChange:\n      return handleOptionsChange(action.options, action.previousOptions, state, action.props);\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["_extends","ActionTypes","pageSize","findValidOptionToHighlight","index","lookupDirection","options","focusDisabled","isOptionDisabled","wrapAround","length","every","o","i","nextFocus","nextFocusDisabled","getNewHighlightedOption","previouslyHighlightedOption","diff","highlightDisabled","optionComparer","_options$nextIndex","maxIndex","defaultHighlightedIndex","nextIndexCandidate","previouslyHighlightedIndex","findIndex","option","_options$defaultHighl","newIndex","Math","abs","nextIndex","handleOptionSelection","state","props","multiple","_props$optionComparer","v","_props$isOptionDisabl","selectedValue","optionIndex","_ref","_ref2","selectedValues","newSelectedValues","some","sv","filter","concat","_toConsumableArray","highlightedValue","handleKeyDown","event","disableListWrap","disabledItemsFocusable","moveHighlight","direction","key","handleBlur","textCriteriaMatches","searchString","stringifyOption","_stringifyOption","text","trim","toLowerCase","indexOf","handleTextNavigation","optionStringifier","startWithCurrentOption","nextOption","handleOptionsChange","previousOptions","_options$find","_options$find2","newHighlightedOption","find","_ref3","newSelectedValue","defaultListboxReducer","action","type","keyDown","optionClick","blur","setValue","value","setHighlight","highlight","textNavigation","optionsChange"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/node_modules/@mui/base/useListbox/defaultListboxReducer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ActionTypes } from './useListbox.types';\nconst pageSize = 5;\nfunction findValidOptionToHighlight(index, lookupDirection, options, focusDisabled, isOptionDisabled, wrapAround) {\n  if (options.length === 0 || options.every((o, i) => isOptionDisabled(o, i))) {\n    return -1;\n  }\n  let nextFocus = index;\n  for (;;) {\n    // No valid options found\n    if (!wrapAround && lookupDirection === 'next' && nextFocus === options.length || !wrapAround && lookupDirection === 'previous' && nextFocus === -1) {\n      return -1;\n    }\n    const nextFocusDisabled = focusDisabled ? false : isOptionDisabled(options[nextFocus], nextFocus);\n    if (nextFocusDisabled) {\n      nextFocus += lookupDirection === 'next' ? 1 : -1;\n      if (wrapAround) {\n        nextFocus = (nextFocus + options.length) % options.length;\n      }\n    } else {\n      return nextFocus;\n    }\n  }\n}\nfunction getNewHighlightedOption(options, previouslyHighlightedOption, diff, lookupDirection, highlightDisabled, isOptionDisabled, wrapAround, optionComparer) {\n  var _options$nextIndex;\n  const maxIndex = options.length - 1;\n  const defaultHighlightedIndex = -1;\n  let nextIndexCandidate;\n  const previouslyHighlightedIndex = previouslyHighlightedOption == null ? -1 : options.findIndex(option => optionComparer(option, previouslyHighlightedOption));\n  if (diff === 'reset') {\n    var _options$defaultHighl;\n    return defaultHighlightedIndex === -1 ? null : (_options$defaultHighl = options[defaultHighlightedIndex]) != null ? _options$defaultHighl : null;\n  }\n  if (diff === 'start') {\n    nextIndexCandidate = 0;\n  } else if (diff === 'end') {\n    nextIndexCandidate = maxIndex;\n  } else {\n    const newIndex = previouslyHighlightedIndex + diff;\n    if (newIndex < 0) {\n      if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(diff) > 1) {\n        nextIndexCandidate = 0;\n      } else {\n        nextIndexCandidate = maxIndex;\n      }\n    } else if (newIndex > maxIndex) {\n      if (!wrapAround || Math.abs(diff) > 1) {\n        nextIndexCandidate = maxIndex;\n      } else {\n        nextIndexCandidate = 0;\n      }\n    } else {\n      nextIndexCandidate = newIndex;\n    }\n  }\n  const nextIndex = findValidOptionToHighlight(nextIndexCandidate, lookupDirection, options, highlightDisabled, isOptionDisabled, wrapAround);\n  return (_options$nextIndex = options[nextIndex]) != null ? _options$nextIndex : null;\n}\nfunction handleOptionSelection(option, state, props) {\n  const {\n    multiple,\n    optionComparer = (o, v) => o === v,\n    isOptionDisabled = () => false\n  } = props;\n  const {\n    selectedValue\n  } = state;\n  const optionIndex = props.options.findIndex(o => props.optionComparer(option, o));\n  if (isOptionDisabled(option, optionIndex)) {\n    return state;\n  }\n  if (multiple) {\n    var _ref, _ref2;\n    const selectedValues = (_ref = selectedValue) != null ? _ref : [];\n    // if the option is already selected, remove it from the selection, otherwise add it\n    const newSelectedValues = selectedValues.some(sv => optionComparer(sv, option)) ? selectedValue.filter(v => !optionComparer(v, option)) : [...((_ref2 = selectedValue) != null ? _ref2 : []), option];\n    return {\n      selectedValue: newSelectedValues,\n      highlightedValue: option\n    };\n  }\n  if (selectedValue != null && optionComparer(option, selectedValue)) {\n    return state;\n  }\n  return {\n    selectedValue: option,\n    highlightedValue: option\n  };\n}\nfunction handleKeyDown(event, state, props) {\n  const {\n    options,\n    isOptionDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    optionComparer\n  } = props;\n  const moveHighlight = (diff, direction, wrapAround) => {\n    return getNewHighlightedOption(options, state.highlightedValue, diff, direction, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, wrapAround, optionComparer);\n  };\n  switch (event.key) {\n    case 'Home':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight('start', 'next', false)\n      });\n    case 'End':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight('end', 'previous', false)\n      });\n    case 'PageUp':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(-pageSize, 'previous', false)\n      });\n    case 'PageDown':\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(pageSize, 'next', false)\n      });\n    case 'ArrowUp':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(-1, 'previous', !(disableListWrap != null ? disableListWrap : false))\n      });\n    case 'ArrowDown':\n      // TODO: extend current selection with Shift modifier\n      return _extends({}, state, {\n        highlightedValue: moveHighlight(1, 'next', !(disableListWrap != null ? disableListWrap : false))\n      });\n    case 'Enter':\n    case ' ':\n      if (state.highlightedValue === null) {\n        return state;\n      }\n      return handleOptionSelection(state.highlightedValue, state, props);\n    default:\n      break;\n  }\n  return state;\n}\nfunction handleBlur(state) {\n  return _extends({}, state, {\n    highlightedValue: null\n  });\n}\nconst textCriteriaMatches = (nextFocus, searchString, stringifyOption) => {\n  var _stringifyOption;\n  const text = (_stringifyOption = stringifyOption(nextFocus)) == null ? void 0 : _stringifyOption.trim().toLowerCase();\n  if (!text || text.length === 0) {\n    // Make option not navigable if stringification fails or results in empty string.\n    return false;\n  }\n  return text.indexOf(searchString) === 0;\n};\nfunction handleTextNavigation(state, searchString, props) {\n  const {\n    options,\n    isOptionDisabled,\n    disableListWrap,\n    disabledItemsFocusable,\n    optionComparer,\n    optionStringifier\n  } = props;\n  const moveHighlight = previouslyHighlightedOption => {\n    return getNewHighlightedOption(options, previouslyHighlightedOption, 1, 'next', disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, !(disableListWrap != null ? disableListWrap : false), optionComparer);\n  };\n  const startWithCurrentOption = searchString.length > 1;\n  let nextOption = startWithCurrentOption ? state.highlightedValue : moveHighlight(state.highlightedValue);\n\n  // use `for` instead of `while` prevent infinite loop\n  for (let index = 0; index < options.length; index += 1) {\n    // Return un-mutated state if looped back to the currently highlighted value\n    if (!nextOption || !startWithCurrentOption && state.highlightedValue === nextOption) {\n      return state;\n    }\n    if (textCriteriaMatches(nextOption, searchString, optionStringifier) && (!isOptionDisabled(nextOption, options.indexOf(nextOption)) || disabledItemsFocusable)) {\n      // The nextOption is the element to be highlighted\n      return _extends({}, state, {\n        highlightedValue: nextOption\n      });\n    }\n    // Move to the next element.\n    nextOption = moveHighlight(nextOption);\n  }\n\n  // No option match text search criteria\n  return state;\n}\nfunction handleOptionsChange(options, previousOptions, state, props) {\n  var _options$find, _options$find2;\n  const {\n    multiple,\n    optionComparer\n  } = props;\n  const newHighlightedOption = state.highlightedValue == null ? null : (_options$find = options.find(option => optionComparer(option, state.highlightedValue))) != null ? _options$find : null;\n  if (multiple) {\n    var _ref3;\n    // exclude selected values that are no longer in the options\n    const selectedValues = (_ref3 = state.selectedValue) != null ? _ref3 : [];\n    const newSelectedValues = selectedValues.filter(selectedValue => options.some(option => optionComparer(option, selectedValue)));\n    return {\n      highlightedValue: newHighlightedOption,\n      selectedValue: newSelectedValues\n    };\n  }\n  const newSelectedValue = (_options$find2 = options.find(option => optionComparer(option, state.selectedValue))) != null ? _options$find2 : null;\n  return {\n    highlightedValue: newHighlightedOption,\n    selectedValue: newSelectedValue\n  };\n}\nexport default function defaultListboxReducer(state, action) {\n  const {\n    type\n  } = action;\n  switch (type) {\n    case ActionTypes.keyDown:\n      return handleKeyDown(action.event, state, action.props);\n    case ActionTypes.optionClick:\n      return handleOptionSelection(action.option, state, action.props);\n    case ActionTypes.blur:\n      return handleBlur(state);\n    case ActionTypes.setValue:\n      return _extends({}, state, {\n        selectedValue: action.value\n      });\n    case ActionTypes.setHighlight:\n      return _extends({}, state, {\n        highlightedValue: action.highlight\n      });\n    case ActionTypes.textNavigation:\n      return handleTextNavigation(state, action.searchString, action.props);\n    case ActionTypes.optionsChange:\n      return handleOptionsChange(action.options, action.previousOptions, state, action.props);\n    default:\n      return state;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}