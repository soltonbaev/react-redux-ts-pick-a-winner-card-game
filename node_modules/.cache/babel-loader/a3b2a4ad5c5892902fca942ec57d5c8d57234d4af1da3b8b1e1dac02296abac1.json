{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { BASE_URL } from '../consts';\nexport const useGlobalState = () => {\n  _s();\n  return useSelector(state => {\n    return state;\n  });\n};\n_s(useGlobalState, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\nexport const drawCards = createAsyncThunk('deck/drawCards', async deck_id => {\n  const response = await axios.get(BASE_URL + deck_id + '/draw/?count=2 ');\n  console.log(response.data);\n  return response.data;\n});\nexport const getDeck = createAsyncThunk('deck/getDeck', async deck_id => {\n  const response = await axios.get(BASE_URL + deck_id);\n  console.log(response.data);\n  return response.data;\n});\nexport function getFromLocalStorage() {\n  return localStorage.getItem(JSON.parse('gameData'));\n}","map":{"version":3,"names":["createAsyncThunk","axios","useSelector","BASE_URL","useGlobalState","_s","state","drawCards","deck_id","response","get","console","log","data","getDeck","getFromLocalStorage","localStorage","getItem","JSON","parse"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-bridge-card-game/src/helpers/CRUD/read.ts"],"sourcesContent":["import {createAsyncThunk} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {useSelector} from 'react-redux';\nimport {RootState, useAppDispatch} from '../../redux-store/store';\nimport {BASE_URL} from '../consts';\n\nexport const useGlobalState = () => {\n   return useSelector((state: RootState) => {\n      return state;\n   });\n};\n\nexport const drawCards = createAsyncThunk(\n   'deck/drawCards',\n   async (deck_id: string | undefined) => {\n      const response = await axios.get(BASE_URL + deck_id + '/draw/?count=2 ');\n      console.log(response.data);\n      return response.data;\n   }\n);\n\nexport const getDeck = createAsyncThunk(\n   'deck/getDeck',\n   async (deck_id: string | undefined) => {\n      const response = await axios.get(BASE_URL + deck_id);\n      console.log(response.data);\n      return response.data;\n   }\n);\n\nexport function getFromLocalStorage() {\n   return localStorage.getItem(JSON.parse('gameData'));\n}\n"],"mappings":";AAAA,SAAQA,gBAAgB,QAAO,kBAAkB;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,aAAa;AAEvC,SAAQC,QAAQ,QAAO,WAAW;AAElC,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,OAAOH,WAAW,CAAEI,KAAgB,IAAK;IACtC,OAAOA,KAAK;EACf,CAAC,CAAC;AACL,CAAC;AAACD,EAAA,CAJWD,cAAc;EAAA,QACjBF,WAAW;AAAA;AAKrB,OAAO,MAAMK,SAAS,GAAGP,gBAAgB,CACtC,gBAAgB,EAChB,MAAOQ,OAA2B,IAAK;EACpC,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACP,QAAQ,GAAGK,OAAO,GAAG,iBAAiB,CAAC;EACxEG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAC1B,OAAOJ,QAAQ,CAACI,IAAI;AACvB,CAAC,CACH;AAED,OAAO,MAAMC,OAAO,GAAGd,gBAAgB,CACpC,cAAc,EACd,MAAOQ,OAA2B,IAAK;EACpC,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACP,QAAQ,GAAGK,OAAO,CAAC;EACpDG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAC1B,OAAOJ,QAAQ,CAACI,IAAI;AACvB,CAAC,CACH;AAED,OAAO,SAASE,mBAAmBA,CAAA,EAAG;EACnC,OAAOC,YAAY,CAACC,OAAO,CAACC,IAAI,CAACC,KAAK,CAAC,UAAU,CAAC,CAAC;AACtD"},"metadata":{},"sourceType":"module","externalDependencies":[]}