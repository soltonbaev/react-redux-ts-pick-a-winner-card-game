{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { TODOS } from '../helpers/consts';\nconst initialState = {\n  todos: [],\n  tasks: []\n  //    notes: [],\n  //    type: '',\n  //    title: '',\n};\n\nexport const RootReducer = createSlice({\n  name: 'todo_app',\n  initialState,\n  reducers: {\n    //   addToDo: (state, action) => {\n    //      state.todos.push(action.payload);\n    //      //  console.log('Current state', current(state));\n    //   },\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    }\n    //   addNotes: (state, action) => {\n    //      state.notes.push(action.payload);\n    //   },\n  },\n\n  extraReducers(builder) {\n    // omit posts loading reducers\n    builder.addCase(addToDo.fulfilled, (state, action) => {\n      // We can directly add the new post object to our posts array\n      state.todos.push(action.payload);\n    });\n  }\n});\nexport const addToDo = createAsyncThunk('todos/addToDo', async toDo => {\n  const response = await axios.post(TODOS, toDo);\n  return response.data;\n});\n\n// export const {addToDo} = RootReducer.actions;\nexport default RootReducer.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","TODOS","initialState","todos","tasks","RootReducer","name","reducers","addTask","state","action","push","payload","extraReducers","builder","addCase","addToDo","fulfilled","toDo","response","post","data","reducer"],"sources":["/Users/ibraim/Desktop/====RESOURCES/-=PERMANENT=-/-=CRAFT/-=TECH/-=CODE/-=MY-CODE/-PROJECTS-/SOLO/react-ts-redux-rainbow-todo/src/redux-store/RootReducer.ts"],"sourcesContent":["import React from 'react';\nimport {createAsyncThunk, createSlice, current} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport {TODOS} from '../helpers/consts';\nimport {GlobalState, Todo} from '../helpers/types';\n\nconst initialState: GlobalState = {\n   todos: [],\n   tasks: [],\n   //    notes: [],\n   //    type: '',\n   //    title: '',\n};\n\nexport const RootReducer = createSlice({\n   name: 'todo_app',\n   initialState,\n   reducers: {\n      //   addToDo: (state, action) => {\n      //      state.todos.push(action.payload);\n      //      //  console.log('Current state', current(state));\n      //   },\n      addTask: (state, action) => {\n         state.tasks.push(action.payload);\n      },\n      //   addNotes: (state, action) => {\n      //      state.notes.push(action.payload);\n      //   },\n   },\n   extraReducers(builder) {\n      // omit posts loading reducers\n      builder.addCase(addToDo.fulfilled, (state, action) => {\n         // We can directly add the new post object to our posts array\n         state.todos.push(action.payload);\n      });\n   },\n});\n\nexport const addToDo = createAsyncThunk<Todo[]>('todos/addToDo', async toDo => {\n   const response = await axios.post(TODOS, toDo);\n   return response.data as Todo;\n});\n\n// export const {addToDo} = RootReducer.actions;\nexport default RootReducer.reducer;\n"],"mappings":"AACA,SAAQA,gBAAgB,EAAEC,WAAW,QAAgB,kBAAkB;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,QAAO,mBAAmB;AAGvC,MAAMC,YAAyB,GAAG;EAC/BC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;EACP;EACA;EACA;AACH,CAAC;;AAED,OAAO,MAAMC,WAAW,GAAGN,WAAW,CAAC;EACpCO,IAAI,EAAE,UAAU;EAChBJ,YAAY;EACZK,QAAQ,EAAE;IACP;IACA;IACA;IACA;IACAC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzBD,KAAK,CAACL,KAAK,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACnC;IACA;IACA;IACA;EACH,CAAC;;EACDC,aAAaA,CAACC,OAAO,EAAE;IACpB;IACAA,OAAO,CAACC,OAAO,CAACC,OAAO,CAACC,SAAS,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MACnD;MACAD,KAAK,CAACN,KAAK,CAACQ,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACnC,CAAC,CAAC;EACL;AACH,CAAC,CAAC;AAEF,OAAO,MAAMI,OAAO,GAAGlB,gBAAgB,CAAS,eAAe,EAAE,MAAMoB,IAAI,IAAI;EAC5E,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAACnB,KAAK,EAAEiB,IAAI,CAAC;EAC9C,OAAOC,QAAQ,CAACE,IAAI;AACvB,CAAC,CAAC;;AAEF;AACA,eAAehB,WAAW,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}